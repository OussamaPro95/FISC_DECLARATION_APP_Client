{"ast":null,"code":"import _slicedToArray from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Subject, Observable, merge, ReplaySubject, combineLatest, fromEvent } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport autoScroll from '@mattlewis92/dom-autoscroller';\nimport { Injectable, Directive, ElementRef, Input, Renderer2, Output, EventEmitter, NgZone, Inject, ViewContainerRef, Optional, NgModule, defineInjectable } from '@angular/core';\nimport { map, mergeMap, takeUntil, take, takeLast, pairwise, share, filter, count, startWith, distinctUntilChanged } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar DraggableHelper = function DraggableHelper() {\n  _classCallCheck(this, DraggableHelper);\n\n  this.currentDrag = new Subject();\n};\n\nDraggableHelper.ɵfac = function DraggableHelper_Factory(t) {\n  return new (t || DraggableHelper)();\n};\n\nDraggableHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DraggableHelper,\n  factory: DraggableHelper.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nDraggableHelper.ngInjectableDef = defineInjectable({\n  factory: function DraggableHelper_Factory() {\n    return new DraggableHelper();\n  },\n  token: DraggableHelper,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\n * ```html\n * <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\n * <div mwlDraggable>Drag me!</div>\n * </div>\n * ```\n */\n\n\nvar DraggableScrollContainerDirective =\n/**\n * @hidden\n * @param {?} elementRef\n */\nfunction DraggableScrollContainerDirective(elementRef) {\n  _classCallCheck(this, DraggableScrollContainerDirective);\n\n  this.elementRef = elementRef;\n  /**\n   * Trigger the DragStart after a long touch in scrollable container when true\n   * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n   */\n\n  this.activeLongPressDrag = false;\n  /**\n   * Configuration of a long touch\n   * Duration in ms of a long touch before activating DragStart\n   * Delta of the\n   * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n   */\n\n  this.longPressConfig = {\n    duration: 300,\n    delta: 30\n  };\n};\n\nDraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) {\n  return new (t || DraggableScrollContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDraggableScrollContainerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableScrollContainerDirective,\n  selectors: [[\"\", \"mwlDraggableScrollContainer\", \"\"]],\n  inputs: {\n    activeLongPressDrag: \"activeLongPressDrag\",\n    longPressConfig: \"longPressConfig\"\n  }\n});\n/** @nocollapse */\n\nDraggableScrollContainerDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nDraggableScrollContainerDirective.propDecorators = {\n  activeLongPressDrag: [{\n    type: Input\n  }],\n  longPressConfig: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggableScrollContainer]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    activeLongPressDrag: [{\n      type: Input\n    }],\n    longPressConfig: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToAdd\n * @return {?}\n */\n\n\nfunction addClass(renderer, element, classToAdd) {\n  if (classToAdd) {\n    classToAdd.split(' ').forEach(\n    /**\n    * @param {?} className\n    * @return {?}\n    */\n    function (className) {\n      return renderer.addClass(element.nativeElement, className);\n    });\n  }\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToRemove\n * @return {?}\n */\n\n\nfunction removeClass(renderer, element, classToRemove) {\n  if (classToRemove) {\n    classToRemove.split(' ').forEach(\n    /**\n    * @param {?} className\n    * @return {?}\n    */\n    function (className) {\n      return renderer.removeClass(element.nativeElement, className);\n    });\n  }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar DraggableDirective = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} element\n   * @param {?} renderer\n   * @param {?} draggableHelper\n   * @param {?} zone\n   * @param {?} vcr\n   * @param {?} scrollContainer\n   * @param {?} document\n   */\n  function DraggableDirective(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {\n    _classCallCheck(this, DraggableDirective);\n\n    this.element = element;\n    this.renderer = renderer;\n    this.draggableHelper = draggableHelper;\n    this.zone = zone;\n    this.vcr = vcr;\n    this.scrollContainer = scrollContainer;\n    this.document = document;\n    /**\n     * The axis along which the element is draggable\n     */\n\n    this.dragAxis = {\n      x: true,\n      y: true\n    };\n    /**\n     * Snap all drags to an x / y grid\n     */\n\n    this.dragSnapGrid = {};\n    /**\n     * Show a ghost element that shows the drag when dragging\n     */\n\n    this.ghostDragEnabled = true;\n    /**\n     * Show the original element when ghostDragEnabled is true\n     */\n\n    this.showOriginalElementWhileDragging = false;\n    /**\n     * The cursor to use when hovering over a draggable element\n     */\n\n    this.dragCursor = '';\n    /*\n       * Options used to control the behaviour of auto scrolling: https://www.npmjs.com/package/dom-autoscroller\n       */\n\n    this.autoScroll = {\n      margin: 20\n    };\n    /**\n     * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n     */\n\n    this.dragPointerDown = new EventEmitter();\n    /**\n     * Called when the element has started to be dragged.\n     * Only called after at least one mouse or touch move event.\n     * If you call $event.cancelDrag$.emit() it will cancel the current drag\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * Called after the ghost element has been created\n     */\n\n    this.ghostElementCreated = new EventEmitter();\n    /**\n     * Called when the element is being dragged\n     */\n\n    this.dragging = new EventEmitter();\n    /**\n     * Called after the element is dragged\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.pointerDown$ = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.pointerMove$ = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.pointerUp$ = new Subject();\n    this.eventListenerSubscriptions = {};\n    this.destroy$ = new Subject();\n    this.timeLongPress = {\n      timerBegin: 0,\n      timerEnd: 0\n    };\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DraggableDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.checkEventListeners();\n      /** @type {?} */\n\n      var pointerDragged$ = this.pointerDown$.pipe(filter(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this.canDrag();\n      }), mergeMap(\n      /**\n      * @param {?} pointerDownEvent\n      * @return {?}\n      */\n      function (pointerDownEvent) {\n        // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n        // stop mouse events propagating up the chain\n        if (pointerDownEvent.event.stopPropagation && !_this.scrollContainer) {\n          pointerDownEvent.event.stopPropagation();\n        } // hack to prevent text getting selected in safari while dragging\n\n        /** @type {?} */\n\n\n        var globalDragStyle = _this.renderer.createElement('style');\n\n        _this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n\n        _this.renderer.appendChild(globalDragStyle, _this.renderer.createText(\"\\n          body * {\\n           -moz-user-select: none;\\n           -ms-user-select: none;\\n           -webkit-user-select: none;\\n           user-select: none;\\n          }\\n        \"));\n\n        requestAnimationFrame(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this.document.head.appendChild(globalDragStyle);\n        });\n        /** @type {?} */\n\n        var startScrollPosition = _this.getScrollPosition();\n        /** @type {?} */\n\n\n        var scrollContainerScroll$ = new Observable(\n        /**\n        * @param {?} observer\n        * @return {?}\n        */\n        function (observer) {\n          /** @type {?} */\n          var scrollContainer = _this.scrollContainer ? _this.scrollContainer.elementRef.nativeElement : 'window';\n          return _this.renderer.listen(scrollContainer, 'scroll',\n          /**\n          * @param {?} e\n          * @return {?}\n          */\n          function (e) {\n            return observer.next(e);\n          });\n        }).pipe(startWith(startScrollPosition), map(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this.getScrollPosition();\n        }));\n        /** @type {?} */\n\n        var currentDrag$ = new Subject();\n        /** @type {?} */\n\n        var cancelDrag$ = new ReplaySubject();\n\n        _this.zone.run(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this.dragPointerDown.next({\n            x: 0,\n            y: 0\n          });\n        });\n        /** @type {?} */\n\n\n        var dragComplete$ = merge(_this.pointerUp$, _this.pointerDown$, cancelDrag$, _this.destroy$).pipe(share());\n        /** @type {?} */\n\n        var pointerMove = combineLatest([_this.pointerMove$, scrollContainerScroll$]).pipe(map(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              pointerMoveEvent = _ref2[0],\n              scroll = _ref2[1];\n\n          return {\n            currentDrag$: currentDrag$,\n            transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n            transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n            clientX: pointerMoveEvent.clientX,\n            clientY: pointerMoveEvent.clientY,\n            scrollLeft: scroll.left,\n            scrollTop: scroll.top,\n            target: pointerMoveEvent.event.target\n          };\n        }), map(\n        /**\n        * @param {?} moveData\n        * @return {?}\n        */\n        function (moveData) {\n          if (_this.dragSnapGrid.x) {\n            moveData.transformX = Math.round(moveData.transformX / _this.dragSnapGrid.x) * _this.dragSnapGrid.x;\n          }\n\n          if (_this.dragSnapGrid.y) {\n            moveData.transformY = Math.round(moveData.transformY / _this.dragSnapGrid.y) * _this.dragSnapGrid.y;\n          }\n\n          return moveData;\n        }), map(\n        /**\n        * @param {?} moveData\n        * @return {?}\n        */\n        function (moveData) {\n          if (!_this.dragAxis.x) {\n            moveData.transformX = 0;\n          }\n\n          if (!_this.dragAxis.y) {\n            moveData.transformY = 0;\n          }\n\n          return moveData;\n        }), map(\n        /**\n        * @param {?} moveData\n        * @return {?}\n        */\n        function (moveData) {\n          /** @type {?} */\n          var scrollX = moveData.scrollLeft - startScrollPosition.left;\n          /** @type {?} */\n\n          var scrollY = moveData.scrollTop - startScrollPosition.top;\n          return Object.assign({}, moveData, {\n            x: moveData.transformX + scrollX,\n            y: moveData.transformY + scrollY\n          });\n        }), filter(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref3) {\n          var x = _ref3.x,\n              y = _ref3.y,\n              transformX = _ref3.transformX,\n              transformY = _ref3.transformY;\n          return !_this.validateDrag || _this.validateDrag({\n            x: x,\n            y: y,\n            transform: {\n              x: transformX,\n              y: transformY\n            }\n          });\n        }), takeUntil(dragComplete$), share());\n        /** @type {?} */\n\n        var dragStarted$ = pointerMove.pipe(take(1), share());\n        /** @type {?} */\n\n        var dragEnded$ = pointerMove.pipe(takeLast(1), share());\n        dragStarted$.subscribe(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref4) {\n          var clientX = _ref4.clientX,\n              clientY = _ref4.clientY,\n              x = _ref4.x,\n              y = _ref4.y;\n\n          _this.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this.dragStart.next({\n              cancelDrag$: cancelDrag$\n            });\n          });\n\n          _this.scroller = autoScroll([_this.scrollContainer ? _this.scrollContainer.elementRef.nativeElement : _this.document.defaultView], Object.assign({}, _this.autoScroll, {\n            /**\n            * @return {?}\n            */\n            autoScroll: function autoScroll() {\n              return true;\n            }\n          }));\n          addClass(_this.renderer, _this.element, _this.dragActiveClass);\n\n          if (_this.ghostDragEnabled) {\n            /** @type {?} */\n            var rect = _this.element.nativeElement.getBoundingClientRect();\n            /** @type {?} */\n\n\n            var clone = _this.element.nativeElement.cloneNode(true);\n\n            if (!_this.showOriginalElementWhileDragging) {\n              _this.renderer.setStyle(_this.element.nativeElement, 'visibility', 'hidden');\n            }\n\n            if (_this.ghostElementAppendTo) {\n              _this.ghostElementAppendTo.appendChild(clone);\n            } else {\n              _this.element.nativeElement.parentNode.insertBefore(clone, _this.element.nativeElement.nextSibling);\n            }\n\n            _this.ghostElement = clone;\n            _this.document.body.style.cursor = _this.dragCursor;\n\n            _this.setElementStyles(clone, {\n              position: 'fixed',\n              top: \"\".concat(rect.top, \"px\"),\n              left: \"\".concat(rect.left, \"px\"),\n              width: \"\".concat(rect.width, \"px\"),\n              height: \"\".concat(rect.height, \"px\"),\n              cursor: _this.dragCursor,\n              margin: '0',\n              willChange: 'transform',\n              pointerEvents: 'none'\n            });\n\n            if (_this.ghostElementTemplate) {\n              /** @type {?} */\n              var viewRef = _this.vcr.createEmbeddedView(_this.ghostElementTemplate);\n\n              clone.innerHTML = '';\n              viewRef.rootNodes.filter(\n              /**\n              * @param {?} node\n              * @return {?}\n              */\n              function (node) {\n                return node instanceof Node;\n              }).forEach(\n              /**\n              * @param {?} node\n              * @return {?}\n              */\n              function (node) {\n                clone.appendChild(node);\n              });\n              dragEnded$.subscribe(\n              /**\n              * @return {?}\n              */\n              function () {\n                _this.vcr.remove(_this.vcr.indexOf(viewRef));\n              });\n            }\n\n            _this.zone.run(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this.ghostElementCreated.emit({\n                clientX: clientX - x,\n                clientY: clientY - y,\n                element: clone\n              });\n            });\n\n            dragEnded$.subscribe(\n            /**\n            * @return {?}\n            */\n            function () {\n              clone.parentElement.removeChild(clone);\n              _this.ghostElement = null;\n\n              _this.renderer.setStyle(_this.element.nativeElement, 'visibility', '');\n            });\n          }\n\n          _this.draggableHelper.currentDrag.next(currentDrag$);\n        });\n        dragEnded$.pipe(mergeMap(\n        /**\n        * @param {?} dragEndData\n        * @return {?}\n        */\n        function (dragEndData) {\n          /** @type {?} */\n          var dragEndData$ = cancelDrag$.pipe(count(), take(1), map(\n          /**\n          * @param {?} calledCount\n          * @return {?}\n          */\n          function (calledCount) {\n            return Object.assign({}, dragEndData, {\n              dragCancelled: calledCount > 0\n            });\n          }));\n          cancelDrag$.complete();\n          return dragEndData$;\n        })).subscribe(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref5) {\n          var x = _ref5.x,\n              y = _ref5.y,\n              dragCancelled = _ref5.dragCancelled;\n\n          _this.scroller.destroy();\n\n          _this.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this.dragEnd.next({\n              x: x,\n              y: y,\n              dragCancelled: dragCancelled\n            });\n          });\n\n          removeClass(_this.renderer, _this.element, _this.dragActiveClass);\n          currentDrag$.complete();\n        });\n        merge(dragComplete$, dragEnded$).pipe(take(1)).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          requestAnimationFrame(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this.document.head.removeChild(globalDragStyle);\n          });\n        });\n        return pointerMove;\n      }), share());\n      merge(pointerDragged$.pipe(take(1), map(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        return [, value];\n      })), pointerDragged$.pipe(pairwise())).pipe(filter(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            previous = _ref7[0],\n            next = _ref7[1];\n\n        if (!previous) {\n          return true;\n        }\n\n        return previous.x !== next.x || previous.y !== next.y;\n      }), map(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 2),\n            previous = _ref9[0],\n            next = _ref9[1];\n\n        return next;\n      })).subscribe(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      function (_ref10) {\n        var x = _ref10.x,\n            y = _ref10.y,\n            currentDrag$ = _ref10.currentDrag$,\n            clientX = _ref10.clientX,\n            clientY = _ref10.clientY,\n            transformX = _ref10.transformX,\n            transformY = _ref10.transformY,\n            target = _ref10.target;\n\n        _this.zone.run(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this.dragging.next({\n            x: x,\n            y: y\n          });\n        });\n\n        requestAnimationFrame(\n        /**\n        * @return {?}\n        */\n        function () {\n          if (_this.ghostElement) {\n            /** @type {?} */\n            var transform = \"translate3d(\".concat(transformX, \"px, \").concat(transformY, \"px, 0px)\");\n\n            _this.setElementStyles(_this.ghostElement, {\n              transform: transform,\n              '-webkit-transform': transform,\n              '-ms-transform': transform,\n              '-moz-transform': transform,\n              '-o-transform': transform\n            });\n          }\n        });\n        currentDrag$.next({\n          clientX: clientX,\n          clientY: clientY,\n          dropData: _this.dropData,\n          target: target\n        });\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.dragAxis) {\n        this.checkEventListeners();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribeEventListeners();\n      this.pointerDown$.complete();\n      this.pointerMove$.complete();\n      this.pointerUp$.complete();\n      this.destroy$.next();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkEventListeners\",\n    value: function checkEventListeners() {\n      var _this2 = this;\n\n      /** @type {?} */\n      var canDrag = this.canDrag();\n      /** @type {?} */\n\n      var hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n\n      if (canDrag && !hasEventListeners) {\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this2.eventListenerSubscriptions.mousedown = _this2.renderer.listen(_this2.element.nativeElement, 'mousedown',\n          /**\n          * @param {?} event\n          * @return {?}\n          */\n          function (event) {\n            _this2.onMouseDown(event);\n          });\n          _this2.eventListenerSubscriptions.mouseup = _this2.renderer.listen('document', 'mouseup',\n          /**\n          * @param {?} event\n          * @return {?}\n          */\n          function (event) {\n            _this2.onMouseUp(event);\n          });\n          _this2.eventListenerSubscriptions.touchstart = _this2.renderer.listen(_this2.element.nativeElement, 'touchstart',\n          /**\n          * @param {?} event\n          * @return {?}\n          */\n          function (event) {\n            _this2.onTouchStart(event);\n          });\n          _this2.eventListenerSubscriptions.touchend = _this2.renderer.listen('document', 'touchend',\n          /**\n          * @param {?} event\n          * @return {?}\n          */\n          function (event) {\n            _this2.onTouchEnd(event);\n          });\n          _this2.eventListenerSubscriptions.touchcancel = _this2.renderer.listen('document', 'touchcancel',\n          /**\n          * @param {?} event\n          * @return {?}\n          */\n          function (event) {\n            _this2.onTouchEnd(event);\n          });\n          _this2.eventListenerSubscriptions.mouseenter = _this2.renderer.listen(_this2.element.nativeElement, 'mouseenter',\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.onMouseEnter();\n          });\n          _this2.eventListenerSubscriptions.mouseleave = _this2.renderer.listen(_this2.element.nativeElement, 'mouseleave',\n          /**\n          * @return {?}\n          */\n          function () {\n            _this2.onMouseLeave();\n          });\n        });\n      } else if (!canDrag && hasEventListeners) {\n        this.unsubscribeEventListeners();\n      }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      var _this3 = this;\n\n      if (event.button === 0) {\n        if (!this.eventListenerSubscriptions.mousemove) {\n          this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove',\n          /**\n          * @param {?} mouseMoveEvent\n          * @return {?}\n          */\n          function (mouseMoveEvent) {\n            _this3.pointerMove$.next({\n              event: mouseMoveEvent,\n              clientX: mouseMoveEvent.clientX,\n              clientY: mouseMoveEvent.clientY\n            });\n          });\n        }\n\n        this.pointerDown$.next({\n          event: event,\n          clientX: event.clientX,\n          clientY: event.clientY\n        });\n      }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      if (event.button === 0) {\n        if (this.eventListenerSubscriptions.mousemove) {\n          this.eventListenerSubscriptions.mousemove();\n          delete this.eventListenerSubscriptions.mousemove;\n        }\n\n        this.pointerUp$.next({\n          event: event,\n          clientX: event.clientX,\n          clientY: event.clientY\n        });\n      }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      var _this4 = this;\n\n      /** @type {?} */\n      var startScrollPosition;\n      /** @type {?} */\n\n      var isDragActivated;\n      /** @type {?} */\n\n      var hasContainerScrollbar;\n\n      if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {\n        this.timeLongPress.timerBegin = Date.now();\n        isDragActivated = false;\n        hasContainerScrollbar = this.hasScrollbar();\n        startScrollPosition = this.getScrollPosition();\n      }\n\n      if (!this.eventListenerSubscriptions.touchmove) {\n        /** @type {?} */\n        var contextMenuListener = fromEvent(this.document, 'contextmenu').subscribe(\n        /**\n        * @param {?} e\n        * @return {?}\n        */\n        function (e) {\n          e.preventDefault();\n        });\n        /** @type {?} */\n\n        var touchMoveListener = fromEvent(this.document, 'touchmove', {\n          passive: false\n        }).subscribe(\n        /**\n        * @param {?} touchMoveEvent\n        * @return {?}\n        */\n        function (touchMoveEvent) {\n          if ((_this4.scrollContainer && _this4.scrollContainer.activeLongPressDrag || _this4.touchStartLongPress) && !isDragActivated && hasContainerScrollbar) {\n            isDragActivated = _this4.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);\n          }\n\n          if ((!_this4.scrollContainer || !_this4.scrollContainer.activeLongPressDrag) && !_this4.touchStartLongPress || !hasContainerScrollbar || isDragActivated) {\n            touchMoveEvent.preventDefault();\n\n            _this4.pointerMove$.next({\n              event: touchMoveEvent,\n              clientX: touchMoveEvent.targetTouches[0].clientX,\n              clientY: touchMoveEvent.targetTouches[0].clientY\n            });\n          }\n        });\n\n        this.eventListenerSubscriptions.touchmove =\n        /**\n        * @return {?}\n        */\n        function () {\n          contextMenuListener.unsubscribe();\n          touchMoveListener.unsubscribe();\n        };\n      }\n\n      this.pointerDown$.next({\n        event: event,\n        clientX: event.touches[0].clientX,\n        clientY: event.touches[0].clientY\n      });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (this.eventListenerSubscriptions.touchmove) {\n        this.eventListenerSubscriptions.touchmove();\n        delete this.eventListenerSubscriptions.touchmove;\n\n        if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {\n          this.enableScroll();\n        }\n      }\n\n      this.pointerUp$.next({\n        event: event,\n        clientX: event.changedTouches[0].clientX,\n        clientY: event.changedTouches[0].clientY\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.setCursor(this.dragCursor);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.setCursor('');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      return this.dragAxis.x || this.dragAxis.y;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setCursor\",\n    value: function setCursor(value) {\n      if (!this.eventListenerSubscriptions.mousemove) {\n        this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeEventListeners\",\n    value: function unsubscribeEventListeners() {\n      var _this5 = this;\n\n      Object.keys(this.eventListenerSubscriptions).forEach(\n      /**\n      * @param {?} type\n      * @return {?}\n      */\n      function (type) {\n        _this5.eventListenerSubscriptions[type]();\n\n        delete _this5.eventListenerSubscriptions[type];\n      });\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styles\n     * @return {?}\n     */\n\n  }, {\n    key: \"setElementStyles\",\n    value: function setElementStyles(element, styles) {\n      var _this6 = this;\n\n      Object.keys(styles).forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        _this6.renderer.setStyle(element, key, styles[key]);\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getScrollElement\",\n    value: function getScrollElement() {\n      if (this.scrollContainer) {\n        return this.scrollContainer.elementRef.nativeElement;\n      } else {\n        return this.document.body;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getScrollPosition\",\n    value: function getScrollPosition() {\n      if (this.scrollContainer) {\n        return {\n          top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n          left: this.scrollContainer.elementRef.nativeElement.scrollLeft\n        };\n      } else {\n        return {\n          top: window.pageYOffset || this.document.documentElement.scrollTop,\n          left: window.pageXOffset || this.document.documentElement.scrollLeft\n        };\n      }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} touchMoveEvent\n     * @param {?} startScrollPosition\n     * @return {?}\n     */\n\n  }, {\n    key: \"shouldBeginDrag\",\n    value: function shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {\n      /** @type {?} */\n      var moveScrollPosition = this.getScrollPosition();\n      /** @type {?} */\n\n      var deltaScroll = {\n        top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n        left: Math.abs(moveScrollPosition.left - startScrollPosition.left)\n      };\n      /** @type {?} */\n\n      var deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;\n      /** @type {?} */\n\n      var deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;\n      /** @type {?} */\n\n      var deltaTotal = deltaX + deltaY;\n      /** @type {?} */\n\n      var longPressConfig = this.touchStartLongPress ? this.touchStartLongPress :\n      /* istanbul ignore next */\n      {\n        delta: this.scrollContainer.longPressConfig.delta,\n        delay: this.scrollContainer.longPressConfig.duration\n      };\n\n      if (deltaTotal > longPressConfig.delta || deltaScroll.top > 0 || deltaScroll.left > 0) {\n        this.timeLongPress.timerBegin = Date.now();\n      }\n\n      this.timeLongPress.timerEnd = Date.now();\n      /** @type {?} */\n\n      var duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n\n      if (duration >= longPressConfig.delay) {\n        this.disableScroll();\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"enableScroll\",\n    value: function enableScroll() {\n      if (this.scrollContainer) {\n        this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');\n      }\n\n      this.renderer.setStyle(this.document.body, 'overflow', '');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableScroll\",\n    value: function disableScroll() {\n      /* istanbul ignore next */\n      if (this.scrollContainer) {\n        this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');\n      }\n\n      this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasScrollbar\",\n    value: function hasScrollbar() {\n      /** @type {?} */\n      var scrollContainer = this.getScrollElement();\n      /** @type {?} */\n\n      var containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;\n      /** @type {?} */\n\n      var containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n      return containerHasHorizontalScroll || containerHasVerticalScroll;\n    }\n  }]);\n\n  return DraggableDirective;\n}();\n\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) {\n  return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nDraggableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableDirective,\n  selectors: [[\"\", \"mwlDraggable\", \"\"]],\n  inputs: {\n    dragAxis: \"dragAxis\",\n    dragSnapGrid: \"dragSnapGrid\",\n    ghostDragEnabled: \"ghostDragEnabled\",\n    showOriginalElementWhileDragging: \"showOriginalElementWhileDragging\",\n    dragCursor: \"dragCursor\",\n    autoScroll: \"autoScroll\",\n    dropData: \"dropData\",\n    validateDrag: \"validateDrag\",\n    dragActiveClass: \"dragActiveClass\",\n    ghostElementAppendTo: \"ghostElementAppendTo\",\n    ghostElementTemplate: \"ghostElementTemplate\",\n    touchStartLongPress: \"touchStartLongPress\"\n  },\n  outputs: {\n    dragPointerDown: \"dragPointerDown\",\n    dragStart: \"dragStart\",\n    ghostElementCreated: \"ghostElementCreated\",\n    dragging: \"dragging\",\n    dragEnd: \"dragEnd\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nDraggableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: DraggableHelper\n  }, {\n    type: NgZone\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: DraggableScrollContainerDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nDraggableDirective.propDecorators = {\n  dropData: [{\n    type: Input\n  }],\n  dragAxis: [{\n    type: Input\n  }],\n  dragSnapGrid: [{\n    type: Input\n  }],\n  ghostDragEnabled: [{\n    type: Input\n  }],\n  showOriginalElementWhileDragging: [{\n    type: Input\n  }],\n  validateDrag: [{\n    type: Input\n  }],\n  dragCursor: [{\n    type: Input\n  }],\n  dragActiveClass: [{\n    type: Input\n  }],\n  ghostElementAppendTo: [{\n    type: Input\n  }],\n  ghostElementTemplate: [{\n    type: Input\n  }],\n  touchStartLongPress: [{\n    type: Input\n  }],\n  autoScroll: [{\n    type: Input\n  }],\n  dragPointerDown: [{\n    type: Output\n  }],\n  dragStart: [{\n    type: Output\n  }],\n  ghostElementCreated: [{\n    type: Output\n  }],\n  dragging: [{\n    type: Output\n  }],\n  dragEnd: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDraggable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: DraggableHelper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: DraggableScrollContainerDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    dragAxis: [{\n      type: Input\n    }],\n    dragSnapGrid: [{\n      type: Input\n    }],\n    ghostDragEnabled: [{\n      type: Input\n    }],\n    showOriginalElementWhileDragging: [{\n      type: Input\n    }],\n    dragCursor: [{\n      type: Input\n    }],\n    autoScroll: [{\n      type: Input\n    }],\n    dragPointerDown: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    ghostElementCreated: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dropData: [{\n      type: Input\n    }],\n    validateDrag: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    ghostElementAppendTo: [{\n      type: Input\n    }],\n    ghostElementTemplate: [{\n      type: Input\n    }],\n    touchStartLongPress: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\n\n\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n  return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;\n}\n\nvar DroppableDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   * @param {?} draggableHelper\n   * @param {?} zone\n   * @param {?} renderer\n   * @param {?} scrollContainer\n   */\n  function DroppableDirective(element, draggableHelper, zone, renderer, scrollContainer) {\n    _classCallCheck(this, DroppableDirective);\n\n    this.element = element;\n    this.draggableHelper = draggableHelper;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.scrollContainer = scrollContainer;\n    /**\n     * Called when a draggable element starts overlapping the element\n     */\n\n    this.dragEnter = new EventEmitter();\n    /**\n     * Called when a draggable element stops overlapping the element\n     */\n\n    this.dragLeave = new EventEmitter();\n    /**\n     * Called when a draggable element is moved over the element\n     */\n\n    this.dragOver = new EventEmitter();\n    /**\n     * Called when a draggable element is dropped on this element\n     */\n\n    this.drop = new EventEmitter(); // tslint:disable-line no-output-named-after-standard-event\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DroppableDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      /**\n      * @param {?} drag$\n      * @return {?}\n      */\n      function (drag$) {\n        addClass(_this7.renderer, _this7.element, _this7.dragActiveClass);\n        /** @type {?} */\n\n        var droppableElement = {\n          updateCache: true\n        };\n        /** @type {?} */\n\n        var deregisterScrollListener = _this7.renderer.listen(_this7.scrollContainer ? _this7.scrollContainer.elementRef.nativeElement : 'window', 'scroll',\n        /**\n        * @return {?}\n        */\n        function () {\n          droppableElement.updateCache = true;\n        });\n        /** @type {?} */\n\n\n        var currentDragDropData;\n        /** @type {?} */\n\n        var overlaps$ = drag$.pipe(map(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref11) {\n          var clientX = _ref11.clientX,\n              clientY = _ref11.clientY,\n              dropData = _ref11.dropData,\n              target = _ref11.target;\n          currentDragDropData = dropData;\n\n          if (droppableElement.updateCache) {\n            droppableElement.rect = _this7.element.nativeElement.getBoundingClientRect();\n\n            if (_this7.scrollContainer) {\n              droppableElement.scrollContainerRect = _this7.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n            }\n\n            droppableElement.updateCache = false;\n          }\n          /** @type {?} */\n\n\n          var isWithinElement = isCoordinateWithinRectangle(clientX, clientY, droppableElement.rect);\n          /** @type {?} */\n\n          var isDropAllowed = !_this7.validateDrop || _this7.validateDrop({\n            clientX: clientX,\n            clientY: clientY,\n            target: target\n          });\n\n          if (droppableElement.scrollContainerRect) {\n            return isWithinElement && isDropAllowed && isCoordinateWithinRectangle(clientX, clientY, droppableElement.scrollContainerRect);\n          } else {\n            return isWithinElement && isDropAllowed;\n          }\n        }));\n        /** @type {?} */\n\n        var overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n        /** @type {?} */\n\n        var dragOverActive;\n        overlapsChanged$.pipe(filter(\n        /**\n        * @param {?} overlapsNow\n        * @return {?}\n        */\n        function (overlapsNow) {\n          return overlapsNow;\n        })).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          dragOverActive = true;\n          addClass(_this7.renderer, _this7.element, _this7.dragOverClass);\n\n          _this7.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this7.dragEnter.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n        overlaps$.pipe(filter(\n        /**\n        * @param {?} overlapsNow\n        * @return {?}\n        */\n        function (overlapsNow) {\n          return overlapsNow;\n        })).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this7.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this7.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n        overlapsChanged$.pipe(pairwise(), filter(\n        /**\n        * @param {?} __0\n        * @return {?}\n        */\n        function (_ref12) {\n          var _ref13 = _slicedToArray(_ref12, 2),\n              didOverlap = _ref13[0],\n              overlapsNow = _ref13[1];\n\n          return didOverlap && !overlapsNow;\n        })).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          dragOverActive = false;\n          removeClass(_this7.renderer, _this7.element, _this7.dragOverClass);\n\n          _this7.zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            _this7.dragLeave.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n        drag$.subscribe({\n          complete:\n          /**\n          * @return {?}\n          */\n          function complete() {\n            deregisterScrollListener();\n            removeClass(_this7.renderer, _this7.element, _this7.dragActiveClass);\n\n            if (dragOverActive) {\n              removeClass(_this7.renderer, _this7.element, _this7.dragOverClass);\n\n              _this7.zone.run(\n              /**\n              * @return {?}\n              */\n              function () {\n                _this7.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.currentDragSubscription) {\n        this.currentDragSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return DroppableDirective;\n}();\n\nDroppableDirective.ɵfac = function DroppableDirective_Factory(t) {\n  return new (t || DroppableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8));\n};\n\nDroppableDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DroppableDirective,\n  selectors: [[\"\", \"mwlDroppable\", \"\"]],\n  inputs: {\n    dragOverClass: \"dragOverClass\",\n    dragActiveClass: \"dragActiveClass\",\n    validateDrop: \"validateDrop\"\n  },\n  outputs: {\n    dragEnter: \"dragEnter\",\n    dragLeave: \"dragLeave\",\n    dragOver: \"dragOver\",\n    drop: \"drop\"\n  }\n});\n/** @nocollapse */\n\nDroppableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DraggableHelper\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: DraggableScrollContainerDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nDroppableDirective.propDecorators = {\n  dragOverClass: [{\n    type: Input\n  }],\n  dragActiveClass: [{\n    type: Input\n  }],\n  validateDrop: [{\n    type: Input\n  }],\n  dragEnter: [{\n    type: Output\n  }],\n  dragLeave: [{\n    type: Output\n  }],\n  dragOver: [{\n    type: Output\n  }],\n  drop: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlDroppable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DraggableHelper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: DraggableScrollContainerDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    dragEnter: [{\n      type: Output\n    }],\n    dragLeave: [{\n      type: Output\n    }],\n    dragOver: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    dragOverClass: [{\n      type: Input\n    }],\n    dragActiveClass: [{\n      type: Input\n    }],\n    validateDrop: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar DragAndDropModule = function DragAndDropModule() {\n  _classCallCheck(this, DragAndDropModule);\n};\n\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) {\n  return new (t || DragAndDropModule)();\n};\n\nDragAndDropModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: DragAndDropModule\n});\nDragAndDropModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n      exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, {\n    declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],\n    exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { DragAndDropModule, DraggableHelper as ɵc, DraggableScrollContainerDirective as ɵd, DraggableDirective as ɵb, DroppableDirective as ɵa }; //# sourceMappingURL=angular-draggable-droppable.js.map","map":{"version":3,"sources":["E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/angular-draggable-droppable/fesm2015/angular-draggable-droppable.js"],"names":["Subject","Observable","merge","ReplaySubject","combineLatest","fromEvent","DOCUMENT","autoScroll","Injectable","Directive","ElementRef","Input","Renderer2","Output","EventEmitter","NgZone","Inject","ViewContainerRef","Optional","NgModule","defineInjectable","map","mergeMap","takeUntil","take","takeLast","pairwise","share","filter","count","startWith","distinctUntilChanged","ɵngcc0","DraggableHelper","currentDrag","ɵfac","DraggableHelper_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngInjectableDef","ngDevMode","ɵsetClassMetadata","type","args","DraggableScrollContainerDirective","elementRef","activeLongPressDrag","longPressConfig","duration","delta","DraggableScrollContainerDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","ctorParameters","propDecorators","selector","addClass","renderer","element","classToAdd","split","forEach","className","nativeElement","removeClass","classToRemove","DraggableDirective","draggableHelper","zone","vcr","scrollContainer","document","dragAxis","x","y","dragSnapGrid","ghostDragEnabled","showOriginalElementWhileDragging","dragCursor","margin","dragPointerDown","dragStart","ghostElementCreated","dragging","dragEnd","pointerDown$","pointerMove$","pointerUp$","eventListenerSubscriptions","destroy$","timeLongPress","timerBegin","timerEnd","checkEventListeners","pointerDragged$","pipe","canDrag","pointerDownEvent","event","stopPropagation","globalDragStyle","createElement","setAttribute","appendChild","createText","requestAnimationFrame","head","startScrollPosition","getScrollPosition","scrollContainerScroll$","observer","listen","e","next","currentDrag$","cancelDrag$","run","dragComplete$","pointerMove","pointerMoveEvent","scroll","transformX","clientX","transformY","clientY","scrollLeft","left","scrollTop","top","target","moveData","Math","round","scrollX","scrollY","Object","assign","validateDrag","transform","dragStarted$","dragEnded$","subscribe","scroller","defaultView","dragActiveClass","rect","getBoundingClientRect","clone","cloneNode","setStyle","ghostElementAppendTo","parentNode","insertBefore","nextSibling","ghostElement","body","style","cursor","setElementStyles","position","width","height","willChange","pointerEvents","ghostElementTemplate","viewRef","createEmbeddedView","innerHTML","rootNodes","node","Node","remove","indexOf","emit","parentElement","removeChild","dragEndData","dragEndData$","calledCount","dragCancelled","complete","destroy","value","previous","dropData","changes","unsubscribeEventListeners","hasEventListeners","keys","length","runOutsideAngular","mousedown","onMouseDown","mouseup","onMouseUp","touchstart","onTouchStart","touchend","onTouchEnd","touchcancel","mouseenter","onMouseEnter","mouseleave","onMouseLeave","button","mousemove","mouseMoveEvent","isDragActivated","hasContainerScrollbar","touchStartLongPress","Date","now","hasScrollbar","touchmove","contextMenuListener","preventDefault","touchMoveListener","passive","touchMoveEvent","shouldBeginDrag","targetTouches","unsubscribe","touches","enableScroll","changedTouches","setCursor","styles","key","window","pageYOffset","documentElement","pageXOffset","moveScrollPosition","deltaScroll","abs","deltaX","deltaY","deltaTotal","delay","disableScroll","getScrollElement","containerHasHorizontalScroll","scrollWidth","clientWidth","containerHasVerticalScroll","scrollHeight","clientHeight","DraggableDirective_Factory","outputs","features","ɵɵNgOnChangesFeature","decorators","undefined","isCoordinateWithinRectangle","right","bottom","DroppableDirective","dragEnter","dragLeave","dragOver","drop","currentDragSubscription","drag$","droppableElement","updateCache","deregisterScrollListener","currentDragDropData","overlaps$","scrollContainerRect","isWithinElement","isDropAllowed","validateDrop","overlapsChanged$","dragOverActive","overlapsNow","dragOverClass","didOverlap","DroppableDirective_Factory","DragAndDropModule","DragAndDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵc","ɵd","ɵb","ɵa"],"mappings":"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","sourcesContent":["import { Subject, Observable, merge, ReplaySubject, combineLatest, fromEvent } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport autoScroll from '@mattlewis92/dom-autoscroller';\nimport { Injectable, Directive, ElementRef, Input, Renderer2, Output, EventEmitter, NgZone, Inject, ViewContainerRef, Optional, NgModule, defineInjectable } from '@angular/core';\nimport { map, mergeMap, takeUntil, take, takeLast, pairwise, share, filter, count, startWith, distinctUntilChanged } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DraggableHelper {\n    constructor() {\n        this.currentDrag = new Subject();\n    }\n}\nDraggableHelper.ɵfac = function DraggableHelper_Factory(t) { return new (t || DraggableHelper)(); };\nDraggableHelper.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DraggableHelper, factory: DraggableHelper.ɵfac, providedIn: 'root' });\n/** @nocollapse */ DraggableHelper.ngInjectableDef = defineInjectable({ factory: function DraggableHelper_Factory() { return new DraggableHelper(); }, token: DraggableHelper, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.\n * ```html\n * <div style=\"overflow: scroll\" mwlDraggableScrollContainer>\n * <div mwlDraggable>Drag me!</div>\n * </div>\n * ```\n */\nclass DraggableScrollContainerDirective {\n    /**\n     * @hidden\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Trigger the DragStart after a long touch in scrollable container when true\n         * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n         */\n        this.activeLongPressDrag = false;\n        /**\n         * Configuration of a long touch\n         * Duration in ms of a long touch before activating DragStart\n         * Delta of the\n         * @deprecated will be removed in v5 (use [touchStartLongPress]=\"{delay: 300, delta: 30}\" on the mwlDraggable element instead)\n         */\n        this.longPressConfig = { duration: 300, delta: 30 };\n    }\n}\nDraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) { return new (t || DraggableScrollContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDraggableScrollContainerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableScrollContainerDirective, selectors: [[\"\", \"mwlDraggableScrollContainer\", \"\"]], inputs: { activeLongPressDrag: \"activeLongPressDrag\", longPressConfig: \"longPressConfig\" } });\n/** @nocollapse */\nDraggableScrollContainerDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nDraggableScrollContainerDirective.propDecorators = {\n    activeLongPressDrag: [{ type: Input }],\n    longPressConfig: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableScrollContainerDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDraggableScrollContainer]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { activeLongPressDrag: [{\n            type: Input\n        }], longPressConfig: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToAdd\n * @return {?}\n */\nfunction addClass(renderer, element, classToAdd) {\n    if (classToAdd) {\n        classToAdd\n            .split(' ')\n            .forEach((/**\n         * @param {?} className\n         * @return {?}\n         */\n        (className) => renderer.addClass(element.nativeElement, className)));\n    }\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classToRemove\n * @return {?}\n */\nfunction removeClass(renderer, element, classToRemove) {\n    if (classToRemove) {\n        classToRemove\n            .split(' ')\n            .forEach((/**\n         * @param {?} className\n         * @return {?}\n         */\n        (className) => renderer.removeClass(element.nativeElement, className)));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DraggableDirective {\n    /**\n     * @hidden\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} draggableHelper\n     * @param {?} zone\n     * @param {?} vcr\n     * @param {?} scrollContainer\n     * @param {?} document\n     */\n    constructor(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {\n        this.element = element;\n        this.renderer = renderer;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        this.vcr = vcr;\n        this.scrollContainer = scrollContainer;\n        this.document = document;\n        /**\n         * The axis along which the element is draggable\n         */\n        this.dragAxis = { x: true, y: true };\n        /**\n         * Snap all drags to an x / y grid\n         */\n        this.dragSnapGrid = {};\n        /**\n         * Show a ghost element that shows the drag when dragging\n         */\n        this.ghostDragEnabled = true;\n        /**\n         * Show the original element when ghostDragEnabled is true\n         */\n        this.showOriginalElementWhileDragging = false;\n        /**\n         * The cursor to use when hovering over a draggable element\n         */\n        this.dragCursor = '';\n        /*\n           * Options used to control the behaviour of auto scrolling: https://www.npmjs.com/package/dom-autoscroller\n           */\n        this.autoScroll = {\n            margin: 20,\n        };\n        /**\n         * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n         */\n        this.dragPointerDown = new EventEmitter();\n        /**\n         * Called when the element has started to be dragged.\n         * Only called after at least one mouse or touch move event.\n         * If you call $event.cancelDrag$.emit() it will cancel the current drag\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Called after the ghost element has been created\n         */\n        this.ghostElementCreated = new EventEmitter();\n        /**\n         * Called when the element is being dragged\n         */\n        this.dragging = new EventEmitter();\n        /**\n         * Called after the element is dragged\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.pointerDown$ = new Subject();\n        /**\n         * @hidden\n         */\n        this.pointerMove$ = new Subject();\n        /**\n         * @hidden\n         */\n        this.pointerUp$ = new Subject();\n        this.eventListenerSubscriptions = {};\n        this.destroy$ = new Subject();\n        this.timeLongPress = { timerBegin: 0, timerEnd: 0 };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.checkEventListeners();\n        /** @type {?} */\n        const pointerDragged$ = this.pointerDown$.pipe(filter((/**\n         * @return {?}\n         */\n        () => this.canDrag())), mergeMap((/**\n         * @param {?} pointerDownEvent\n         * @return {?}\n         */\n        (pointerDownEvent) => {\n            // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61\n            // stop mouse events propagating up the chain\n            if (pointerDownEvent.event.stopPropagation && !this.scrollContainer) {\n                pointerDownEvent.event.stopPropagation();\n            }\n            // hack to prevent text getting selected in safari while dragging\n            /** @type {?} */\n            const globalDragStyle = this.renderer.createElement('style');\n            this.renderer.setAttribute(globalDragStyle, 'type', 'text/css');\n            this.renderer.appendChild(globalDragStyle, this.renderer.createText(`\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        `));\n            requestAnimationFrame((/**\n             * @return {?}\n             */\n            () => {\n                this.document.head.appendChild(globalDragStyle);\n            }));\n            /** @type {?} */\n            const startScrollPosition = this.getScrollPosition();\n            /** @type {?} */\n            const scrollContainerScroll$ = new Observable((/**\n             * @param {?} observer\n             * @return {?}\n             */\n            (observer) => {\n                /** @type {?} */\n                const scrollContainer = this.scrollContainer\n                    ? this.scrollContainer.elementRef.nativeElement\n                    : 'window';\n                return this.renderer.listen(scrollContainer, 'scroll', (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => observer.next(e)));\n            })).pipe(startWith(startScrollPosition), map((/**\n             * @return {?}\n             */\n            () => this.getScrollPosition())));\n            /** @type {?} */\n            const currentDrag$ = new Subject();\n            /** @type {?} */\n            const cancelDrag$ = new ReplaySubject();\n            this.zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.dragPointerDown.next({ x: 0, y: 0 });\n            }));\n            /** @type {?} */\n            const dragComplete$ = merge(this.pointerUp$, this.pointerDown$, cancelDrag$, this.destroy$).pipe(share());\n            /** @type {?} */\n            const pointerMove = combineLatest([\n                this.pointerMove$,\n                scrollContainerScroll$,\n            ]).pipe(map((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ([pointerMoveEvent, scroll]) => {\n                return {\n                    currentDrag$,\n                    transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                    transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                    clientX: pointerMoveEvent.clientX,\n                    clientY: pointerMoveEvent.clientY,\n                    scrollLeft: scroll.left,\n                    scrollTop: scroll.top,\n                    target: pointerMoveEvent.event.target,\n                };\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                if (this.dragSnapGrid.x) {\n                    moveData.transformX =\n                        Math.round(moveData.transformX / this.dragSnapGrid.x) *\n                            this.dragSnapGrid.x;\n                }\n                if (this.dragSnapGrid.y) {\n                    moveData.transformY =\n                        Math.round(moveData.transformY / this.dragSnapGrid.y) *\n                            this.dragSnapGrid.y;\n                }\n                return moveData;\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                if (!this.dragAxis.x) {\n                    moveData.transformX = 0;\n                }\n                if (!this.dragAxis.y) {\n                    moveData.transformY = 0;\n                }\n                return moveData;\n            })), map((/**\n             * @param {?} moveData\n             * @return {?}\n             */\n            (moveData) => {\n                /** @type {?} */\n                const scrollX = moveData.scrollLeft - startScrollPosition.left;\n                /** @type {?} */\n                const scrollY = moveData.scrollTop - startScrollPosition.top;\n                return Object.assign({}, moveData, { x: moveData.transformX + scrollX, y: moveData.transformY + scrollY });\n            })), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ x, y, transformX, transformY }) => !this.validateDrag ||\n                this.validateDrag({\n                    x,\n                    y,\n                    transform: { x: transformX, y: transformY },\n                }))), takeUntil(dragComplete$), share());\n            /** @type {?} */\n            const dragStarted$ = pointerMove.pipe(take(1), share());\n            /** @type {?} */\n            const dragEnded$ = pointerMove.pipe(takeLast(1), share());\n            dragStarted$.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ clientX, clientY, x, y }) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragStart.next({ cancelDrag$ });\n                }));\n                this.scroller = autoScroll([\n                    this.scrollContainer\n                        ? this.scrollContainer.elementRef.nativeElement\n                        : this.document.defaultView,\n                ], Object.assign({}, this.autoScroll, { /**\n                     * @return {?}\n                     */\n                    autoScroll() {\n                        return true;\n                    } }));\n                addClass(this.renderer, this.element, this.dragActiveClass);\n                if (this.ghostDragEnabled) {\n                    /** @type {?} */\n                    const rect = this.element.nativeElement.getBoundingClientRect();\n                    /** @type {?} */\n                    const clone = (/** @type {?} */ (this.element.nativeElement.cloneNode(true)));\n                    if (!this.showOriginalElementWhileDragging) {\n                        this.renderer.setStyle(this.element.nativeElement, 'visibility', 'hidden');\n                    }\n                    if (this.ghostElementAppendTo) {\n                        this.ghostElementAppendTo.appendChild(clone);\n                    }\n                    else {\n                        (/** @type {?} */ (this.element.nativeElement.parentNode)).insertBefore(clone, this.element.nativeElement.nextSibling);\n                    }\n                    this.ghostElement = clone;\n                    this.document.body.style.cursor = this.dragCursor;\n                    this.setElementStyles(clone, {\n                        position: 'fixed',\n                        top: `${rect.top}px`,\n                        left: `${rect.left}px`,\n                        width: `${rect.width}px`,\n                        height: `${rect.height}px`,\n                        cursor: this.dragCursor,\n                        margin: '0',\n                        willChange: 'transform',\n                        pointerEvents: 'none',\n                    });\n                    if (this.ghostElementTemplate) {\n                        /** @type {?} */\n                        const viewRef = this.vcr.createEmbeddedView(this.ghostElementTemplate);\n                        clone.innerHTML = '';\n                        viewRef.rootNodes\n                            .filter((/**\n                         * @param {?} node\n                         * @return {?}\n                         */\n                        (node) => node instanceof Node))\n                            .forEach((/**\n                         * @param {?} node\n                         * @return {?}\n                         */\n                        (node) => {\n                            clone.appendChild(node);\n                        }));\n                        dragEnded$.subscribe((/**\n                         * @return {?}\n                         */\n                        () => {\n                            this.vcr.remove(this.vcr.indexOf(viewRef));\n                        }));\n                    }\n                    this.zone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.ghostElementCreated.emit({\n                            clientX: clientX - x,\n                            clientY: clientY - y,\n                            element: clone,\n                        });\n                    }));\n                    dragEnded$.subscribe((/**\n                     * @return {?}\n                     */\n                    () => {\n                        (/** @type {?} */ (clone.parentElement)).removeChild(clone);\n                        this.ghostElement = null;\n                        this.renderer.setStyle(this.element.nativeElement, 'visibility', '');\n                    }));\n                }\n                this.draggableHelper.currentDrag.next(currentDrag$);\n            }));\n            dragEnded$\n                .pipe(mergeMap((/**\n             * @param {?} dragEndData\n             * @return {?}\n             */\n            (dragEndData) => {\n                /** @type {?} */\n                const dragEndData$ = cancelDrag$.pipe(count(), take(1), map((/**\n                 * @param {?} calledCount\n                 * @return {?}\n                 */\n                (calledCount) => (Object.assign({}, dragEndData, { dragCancelled: calledCount > 0 })))));\n                cancelDrag$.complete();\n                return dragEndData$;\n            })))\n                .subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ x, y, dragCancelled }) => {\n                this.scroller.destroy();\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragEnd.next({ x, y, dragCancelled });\n                }));\n                removeClass(this.renderer, this.element, this.dragActiveClass);\n                currentDrag$.complete();\n            }));\n            merge(dragComplete$, dragEnded$)\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.document.head.removeChild(globalDragStyle);\n                }));\n            }));\n            return pointerMove;\n        })), share());\n        merge(pointerDragged$.pipe(take(1), map((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => [, value]))), pointerDragged$.pipe(pairwise()))\n            .pipe(filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([previous, next]) => {\n            if (!previous) {\n                return true;\n            }\n            return previous.x !== next.x || previous.y !== next.y;\n        })), map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([previous, next]) => next)))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ x, y, currentDrag$, clientX, clientY, transformX, transformY, target, }) => {\n            this.zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.dragging.next({ x, y });\n            }));\n            requestAnimationFrame((/**\n             * @return {?}\n             */\n            () => {\n                if (this.ghostElement) {\n                    /** @type {?} */\n                    const transform = `translate3d(${transformX}px, ${transformY}px, 0px)`;\n                    this.setElementStyles(this.ghostElement, {\n                        transform,\n                        '-webkit-transform': transform,\n                        '-ms-transform': transform,\n                        '-moz-transform': transform,\n                        '-o-transform': transform,\n                    });\n                }\n            }));\n            currentDrag$.next({\n                clientX,\n                clientY,\n                dropData: this.dropData,\n                target,\n            });\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.dragAxis) {\n            this.checkEventListeners();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unsubscribeEventListeners();\n        this.pointerDown$.complete();\n        this.pointerMove$.complete();\n        this.pointerUp$.complete();\n        this.destroy$.next();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    checkEventListeners() {\n        /** @type {?} */\n        const canDrag = this.canDrag();\n        /** @type {?} */\n        const hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n        if (canDrag && !hasEventListeners) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.eventListenerSubscriptions.mousedown = this.renderer.listen(this.element.nativeElement, 'mousedown', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onMouseDown(event);\n                }));\n                this.eventListenerSubscriptions.mouseup = this.renderer.listen('document', 'mouseup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onMouseUp(event);\n                }));\n                this.eventListenerSubscriptions.touchstart = this.renderer.listen(this.element.nativeElement, 'touchstart', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchStart(event);\n                }));\n                this.eventListenerSubscriptions.touchend = this.renderer.listen('document', 'touchend', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchEnd(event);\n                }));\n                this.eventListenerSubscriptions.touchcancel = this.renderer.listen('document', 'touchcancel', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    this.onTouchEnd(event);\n                }));\n                this.eventListenerSubscriptions.mouseenter = this.renderer.listen(this.element.nativeElement, 'mouseenter', (/**\n                 * @return {?}\n                 */\n                () => {\n                    this.onMouseEnter();\n                }));\n                this.eventListenerSubscriptions.mouseleave = this.renderer.listen(this.element.nativeElement, 'mouseleave', (/**\n                 * @return {?}\n                 */\n                () => {\n                    this.onMouseLeave();\n                }));\n            }));\n        }\n        else if (!canDrag && hasEventListeners) {\n            this.unsubscribeEventListeners();\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        if (event.button === 0) {\n            if (!this.eventListenerSubscriptions.mousemove) {\n                this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove', (/**\n                 * @param {?} mouseMoveEvent\n                 * @return {?}\n                 */\n                (mouseMoveEvent) => {\n                    this.pointerMove$.next({\n                        event: mouseMoveEvent,\n                        clientX: mouseMoveEvent.clientX,\n                        clientY: mouseMoveEvent.clientY,\n                    });\n                }));\n            }\n            this.pointerDown$.next({\n                event,\n                clientX: event.clientX,\n                clientY: event.clientY,\n            });\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseUp(event) {\n        if (event.button === 0) {\n            if (this.eventListenerSubscriptions.mousemove) {\n                this.eventListenerSubscriptions.mousemove();\n                delete this.eventListenerSubscriptions.mousemove;\n            }\n            this.pointerUp$.next({\n                event,\n                clientX: event.clientX,\n                clientY: event.clientY,\n            });\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onTouchStart(event) {\n        /** @type {?} */\n        let startScrollPosition;\n        /** @type {?} */\n        let isDragActivated;\n        /** @type {?} */\n        let hasContainerScrollbar;\n        if ((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n            this.touchStartLongPress) {\n            this.timeLongPress.timerBegin = Date.now();\n            isDragActivated = false;\n            hasContainerScrollbar = this.hasScrollbar();\n            startScrollPosition = this.getScrollPosition();\n        }\n        if (!this.eventListenerSubscriptions.touchmove) {\n            /** @type {?} */\n            const contextMenuListener = fromEvent(this.document, 'contextmenu').subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                e.preventDefault();\n            }));\n            /** @type {?} */\n            const touchMoveListener = fromEvent(this.document, 'touchmove', {\n                passive: false,\n            }).subscribe((/**\n             * @param {?} touchMoveEvent\n             * @return {?}\n             */\n            (touchMoveEvent) => {\n                if (((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n                    this.touchStartLongPress) &&\n                    !isDragActivated &&\n                    hasContainerScrollbar) {\n                    isDragActivated = this.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);\n                }\n                if (((!this.scrollContainer ||\n                    !this.scrollContainer.activeLongPressDrag) &&\n                    !this.touchStartLongPress) ||\n                    !hasContainerScrollbar ||\n                    isDragActivated) {\n                    touchMoveEvent.preventDefault();\n                    this.pointerMove$.next({\n                        event: touchMoveEvent,\n                        clientX: touchMoveEvent.targetTouches[0].clientX,\n                        clientY: touchMoveEvent.targetTouches[0].clientY,\n                    });\n                }\n            }));\n            this.eventListenerSubscriptions.touchmove = (/**\n             * @return {?}\n             */\n            () => {\n                contextMenuListener.unsubscribe();\n                touchMoveListener.unsubscribe();\n            });\n        }\n        this.pointerDown$.next({\n            event,\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY,\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    onTouchEnd(event) {\n        if (this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove();\n            delete this.eventListenerSubscriptions.touchmove;\n            if ((this.scrollContainer && this.scrollContainer.activeLongPressDrag) ||\n                this.touchStartLongPress) {\n                this.enableScroll();\n            }\n        }\n        this.pointerUp$.next({\n            event,\n            clientX: event.changedTouches[0].clientX,\n            clientY: event.changedTouches[0].clientY,\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    onMouseEnter() {\n        this.setCursor(this.dragCursor);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    onMouseLeave() {\n        this.setCursor('');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    canDrag() {\n        return this.dragAxis.x || this.dragAxis.y;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    setCursor(value) {\n        if (!this.eventListenerSubscriptions.mousemove) {\n            this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListenerSubscriptions).forEach((/**\n         * @param {?} type\n         * @return {?}\n         */\n        (type) => {\n            ((/** @type {?} */ (this))).eventListenerSubscriptions[type]();\n            delete ((/** @type {?} */ (this))).eventListenerSubscriptions[type];\n        }));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styles\n     * @return {?}\n     */\n    setElementStyles(element, styles) {\n        Object.keys(styles).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            this.renderer.setStyle(element, key, styles[key]);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollElement() {\n        if (this.scrollContainer) {\n            return this.scrollContainer.elementRef.nativeElement;\n        }\n        else {\n            return this.document.body;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollPosition() {\n        if (this.scrollContainer) {\n            return {\n                top: this.scrollContainer.elementRef.nativeElement.scrollTop,\n                left: this.scrollContainer.elementRef.nativeElement.scrollLeft,\n            };\n        }\n        else {\n            return {\n                top: window.pageYOffset || this.document.documentElement.scrollTop,\n                left: window.pageXOffset || this.document.documentElement.scrollLeft,\n            };\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} touchMoveEvent\n     * @param {?} startScrollPosition\n     * @return {?}\n     */\n    shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {\n        /** @type {?} */\n        const moveScrollPosition = this.getScrollPosition();\n        /** @type {?} */\n        const deltaScroll = {\n            top: Math.abs(moveScrollPosition.top - startScrollPosition.top),\n            left: Math.abs(moveScrollPosition.left - startScrollPosition.left),\n        };\n        /** @type {?} */\n        const deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;\n        /** @type {?} */\n        const deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;\n        /** @type {?} */\n        const deltaTotal = deltaX + deltaY;\n        /** @type {?} */\n        const longPressConfig = this.touchStartLongPress\n            ? this.touchStartLongPress\n            : /* istanbul ignore next */\n                {\n                    delta: this.scrollContainer.longPressConfig.delta,\n                    delay: this.scrollContainer.longPressConfig.duration,\n                };\n        if (deltaTotal > longPressConfig.delta ||\n            deltaScroll.top > 0 ||\n            deltaScroll.left > 0) {\n            this.timeLongPress.timerBegin = Date.now();\n        }\n        this.timeLongPress.timerEnd = Date.now();\n        /** @type {?} */\n        const duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;\n        if (duration >= longPressConfig.delay) {\n            this.disableScroll();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    enableScroll() {\n        if (this.scrollContainer) {\n            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');\n        }\n        this.renderer.setStyle(this.document.body, 'overflow', '');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    disableScroll() {\n        /* istanbul ignore next */\n        if (this.scrollContainer) {\n            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');\n        }\n        this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hasScrollbar() {\n        /** @type {?} */\n        const scrollContainer = this.getScrollElement();\n        /** @type {?} */\n        const containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;\n        /** @type {?} */\n        const containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;\n        return containerHasHorizontalScroll || containerHasVerticalScroll;\n    }\n}\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) { return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nDraggableDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableDirective, selectors: [[\"\", \"mwlDraggable\", \"\"]], inputs: { dragAxis: \"dragAxis\", dragSnapGrid: \"dragSnapGrid\", ghostDragEnabled: \"ghostDragEnabled\", showOriginalElementWhileDragging: \"showOriginalElementWhileDragging\", dragCursor: \"dragCursor\", autoScroll: \"autoScroll\", dropData: \"dropData\", validateDrag: \"validateDrag\", dragActiveClass: \"dragActiveClass\", ghostElementAppendTo: \"ghostElementAppendTo\", ghostElementTemplate: \"ghostElementTemplate\", touchStartLongPress: \"touchStartLongPress\" }, outputs: { dragPointerDown: \"dragPointerDown\", dragStart: \"dragStart\", ghostElementCreated: \"ghostElementCreated\", dragging: \"dragging\", dragEnd: \"dragEnd\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: DraggableHelper },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: DraggableScrollContainerDirective, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nDraggableDirective.propDecorators = {\n    dropData: [{ type: Input }],\n    dragAxis: [{ type: Input }],\n    dragSnapGrid: [{ type: Input }],\n    ghostDragEnabled: [{ type: Input }],\n    showOriginalElementWhileDragging: [{ type: Input }],\n    validateDrag: [{ type: Input }],\n    dragCursor: [{ type: Input }],\n    dragActiveClass: [{ type: Input }],\n    ghostElementAppendTo: [{ type: Input }],\n    ghostElementTemplate: [{ type: Input }],\n    touchStartLongPress: [{ type: Input }],\n    autoScroll: [{ type: Input }],\n    dragPointerDown: [{ type: Output }],\n    dragStart: [{ type: Output }],\n    ghostElementCreated: [{ type: Output }],\n    dragging: [{ type: Output }],\n    dragEnd: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDraggable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: DraggableHelper }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: DraggableScrollContainerDirective, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { dragAxis: [{\n            type: Input\n        }], dragSnapGrid: [{\n            type: Input\n        }], ghostDragEnabled: [{\n            type: Input\n        }], showOriginalElementWhileDragging: [{\n            type: Input\n        }], dragCursor: [{\n            type: Input\n        }], autoScroll: [{\n            type: Input\n        }], dragPointerDown: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], ghostElementCreated: [{\n            type: Output\n        }], dragging: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dropData: [{\n            type: Input\n        }], validateDrag: [{\n            type: Input\n        }], dragActiveClass: [{\n            type: Input\n        }], ghostElementAppendTo: [{\n            type: Input\n        }], ghostElementTemplate: [{\n            type: Input\n        }], touchStartLongPress: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n    return (clientX >= rect.left &&\n        clientX <= rect.right &&\n        clientY >= rect.top &&\n        clientY <= rect.bottom);\n}\nclass DroppableDirective {\n    /**\n     * @param {?} element\n     * @param {?} draggableHelper\n     * @param {?} zone\n     * @param {?} renderer\n     * @param {?} scrollContainer\n     */\n    constructor(element, draggableHelper, zone, renderer, scrollContainer) {\n        this.element = element;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.scrollContainer = scrollContainer;\n        /**\n         * Called when a draggable element starts overlapping the element\n         */\n        this.dragEnter = new EventEmitter();\n        /**\n         * Called when a draggable element stops overlapping the element\n         */\n        this.dragLeave = new EventEmitter();\n        /**\n         * Called when a draggable element is moved over the element\n         */\n        this.dragOver = new EventEmitter();\n        /**\n         * Called when a draggable element is dropped on this element\n         */\n        this.drop = new EventEmitter(); // tslint:disable-line no-output-named-after-standard-event\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe((/**\n         * @param {?} drag$\n         * @return {?}\n         */\n        (drag$) => {\n            addClass(this.renderer, this.element, this.dragActiveClass);\n            /** @type {?} */\n            const droppableElement = {\n                updateCache: true,\n            };\n            /** @type {?} */\n            const deregisterScrollListener = this.renderer.listen(this.scrollContainer\n                ? this.scrollContainer.elementRef.nativeElement\n                : 'window', 'scroll', (/**\n             * @return {?}\n             */\n            () => {\n                droppableElement.updateCache = true;\n            }));\n            /** @type {?} */\n            let currentDragDropData;\n            /** @type {?} */\n            const overlaps$ = drag$.pipe(map((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ clientX, clientY, dropData, target }) => {\n                currentDragDropData = dropData;\n                if (droppableElement.updateCache) {\n                    droppableElement.rect = this.element.nativeElement.getBoundingClientRect();\n                    if (this.scrollContainer) {\n                        droppableElement.scrollContainerRect = this.scrollContainer.elementRef.nativeElement.getBoundingClientRect();\n                    }\n                    droppableElement.updateCache = false;\n                }\n                /** @type {?} */\n                const isWithinElement = isCoordinateWithinRectangle(clientX, clientY, (/** @type {?} */ (droppableElement.rect)));\n                /** @type {?} */\n                const isDropAllowed = !this.validateDrop ||\n                    this.validateDrop({ clientX, clientY, target });\n                if (droppableElement.scrollContainerRect) {\n                    return (isWithinElement &&\n                        isDropAllowed &&\n                        isCoordinateWithinRectangle(clientX, clientY, (/** @type {?} */ (droppableElement.scrollContainerRect))));\n                }\n                else {\n                    return isWithinElement && isDropAllowed;\n                }\n            })));\n            /** @type {?} */\n            const overlapsChanged$ = overlaps$.pipe(distinctUntilChanged());\n            /** @type {?} */\n            let dragOverActive;\n            overlapsChanged$\n                .pipe(filter((/**\n             * @param {?} overlapsNow\n             * @return {?}\n             */\n            (overlapsNow) => overlapsNow)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                dragOverActive = true;\n                addClass(this.renderer, this.element, this.dragOverClass);\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragEnter.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            overlaps$.pipe(filter((/**\n             * @param {?} overlapsNow\n             * @return {?}\n             */\n            (overlapsNow) => overlapsNow))).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragOver.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            overlapsChanged$\n                .pipe(pairwise(), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                dragOverActive = false;\n                removeClass(this.renderer, this.element, this.dragOverClass);\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.dragLeave.next({\n                        dropData: currentDragDropData,\n                    });\n                }));\n            }));\n            drag$.subscribe({\n                complete: (/**\n                 * @return {?}\n                 */\n                () => {\n                    deregisterScrollListener();\n                    removeClass(this.renderer, this.element, this.dragActiveClass);\n                    if (dragOverActive) {\n                        removeClass(this.renderer, this.element, this.dragOverClass);\n                        this.zone.run((/**\n                         * @return {?}\n                         */\n                        () => {\n                            this.drop.next({\n                                dropData: currentDragDropData,\n                            });\n                        }));\n                    }\n                }),\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.currentDragSubscription) {\n            this.currentDragSubscription.unsubscribe();\n        }\n    }\n}\nDroppableDirective.ɵfac = function DroppableDirective_Factory(t) { return new (t || DroppableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DraggableHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DraggableScrollContainerDirective, 8)); };\nDroppableDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DroppableDirective, selectors: [[\"\", \"mwlDroppable\", \"\"]], inputs: { dragOverClass: \"dragOverClass\", dragActiveClass: \"dragActiveClass\", validateDrop: \"validateDrop\" }, outputs: { dragEnter: \"dragEnter\", dragLeave: \"dragLeave\", dragOver: \"dragOver\", drop: \"drop\" } });\n/** @nocollapse */\nDroppableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DraggableHelper },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: DraggableScrollContainerDirective, decorators: [{ type: Optional }] }\n];\nDroppableDirective.propDecorators = {\n    dragOverClass: [{ type: Input }],\n    dragActiveClass: [{ type: Input }],\n    validateDrop: [{ type: Input }],\n    dragEnter: [{ type: Output }],\n    dragLeave: [{ type: Output }],\n    dragOver: [{ type: Output }],\n    drop: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlDroppable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DraggableHelper }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: DraggableScrollContainerDirective, decorators: [{\n                type: Optional\n            }] }]; }, { dragEnter: [{\n            type: Output\n        }], dragLeave: [{\n            type: Output\n        }], dragOver: [{\n            type: Output\n        }], drop: [{\n            type: Output\n        }], dragOverClass: [{\n            type: Input\n        }], dragActiveClass: [{\n            type: Input\n        }], validateDrop: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragAndDropModule {\n}\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) { return new (t || DragAndDropModule)(); };\nDragAndDropModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DragAndDropModule });\nDragAndDropModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragAndDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    DraggableDirective,\n                    DroppableDirective,\n                    DraggableScrollContainerDirective,\n                ],\n                exports: [\n                    DraggableDirective,\n                    DroppableDirective,\n                    DraggableScrollContainerDirective,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, { declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective], exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragAndDropModule, DraggableHelper as ɵc, DraggableScrollContainerDirective as ɵd, DraggableDirective as ɵb, DroppableDirective as ɵa };\n\n//# sourceMappingURL=angular-draggable-droppable.js.map"]},"metadata":{},"sourceType":"module"}