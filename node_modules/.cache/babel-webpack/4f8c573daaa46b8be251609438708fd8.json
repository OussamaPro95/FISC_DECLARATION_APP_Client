{"ast":null,"code":"import _slicedToArray from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isPlatformBrowser } from '@angular/common';\nimport { Directive, Renderer2, ElementRef, Output, Input, EventEmitter, NgZone, Inject, PLATFORM_ID, Optional, NgModule } from '@angular/core';\nimport { Subject, Observable, merge, EMPTY, fromEvent } from 'rxjs';\nimport { map, mergeMap, takeUntil, filter, pairwise, take, share, auditTime, switchMap, startWith, tap } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @hidden\n * @type {?}\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nvar IS_TOUCH_DEVICE = function () {\n  // In case we're in Node.js environment.\n  if (typeof window === 'undefined') {\n    return false;\n  } else {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n  }\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value1\n * @param {?} value2\n * @param {?=} precision\n * @return {?}\n */\n\n\nfunction isNumberCloseTo(value1, value2) {\n  var precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n\n  /** @type {?} */\n  var diff = Math.abs(value1 - value2);\n  return diff < precision;\n}\n/**\n * @param {?} startingRect\n * @param {?} edges\n * @param {?} clientX\n * @param {?} clientY\n * @return {?}\n */\n\n\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n  /** @type {?} */\n  var newBoundingRect = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n  return newBoundingRect;\n}\n/**\n * @param {?} element\n * @param {?} ghostElementPositioning\n * @return {?}\n */\n\n\nfunction getElementRect(element, ghostElementPositioning) {\n  /** @type {?} */\n  var translateX = 0;\n  /** @type {?} */\n\n  var translateY = 0;\n  /** @type {?} */\n\n  var style = element.nativeElement.style;\n  /** @type {?} */\n\n  var transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];\n  /** @type {?} */\n\n  var transform = transformProperties.map(function (property) {\n    return style[property];\n  }).find(function (value) {\n    return !!value;\n  });\n\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n    translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX\n    };\n  } else {\n    /** @type {?} */\n    var boundingRect = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction isWithinBoundingY(_ref) {\n  var clientY = _ref.clientY,\n      rect = _ref.rect;\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction isWithinBoundingX(_ref2) {\n  var clientX = _ref2.clientX,\n      rect = _ref2.rect;\n  return clientX >= rect.left && clientX <= rect.right;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction getResizeEdges(_ref3) {\n  var clientX = _ref3.clientX,\n      clientY = _ref3.clientY,\n      elm = _ref3.elm,\n      allowedEdges = _ref3.allowedEdges,\n      cursorPrecision = _ref3.cursorPrecision;\n\n  /** @type {?} */\n  var elmPosition = elm.nativeElement.getBoundingClientRect();\n  /** @type {?} */\n\n  var edges = {};\n\n  if (allowedEdges.left && isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) && isWithinBoundingY({\n    clientY: clientY,\n    rect: elmPosition\n  })) {\n    edges.left = true;\n  }\n\n  if (allowedEdges.right && isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) && isWithinBoundingY({\n    clientY: clientY,\n    rect: elmPosition\n  })) {\n    edges.right = true;\n  }\n\n  if (allowedEdges.top && isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) && isWithinBoundingX({\n    clientX: clientX,\n    rect: elmPosition\n  })) {\n    edges.top = true;\n  }\n\n  if (allowedEdges.bottom && isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) && isWithinBoundingX({\n    clientX: clientX,\n    rect: elmPosition\n  })) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n/** @type {?} */\n\n\nvar DEFAULT_RESIZE_CURSORS = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\n/**\n * @param {?} edges\n * @param {?} cursors\n * @return {?}\n */\n\nfunction getResizeCursor(edges, cursors) {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction getEdgesDiff(_ref4) {\n  var edges = _ref4.edges,\n      initialRectangle = _ref4.initialRectangle,\n      newRectangle = _ref4.newRectangle;\n\n  /** @type {?} */\n  var edgesDiff = {};\n  Object.keys(edges).forEach(function (edge) {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\n/** @type {?} */\n\n\nvar RESIZE_ACTIVE_CLASS = 'resize-active';\n/** @type {?} */\n\nvar RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';\n/** @type {?} */\n\nvar RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';\n/** @type {?} */\n\nvar RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';\n/** @type {?} */\n\nvar RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';\n/** @type {?} */\n\nvar RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\n/** @type {?} */\n\nvar MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\n\nvar ResizableDirective = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} platformId\n   * @param {?} renderer\n   * @param {?} elm\n   * @param {?} zone\n   */\n  function ResizableDirective(platformId, renderer, elm, zone) {\n    _classCallCheck(this, ResizableDirective);\n\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.elm = elm;\n    this.zone = zone;\n    /**\n     * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n     * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n     */\n\n    this.resizeEdges = {};\n    /**\n     * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n     */\n\n    this.enableGhostResize = false;\n    /**\n     * A snap grid that resize events will be locked to.\n     *\n     * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n     */\n\n    this.resizeSnapGrid = {};\n    /**\n     * The mouse cursors that will be set on the resize edges\n     */\n\n    this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n    /**\n     * Mouse over thickness to active cursor.\n     * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n     */\n\n    this.resizeCursorPrecision = 3;\n    /**\n     * Define the positioning of the ghost element (can be fixed or absolute)\n     */\n\n    this.ghostElementPositioning = 'fixed';\n    /**\n     * Allow elements to be resized to negative dimensions\n     */\n\n    this.allowNegativeResizes = false;\n    /**\n     * The mouse move throttle in milliseconds, default: 50 ms\n     */\n\n    this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n    /**\n     * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizeStart = new EventEmitter();\n    /**\n     * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizing = new EventEmitter();\n    /**\n     * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n     */\n\n    this.resizeEnd = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.mouseup = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.mousedown = new Subject();\n    /**\n     * @hidden\n     */\n\n    this.mousemove = new Subject();\n    this.destroy$ = new Subject();\n    this.resizeEdges$ = new Subject();\n    this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(ResizableDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      /** @type {?} */\n      var mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n      /** @type {?} */\n\n      var mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(function (_ref5) {\n        var event = _ref5.event;\n\n        if (currentResize) {\n          try {\n            event.preventDefault();\n          } catch (e) {// just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n            // browser does nothing except of writing errors to console\n          }\n        }\n      }), share());\n      /** @type {?} */\n\n      var mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n      /** @type {?} */\n\n      var currentResize;\n      /** @type {?} */\n\n      var removeGhostElement = function removeGhostElement() {\n        if (currentResize && currentResize.clonedNode) {\n          _this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n\n          _this.renderer.setStyle(_this.elm.nativeElement, 'visibility', 'inherit');\n        }\n      };\n      /** @type {?} */\n\n\n      var getResizeCursors = function getResizeCursors() {\n        return Object.assign({}, DEFAULT_RESIZE_CURSORS, _this.resizeCursors);\n      };\n\n      this.resizeEdges$.pipe(startWith(this.resizeEdges), map(function () {\n        return _this.resizeEdges && Object.keys(_this.resizeEdges).some(function (edge) {\n          return !!_this.resizeEdges[edge];\n        });\n      }), switchMap(function (legacyResizeEdgesEnabled) {\n        return legacyResizeEdgesEnabled ? mousemove$ : EMPTY;\n      }), auditTime(this.mouseMoveThrottleMS), takeUntil(this.destroy$)).subscribe(function (_ref6) {\n        var clientX = _ref6.clientX,\n            clientY = _ref6.clientY;\n\n        /** @type {?} */\n        var resizeEdges = getResizeEdges({\n          clientX: clientX,\n          clientY: clientY,\n          elm: _this.elm,\n          allowedEdges: _this.resizeEdges,\n          cursorPrecision: _this.resizeCursorPrecision\n        });\n        /** @type {?} */\n\n        var resizeCursors = getResizeCursors();\n\n        if (!currentResize) {\n          /** @type {?} */\n          var cursor = getResizeCursor(resizeEdges, resizeCursors);\n\n          _this.renderer.setStyle(_this.elm.nativeElement, 'cursor', cursor);\n        }\n\n        _this.setElementClass(_this.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);\n\n        _this.setElementClass(_this.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);\n\n        _this.setElementClass(_this.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);\n\n        _this.setElementClass(_this.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);\n      });\n      /** @type {?} */\n\n      var mousedrag = mousedown$.pipe(mergeMap(function (startCoords) {\n        /**\n         * @param {?} moveCoords\n         * @return {?}\n         */\n        function getDiff(moveCoords) {\n          return {\n            clientX: moveCoords.clientX - startCoords.clientX,\n            clientY: moveCoords.clientY - startCoords.clientY\n          };\n        }\n        /** @type {?} */\n\n\n        var getSnapGrid = function getSnapGrid() {\n          /** @type {?} */\n          var snapGrid = {\n            x: 1,\n            y: 1\n          };\n\n          if (currentResize) {\n            if (_this.resizeSnapGrid.left && currentResize.edges.left) {\n              snapGrid.x = +_this.resizeSnapGrid.left;\n            } else if (_this.resizeSnapGrid.right && currentResize.edges.right) {\n              snapGrid.x = +_this.resizeSnapGrid.right;\n            }\n\n            if (_this.resizeSnapGrid.top && currentResize.edges.top) {\n              snapGrid.y = +_this.resizeSnapGrid.top;\n            } else if (_this.resizeSnapGrid.bottom && currentResize.edges.bottom) {\n              snapGrid.y = +_this.resizeSnapGrid.bottom;\n            }\n          }\n\n          return snapGrid;\n        };\n        /**\n         * @param {?} coords\n         * @param {?} snapGrid\n         * @return {?}\n         */\n\n\n        function getGrid(coords, snapGrid) {\n          return {\n            x: Math.ceil(coords.clientX / snapGrid.x),\n            y: Math.ceil(coords.clientY / snapGrid.y)\n          };\n        }\n\n        return merge(mousemove$.pipe(take(1)).pipe(map(function (coords) {\n          return [, coords];\n        })), mousemove$.pipe(pairwise())).pipe(map(function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n              previousCoords = _ref8[0],\n              newCoords = _ref8[1];\n\n          return [previousCoords ? getDiff(previousCoords) : previousCoords, getDiff(newCoords)];\n        })).pipe(filter(function (_ref9) {\n          var _ref10 = _slicedToArray(_ref9, 2),\n              previousCoords = _ref10[0],\n              newCoords = _ref10[1];\n\n          if (!previousCoords) {\n            return true;\n          }\n          /** @type {?} */\n\n\n          var snapGrid = getSnapGrid();\n          /** @type {?} */\n\n          var previousGrid = getGrid(previousCoords, snapGrid);\n          /** @type {?} */\n\n          var newGrid = getGrid(newCoords, snapGrid);\n          return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;\n        })).pipe(map(function (_ref11) {\n          var _ref12 = _slicedToArray(_ref11, 2),\n              newCoords = _ref12[1];\n\n          /** @type {?} */\n          var snapGrid = getSnapGrid();\n          return {\n            clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n            clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n          };\n        })).pipe(takeUntil(merge(mouseup$, mousedown$)));\n      })).pipe(filter(function () {\n        return !!currentResize;\n      }));\n      mousedrag.pipe(map(function (_ref13) {\n        var clientX = _ref13.clientX,\n            clientY = _ref13.clientY;\n        return getNewBoundingRectangle(currentResize.startingRect, currentResize.edges, clientX, clientY);\n      })).pipe(filter(function (newBoundingRect) {\n        return _this.allowNegativeResizes || !!(newBoundingRect.height && newBoundingRect.width && newBoundingRect.height > 0 && newBoundingRect.width > 0);\n      })).pipe(filter(function (newBoundingRect) {\n        return _this.validateResize ? _this.validateResize({\n          rectangle: newBoundingRect,\n          edges: getEdgesDiff({\n            edges: currentResize.edges,\n            initialRectangle: currentResize.startingRect,\n            newRectangle: newBoundingRect\n          })\n        }) : true;\n      }), takeUntil(this.destroy$)).subscribe(function (newBoundingRect) {\n        if (currentResize && currentResize.clonedNode) {\n          _this.renderer.setStyle(currentResize.clonedNode, 'height', \"\".concat(newBoundingRect.height, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'width', \"\".concat(newBoundingRect.width, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'top', \"\".concat(newBoundingRect.top, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'left', \"\".concat(newBoundingRect.left, \"px\"));\n        }\n\n        if (_this.resizing.observers.length > 0) {\n          _this.zone.run(function () {\n            _this.resizing.emit({\n              edges: getEdgesDiff({\n                edges: currentResize.edges,\n                initialRectangle: currentResize.startingRect,\n                newRectangle: newBoundingRect\n              }),\n              rectangle: newBoundingRect\n            });\n          });\n        }\n\n        currentResize.currentRect = newBoundingRect;\n      });\n      mousedown$.pipe(map(function (_ref14) {\n        var clientX = _ref14.clientX,\n            clientY = _ref14.clientY,\n            edges = _ref14.edges;\n        return edges || getResizeEdges({\n          clientX: clientX,\n          clientY: clientY,\n          elm: _this.elm,\n          allowedEdges: _this.resizeEdges,\n          cursorPrecision: _this.resizeCursorPrecision\n        });\n      })).pipe(filter(function (edges) {\n        return Object.keys(edges).length > 0;\n      }), takeUntil(this.destroy$)).subscribe(function (edges) {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        /** @type {?} */\n\n\n        var startingRect = getElementRect(_this.elm, _this.ghostElementPositioning);\n        currentResize = {\n          edges: edges,\n          startingRect: startingRect,\n          currentRect: startingRect\n        };\n        /** @type {?} */\n\n        var resizeCursors = getResizeCursors();\n        /** @type {?} */\n\n        var cursor = getResizeCursor(currentResize.edges, resizeCursors);\n\n        _this.renderer.setStyle(document.body, 'cursor', cursor);\n\n        _this.setElementClass(_this.elm, RESIZE_ACTIVE_CLASS, true);\n\n        if (_this.enableGhostResize) {\n          currentResize.clonedNode = _this.elm.nativeElement.cloneNode(true);\n\n          _this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n\n          _this.renderer.setStyle(_this.elm.nativeElement, 'visibility', 'hidden');\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'position', _this.ghostElementPositioning);\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'left', \"\".concat(currentResize.startingRect.left, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'top', \"\".concat(currentResize.startingRect.top, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'height', \"\".concat(currentResize.startingRect.height, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'width', \"\".concat(currentResize.startingRect.width, \"px\"));\n\n          _this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n\n          _this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n\n          currentResize.clonedNode.scrollTop = currentResize.startingRect.scrollTop;\n          currentResize.clonedNode.scrollLeft = currentResize.startingRect.scrollLeft;\n        }\n\n        if (_this.resizeStart.observers.length > 0) {\n          _this.zone.run(function () {\n            _this.resizeStart.emit({\n              edges: getEdgesDiff({\n                edges: edges,\n                initialRectangle: startingRect,\n                newRectangle: startingRect\n              }),\n              rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n            });\n          });\n        }\n      });\n      mouseup$.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        if (currentResize) {\n          _this.renderer.removeClass(_this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n\n          _this.renderer.setStyle(document.body, 'cursor', '');\n\n          _this.renderer.setStyle(_this.elm.nativeElement, 'cursor', '');\n\n          if (_this.resizeEnd.observers.length > 0) {\n            _this.zone.run(function () {\n              _this.resizeEnd.emit({\n                edges: getEdgesDiff({\n                  edges: currentResize.edges,\n                  initialRectangle: currentResize.startingRect,\n                  newRectangle: currentResize.currentRect\n                }),\n                rectangle: currentResize.currentRect\n              });\n            });\n          }\n\n          removeGhostElement();\n          currentResize = null;\n        }\n      });\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.resizeEdges) {\n        this.resizeEdges$.next(this.resizeEdges);\n      }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      // browser check for angular universal, because it doesn't know what document is\n      if (isPlatformBrowser(this.platformId)) {\n        this.renderer.setStyle(document.body, 'cursor', '');\n      }\n\n      this.mousedown.complete();\n      this.mouseup.complete();\n      this.mousemove.complete();\n      this.resizeEdges$.complete();\n      this.destroy$.next();\n    }\n    /**\n     * @private\n     * @param {?} elm\n     * @param {?} name\n     * @param {?} add\n     * @return {?}\n     */\n\n  }, {\n    key: \"setElementClass\",\n    value: function setElementClass(elm, name, add) {\n      if (add) {\n        this.renderer.addClass(elm.nativeElement, name);\n      } else {\n        this.renderer.removeClass(elm.nativeElement, name);\n      }\n    }\n  }]);\n\n  return ResizableDirective;\n}();\n\nResizableDirective.Éµfac = function ResizableDirective_Factory(t) {\n  return new (t || ResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nResizableDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: ResizableDirective,\n  selectors: [[\"\", \"mwlResizable\", \"\"]],\n  inputs: {\n    resizeEdges: \"resizeEdges\",\n    enableGhostResize: \"enableGhostResize\",\n    resizeSnapGrid: \"resizeSnapGrid\",\n    resizeCursors: \"resizeCursors\",\n    resizeCursorPrecision: \"resizeCursorPrecision\",\n    ghostElementPositioning: \"ghostElementPositioning\",\n    allowNegativeResizes: \"allowNegativeResizes\",\n    mouseMoveThrottleMS: \"mouseMoveThrottleMS\",\n    validateResize: \"validateResize\"\n  },\n  outputs: {\n    resizeStart: \"resizeStart\",\n    resizing: \"resizing\",\n    resizeEnd: \"resizeEnd\"\n  },\n  exportAs: [\"mwlResizable\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\n\nResizableDirective.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nResizableDirective.propDecorators = {\n  validateResize: [{\n    type: Input\n  }],\n  resizeEdges: [{\n    type: Input\n  }],\n  enableGhostResize: [{\n    type: Input\n  }],\n  resizeSnapGrid: [{\n    type: Input\n  }],\n  resizeCursors: [{\n    type: Input\n  }],\n  resizeCursorPrecision: [{\n    type: Input\n  }],\n  ghostElementPositioning: [{\n    type: Input\n  }],\n  allowNegativeResizes: [{\n    type: Input\n  }],\n  mouseMoveThrottleMS: [{\n    type: Input\n  }],\n  resizeStart: [{\n    type: Output\n  }],\n  resizing: [{\n    type: Output\n  }],\n  resizeEnd: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizable]',\n      exportAs: 'mwlResizable'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Éµngcc0.Renderer2\n    }, {\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    resizeEdges: [{\n      type: Input\n    }],\n    enableGhostResize: [{\n      type: Input\n    }],\n    resizeSnapGrid: [{\n      type: Input\n    }],\n    resizeCursors: [{\n      type: Input\n    }],\n    resizeCursorPrecision: [{\n      type: Input\n    }],\n    ghostElementPositioning: [{\n      type: Input\n    }],\n    allowNegativeResizes: [{\n      type: Input\n    }],\n    mouseMoveThrottleMS: [{\n      type: Input\n    }],\n    resizeStart: [{\n      type: Output\n    }],\n    resizing: [{\n      type: Output\n    }],\n    resizeEnd: [{\n      type: Output\n    }],\n    validateResize: [{\n      type: Input\n    }]\n  });\n})();\n\nvar PointerEventListeners = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   * @param {?} zone\n   */\n  function PointerEventListeners(renderer, zone) {\n    _classCallCheck(this, PointerEventListeners);\n\n    this.pointerDown = new Observable(function (observer) {\n      /** @type {?} */\n      var unsubscribeMouseDown;\n      /** @type {?} */\n\n      var unsubscribeTouchStart;\n      zone.runOutsideAngular(function () {\n        unsubscribeMouseDown = renderer.listen('document', 'mousedown', function (event) {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event: event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchStart = renderer.listen('document', 'touchstart', function (event) {\n            observer.next({\n              clientX: event.touches[0].clientX,\n              clientY: event.touches[0].clientY,\n              event: event\n            });\n          });\n        }\n      });\n      return function () {\n        unsubscribeMouseDown();\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchStart();\n        }\n      };\n    }).pipe(share());\n    this.pointerMove = new Observable(function (observer) {\n      /** @type {?} */\n      var unsubscribeMouseMove;\n      /** @type {?} */\n\n      var unsubscribeTouchMove;\n      zone.runOutsideAngular(function () {\n        unsubscribeMouseMove = renderer.listen('document', 'mousemove', function (event) {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event: event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchMove = renderer.listen('document', 'touchmove', function (event) {\n            observer.next({\n              clientX: event.targetTouches[0].clientX,\n              clientY: event.targetTouches[0].clientY,\n              event: event\n            });\n          });\n        }\n      });\n      return function () {\n        unsubscribeMouseMove();\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchMove();\n        }\n      };\n    }).pipe(share());\n    this.pointerUp = new Observable(function (observer) {\n      /** @type {?} */\n      var unsubscribeMouseUp;\n      /** @type {?} */\n\n      var unsubscribeTouchEnd;\n      /** @type {?} */\n\n      var unsubscribeTouchCancel;\n      zone.runOutsideAngular(function () {\n        unsubscribeMouseUp = renderer.listen('document', 'mouseup', function (event) {\n          observer.next({\n            clientX: event.clientX,\n            clientY: event.clientY,\n            event: event\n          });\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchEnd = renderer.listen('document', 'touchend', function (event) {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event: event\n            });\n          });\n          unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', function (event) {\n            observer.next({\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY,\n              event: event\n            });\n          });\n        }\n      });\n      return function () {\n        unsubscribeMouseUp();\n\n        if (IS_TOUCH_DEVICE) {\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        }\n      };\n    }).pipe(share());\n  }\n\n  _createClass(PointerEventListeners, null, [{\n    key: \"getInstance\",\n    value: // tslint:disable-line\n\n    /**\n     * @param {?} renderer\n     * @param {?} zone\n     * @return {?}\n     */\n    function getInstance(renderer, zone) {\n      if (!PointerEventListeners.instance) {\n        PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n      }\n\n      return PointerEventListeners.instance;\n    }\n  }]);\n\n  return PointerEventListeners;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\n\n\nvar ResizeHandleDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   * @param {?} element\n   * @param {?} zone\n   * @param {?} resizableDirective\n   */\n  function ResizeHandleDirective(renderer, element, zone, resizableDirective) {\n    _classCallCheck(this, ResizeHandleDirective);\n\n    this.renderer = renderer;\n    this.element = element;\n    this.zone = zone;\n    this.resizableDirective = resizableDirective;\n    /**\n     * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n     */\n\n    this.resizeEdges = {};\n    this.eventListeners = {};\n    this.destroy$ = new Subject();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ResizeHandleDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this2.listenOnTheHost('mousedown').subscribe(function (event) {\n          _this2.onMousedown(event, event.clientX, event.clientY);\n        });\n\n        _this2.listenOnTheHost('mouseup').subscribe(function (event) {\n          _this2.onMouseup(event.clientX, event.clientY);\n        });\n\n        if (IS_TOUCH_DEVICE) {\n          _this2.listenOnTheHost('touchstart').subscribe(function (event) {\n            _this2.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n          });\n\n          merge(_this2.listenOnTheHost('touchend'), _this2.listenOnTheHost('touchcancel')).subscribe(function (event) {\n            _this2.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n          });\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.unsubscribeEventListeners();\n    }\n    /**\n     * @hidden\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMousedown\",\n    value: function onMousedown(event, clientX, clientY) {\n      var _this3 = this;\n\n      event.preventDefault();\n\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', function (touchMoveEvent) {\n          _this3.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n        });\n      }\n\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', function (mouseMoveEvent) {\n          _this3.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n        });\n      }\n\n      this.resizable.mousedown.next({\n        clientX: clientX,\n        clientY: clientY,\n        edges: this.resizeEdges\n      });\n    }\n    /**\n     * @hidden\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseup\",\n    value: function onMouseup(clientX, clientY) {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({\n        clientX: clientX,\n        clientY: clientY,\n        edges: this.resizeEdges\n      });\n    } // directive might be passed from DI or as an input\n\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizable\",\n    get: function get() {\n      return this.resizableDirective || this.resizableContainer;\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMousemove\",\n    value: function onMousemove(event, clientX, clientY) {\n      this.resizable.mousemove.next({\n        clientX: clientX,\n        clientY: clientY,\n        edges: this.resizeEdges,\n        event: event\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"unsubscribeEventListeners\",\n    value: function unsubscribeEventListeners() {\n      var _this4 = this;\n\n      Object.keys(this.eventListeners).forEach(function (type) {\n        _this4.eventListeners[type]();\n\n        delete _this4.eventListeners[type];\n      });\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} eventName\n     * @return {?}\n     */\n\n  }, {\n    key: \"listenOnTheHost\",\n    value: function listenOnTheHost(eventName) {\n      return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n    }\n  }]);\n\n  return ResizeHandleDirective;\n}();\n\nResizeHandleDirective.Éµfac = function ResizeHandleDirective_Factory(t) {\n  return new (t || ResizeHandleDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(ResizableDirective, 8));\n};\n\nResizeHandleDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: ResizeHandleDirective,\n  selectors: [[\"\", \"mwlResizeHandle\", \"\"]],\n  inputs: {\n    resizeEdges: \"resizeEdges\",\n    resizableContainer: \"resizableContainer\"\n  }\n});\n/** @nocollapse */\n\nResizeHandleDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: ResizableDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nResizeHandleDirective.propDecorators = {\n  resizeEdges: [{\n    type: Input\n  }],\n  resizableContainer: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizeHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlResizeHandle]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.Renderer2\n    }, {\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }, {\n      type: ResizableDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    resizeEdges: [{\n      type: Input\n    }],\n    resizableContainer: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ResizableModule = function ResizableModule() {\n  _classCallCheck(this, ResizableModule);\n};\n\nResizableModule.Éµfac = function ResizableModule_Factory(t) {\n  return new (t || ResizableModule)();\n};\n\nResizableModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: ResizableModule\n});\nResizableModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ResizableDirective, ResizeHandleDirective],\n      exports: [ResizableDirective, ResizeHandleDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(ResizableModule, {\n    declarations: [ResizableDirective, ResizeHandleDirective],\n    exports: [ResizableDirective, ResizeHandleDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ResizableDirective, ResizeHandleDirective, ResizableModule }; //# sourceMappingURL=angular-resizable-element.js.map","map":{"version":3,"sources":["E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/angular-resizable-element/fesm2015/angular-resizable-element.js"],"names":["isPlatformBrowser","Directive","Renderer2","ElementRef","Output","Input","EventEmitter","NgZone","Inject","PLATFORM_ID","Optional","NgModule","Subject","Observable","merge","EMPTY","fromEvent","map","mergeMap","takeUntil","filter","pairwise","take","share","auditTime","switchMap","startWith","tap","Éµngcc0","IS_TOUCH_DEVICE","window","navigator","maxTouchPoints","msMaxTouchPoints","isNumberCloseTo","value1","value2","precision","diff","Math","abs","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","getElementRect","element","ghostElementPositioning","translateX","translateY","style","nativeElement","transformProperties","transform","property","find","value","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","getBoundingClientRect","scrollTop","scrollLeft","isWithinBoundingY","rect","isWithinBoundingX","getResizeEdges","elm","allowedEdges","cursorPrecision","elmPosition","DEFAULT_RESIZE_CURSORS","Object","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","forEach","edge","RESIZE_ACTIVE_CLASS","RESIZE_LEFT_HOVER_CLASS","RESIZE_RIGHT_HOVER_CLASS","RESIZE_TOP_HOVER_CLASS","RESIZE_BOTTOM_HOVER_CLASS","RESIZE_GHOST_ELEMENT_CLASS","MOUSE_MOVE_THROTTLE_MS","ResizableDirective","platformId","renderer","zone","resizeEdges","enableGhostResize","resizeSnapGrid","resizeCursors","resizeCursorPrecision","allowNegativeResizes","mouseMoveThrottleMS","resizeStart","resizing","resizeEnd","mouseup","mousedown","mousemove","destroy$","resizeEdges$","pointerEventListeners","PointerEventListeners","getInstance","mousedown$","pointerDown","mousemove$","pointerMove","pipe","event","currentResize","preventDefault","e","mouseup$","pointerUp","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","getResizeCursors","assign","some","legacyResizeEdgesEnabled","subscribe","cursor","setElementClass","mousedrag","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","getGrid","coords","ceil","previousCoords","newCoords","previousGrid","newGrid","round","validateResize","rectangle","observers","length","run","emit","currentRect","document","body","cloneNode","appendChild","addClass","removeClass","changes","next","complete","name","add","Éµfac","ResizableDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","type","selectors","inputs","outputs","exportAs","features","ÉµÉµNgOnChangesFeature","ctorParameters","undefined","decorators","args","propDecorators","ngDevMode","ÉµsetClassMetadata","selector","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","instance","ResizeHandleDirective","resizableDirective","eventListeners","listenOnTheHost","onMousedown","onMouseup","unsubscribeEventListeners","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","resizable","resizableContainer","eventName","ResizeHandleDirective_Factory","ResizableModule","ResizableModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Directive, Renderer2, ElementRef, Output, Input, EventEmitter, NgZone, Inject, PLATFORM_ID, Optional, NgModule } from '@angular/core';\nimport { Subject, Observable, merge, EMPTY, fromEvent } from 'rxjs';\nimport { map, mergeMap, takeUntil, filter, pairwise, take, share, auditTime, switchMap, startWith, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @hidden\n * @type {?}\n */\nimport * as Éµngcc0 from '@angular/core';\nconst IS_TOUCH_DEVICE = (() => {\n    // In case we're in Node.js environment.\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    else {\n        return ('ontouchstart' in window ||\n            navigator.maxTouchPoints > 0 ||\n            navigator.msMaxTouchPoints > 0);\n    }\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value1\n * @param {?} value2\n * @param {?=} precision\n * @return {?}\n */\nfunction isNumberCloseTo(value1, value2, precision = 3) {\n    /** @type {?} */\n    const diff = Math.abs(value1 - value2);\n    return diff < precision;\n}\n/**\n * @param {?} startingRect\n * @param {?} edges\n * @param {?} clientX\n * @param {?} clientY\n * @return {?}\n */\nfunction getNewBoundingRectangle(startingRect, edges, clientX, clientY) {\n    /** @type {?} */\n    const newBoundingRect = {\n        top: startingRect.top,\n        bottom: startingRect.bottom,\n        left: startingRect.left,\n        right: startingRect.right\n    };\n    if (edges.top) {\n        newBoundingRect.top += clientY;\n    }\n    if (edges.bottom) {\n        newBoundingRect.bottom += clientY;\n    }\n    if (edges.left) {\n        newBoundingRect.left += clientX;\n    }\n    if (edges.right) {\n        newBoundingRect.right += clientX;\n    }\n    newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n    newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n    return newBoundingRect;\n}\n/**\n * @param {?} element\n * @param {?} ghostElementPositioning\n * @return {?}\n */\nfunction getElementRect(element, ghostElementPositioning) {\n    /** @type {?} */\n    let translateX = 0;\n    /** @type {?} */\n    let translateY = 0;\n    /** @type {?} */\n    const style = element.nativeElement.style;\n    /** @type {?} */\n    const transformProperties = [\n        'transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n    ];\n    /** @type {?} */\n    const transform = transformProperties\n        .map(property => style[property])\n        .find(value => !!value);\n    if (transform && transform.includes('translate')) {\n        translateX = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$1');\n        translateY = transform.replace(/.*translate3?d?\\((-?[0-9]*)px, (-?[0-9]*)px.*/, '$2');\n    }\n    if (ghostElementPositioning === 'absolute') {\n        return {\n            height: element.nativeElement.offsetHeight,\n            width: element.nativeElement.offsetWidth,\n            top: element.nativeElement.offsetTop - translateY,\n            bottom: element.nativeElement.offsetHeight +\n                element.nativeElement.offsetTop -\n                translateY,\n            left: element.nativeElement.offsetLeft - translateX,\n            right: element.nativeElement.offsetWidth +\n                element.nativeElement.offsetLeft -\n                translateX\n        };\n    }\n    else {\n        /** @type {?} */\n        const boundingRect = element.nativeElement.getBoundingClientRect();\n        return {\n            height: boundingRect.height,\n            width: boundingRect.width,\n            top: boundingRect.top - translateY,\n            bottom: boundingRect.bottom - translateY,\n            left: boundingRect.left - translateX,\n            right: boundingRect.right - translateX,\n            scrollTop: element.nativeElement.scrollTop,\n            scrollLeft: element.nativeElement.scrollLeft\n        };\n    }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isWithinBoundingY({ clientY, rect }) {\n    return clientY >= rect.top && clientY <= rect.bottom;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction isWithinBoundingX({ clientX, rect }) {\n    return clientX >= rect.left && clientX <= rect.right;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getResizeEdges({ clientX, clientY, elm, allowedEdges, cursorPrecision }) {\n    /** @type {?} */\n    const elmPosition = elm.nativeElement.getBoundingClientRect();\n    /** @type {?} */\n    const edges = {};\n    if (allowedEdges.left &&\n        isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n        isWithinBoundingY({ clientY, rect: elmPosition })) {\n        edges.left = true;\n    }\n    if (allowedEdges.right &&\n        isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n        isWithinBoundingY({ clientY, rect: elmPosition })) {\n        edges.right = true;\n    }\n    if (allowedEdges.top &&\n        isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n        isWithinBoundingX({ clientX, rect: elmPosition })) {\n        edges.top = true;\n    }\n    if (allowedEdges.bottom &&\n        isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n        isWithinBoundingX({ clientX, rect: elmPosition })) {\n        edges.bottom = true;\n    }\n    return edges;\n}\n/** @type {?} */\nconst DEFAULT_RESIZE_CURSORS = Object.freeze({\n    topLeft: 'nw-resize',\n    topRight: 'ne-resize',\n    bottomLeft: 'sw-resize',\n    bottomRight: 'se-resize',\n    leftOrRight: 'col-resize',\n    topOrBottom: 'row-resize'\n});\n/**\n * @param {?} edges\n * @param {?} cursors\n * @return {?}\n */\nfunction getResizeCursor(edges, cursors) {\n    if (edges.left && edges.top) {\n        return cursors.topLeft;\n    }\n    else if (edges.right && edges.top) {\n        return cursors.topRight;\n    }\n    else if (edges.left && edges.bottom) {\n        return cursors.bottomLeft;\n    }\n    else if (edges.right && edges.bottom) {\n        return cursors.bottomRight;\n    }\n    else if (edges.left || edges.right) {\n        return cursors.leftOrRight;\n    }\n    else if (edges.top || edges.bottom) {\n        return cursors.topOrBottom;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getEdgesDiff({ edges, initialRectangle, newRectangle }) {\n    /** @type {?} */\n    const edgesDiff = {};\n    Object.keys(edges).forEach(edge => {\n        edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n    });\n    return edgesDiff;\n}\n/** @type {?} */\nconst RESIZE_ACTIVE_CLASS = 'resize-active';\n/** @type {?} */\nconst RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';\n/** @type {?} */\nconst RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';\n/** @type {?} */\nconst RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';\n/** @type {?} */\nconst RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';\n/** @type {?} */\nconst RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';\n/** @type {?} */\nconst MOUSE_MOVE_THROTTLE_MS = 50;\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizableDirective {\n    /**\n     * @hidden\n     * @param {?} platformId\n     * @param {?} renderer\n     * @param {?} elm\n     * @param {?} zone\n     */\n    constructor(platformId, renderer, elm, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.elm = elm;\n        this.zone = zone;\n        /**\n         * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n         * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n         */\n        this.resizeEdges = {};\n        /**\n         * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n         */\n        this.enableGhostResize = false;\n        /**\n         * A snap grid that resize events will be locked to.\n         *\n         * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n         */\n        this.resizeSnapGrid = {};\n        /**\n         * The mouse cursors that will be set on the resize edges\n         */\n        this.resizeCursors = DEFAULT_RESIZE_CURSORS;\n        /**\n         * Mouse over thickness to active cursor.\n         * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n         */\n        this.resizeCursorPrecision = 3;\n        /**\n         * Define the positioning of the ghost element (can be fixed or absolute)\n         */\n        this.ghostElementPositioning = 'fixed';\n        /**\n         * Allow elements to be resized to negative dimensions\n         */\n        this.allowNegativeResizes = false;\n        /**\n         * The mouse move throttle in milliseconds, default: 50 ms\n         */\n        this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;\n        /**\n         * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeStart = new EventEmitter();\n        /**\n         * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n         */\n        this.resizing = new EventEmitter();\n        /**\n         * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n         */\n        this.resizeEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.mouseup = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousedown = new Subject();\n        /**\n         * @hidden\n         */\n        this.mousemove = new Subject();\n        this.destroy$ = new Subject();\n        this.resizeEdges$ = new Subject();\n        this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const mousedown$ = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n        /** @type {?} */\n        const mousemove$ = merge(this.pointerEventListeners.pointerMove, this.mousemove).pipe(tap(({ event }) => {\n            if (currentResize) {\n                try {\n                    event.preventDefault();\n                }\n                catch (e) {\n                    // just adding try-catch not to see errors in console if there is a passive listener for same event somewhere\n                    // browser does nothing except of writing errors to console\n                }\n            }\n        }), share());\n        /** @type {?} */\n        const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n        /** @type {?} */\n        let currentResize;\n        /** @type {?} */\n        const removeGhostElement = () => {\n            if (currentResize && currentResize.clonedNode) {\n                this.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n            }\n        };\n        /** @type {?} */\n        const getResizeCursors = () => {\n            return Object.assign({}, DEFAULT_RESIZE_CURSORS, this.resizeCursors);\n        };\n        this.resizeEdges$\n            .pipe(startWith(this.resizeEdges), map(() => {\n            return (this.resizeEdges &&\n                Object.keys(this.resizeEdges).some(edge => !!this.resizeEdges[edge]));\n        }), switchMap(legacyResizeEdgesEnabled => legacyResizeEdgesEnabled ? mousemove$ : EMPTY), auditTime(this.mouseMoveThrottleMS), takeUntil(this.destroy$))\n            .subscribe(({ clientX, clientY }) => {\n            /** @type {?} */\n            const resizeEdges = getResizeEdges({\n                clientX,\n                clientY,\n                elm: this.elm,\n                allowedEdges: this.resizeEdges,\n                cursorPrecision: this.resizeCursorPrecision\n            });\n            /** @type {?} */\n            const resizeCursors = getResizeCursors();\n            if (!currentResize) {\n                /** @type {?} */\n                const cursor = getResizeCursor(resizeEdges, resizeCursors);\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n            }\n            this.setElementClass(this.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);\n            this.setElementClass(this.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);\n            this.setElementClass(this.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);\n            this.setElementClass(this.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);\n        });\n        /** @type {?} */\n        const mousedrag = mousedown$\n            .pipe(mergeMap(startCoords => {\n            /**\n             * @param {?} moveCoords\n             * @return {?}\n             */\n            function getDiff(moveCoords) {\n                return {\n                    clientX: moveCoords.clientX - startCoords.clientX,\n                    clientY: moveCoords.clientY - startCoords.clientY\n                };\n            }\n            /** @type {?} */\n            const getSnapGrid = () => {\n                /** @type {?} */\n                const snapGrid = { x: 1, y: 1 };\n                if (currentResize) {\n                    if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                        snapGrid.x = +this.resizeSnapGrid.left;\n                    }\n                    else if (this.resizeSnapGrid.right &&\n                        currentResize.edges.right) {\n                        snapGrid.x = +this.resizeSnapGrid.right;\n                    }\n                    if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                        snapGrid.y = +this.resizeSnapGrid.top;\n                    }\n                    else if (this.resizeSnapGrid.bottom &&\n                        currentResize.edges.bottom) {\n                        snapGrid.y = +this.resizeSnapGrid.bottom;\n                    }\n                }\n                return snapGrid;\n            };\n            /**\n             * @param {?} coords\n             * @param {?} snapGrid\n             * @return {?}\n             */\n            function getGrid(coords, snapGrid) {\n                return {\n                    x: Math.ceil(coords.clientX / snapGrid.x),\n                    y: Math.ceil(coords.clientY / snapGrid.y)\n                };\n            }\n            return ((/** @type {?} */ (merge(mousemove$.pipe(take(1)).pipe(map(coords => [, coords])), mousemove$.pipe(pairwise())))))\n                .pipe(map(([previousCoords, newCoords]) => {\n                return [\n                    previousCoords ? getDiff(previousCoords) : previousCoords,\n                    getDiff(newCoords)\n                ];\n            }))\n                .pipe(filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                    return true;\n                }\n                /** @type {?} */\n                const snapGrid = getSnapGrid();\n                /** @type {?} */\n                const previousGrid = getGrid(previousCoords, snapGrid);\n                /** @type {?} */\n                const newGrid = getGrid(newCoords, snapGrid);\n                return (previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y);\n            }))\n                .pipe(map(([, newCoords]) => {\n                /** @type {?} */\n                const snapGrid = getSnapGrid();\n                return {\n                    clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                    clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n            }))\n                .pipe(takeUntil(merge(mouseup$, mousedown$)));\n        }))\n            .pipe(filter(() => !!currentResize));\n        mousedrag\n            .pipe(map(({ clientX, clientY }) => {\n            return getNewBoundingRectangle((/** @type {?} */ (currentResize)).startingRect, (/** @type {?} */ (currentResize)).edges, clientX, clientY);\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return (this.allowNegativeResizes ||\n                !!(newBoundingRect.height &&\n                    newBoundingRect.width &&\n                    newBoundingRect.height > 0 &&\n                    newBoundingRect.width > 0));\n        }))\n            .pipe(filter((newBoundingRect) => {\n            return this.validateResize\n                ? this.validateResize({\n                    rectangle: newBoundingRect,\n                    edges: getEdgesDiff({\n                        edges: (/** @type {?} */ (currentResize)).edges,\n                        initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                        newRectangle: newBoundingRect\n                    })\n                })\n                : true;\n        }), takeUntil(this.destroy$))\n            .subscribe((newBoundingRect) => {\n            if (currentResize && currentResize.clonedNode) {\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${newBoundingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${newBoundingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${newBoundingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${newBoundingRect.left}px`);\n            }\n            if (this.resizing.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizing.emit({\n                        edges: getEdgesDiff({\n                            edges: (/** @type {?} */ (currentResize)).edges,\n                            initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                            newRectangle: newBoundingRect\n                        }),\n                        rectangle: newBoundingRect\n                    });\n                });\n            }\n            (/** @type {?} */ (currentResize)).currentRect = newBoundingRect;\n        });\n        mousedown$\n            .pipe(map(({ clientX, clientY, edges }) => {\n            return (edges ||\n                getResizeEdges({\n                    clientX,\n                    clientY,\n                    elm: this.elm,\n                    allowedEdges: this.resizeEdges,\n                    cursorPrecision: this.resizeCursorPrecision\n                }));\n        }))\n            .pipe(filter((edges) => {\n            return Object.keys(edges).length > 0;\n        }), takeUntil(this.destroy$))\n            .subscribe((edges) => {\n            if (currentResize) {\n                removeGhostElement();\n            }\n            /** @type {?} */\n            const startingRect = getElementRect(this.elm, this.ghostElementPositioning);\n            currentResize = {\n                edges,\n                startingRect,\n                currentRect: startingRect\n            };\n            /** @type {?} */\n            const resizeCursors = getResizeCursors();\n            /** @type {?} */\n            const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n            this.renderer.setStyle(document.body, 'cursor', cursor);\n            this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n            if (this.enableGhostResize) {\n                currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n                this.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);\n                this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'hidden');\n                this.renderer.setStyle(currentResize.clonedNode, 'position', this.ghostElementPositioning);\n                this.renderer.setStyle(currentResize.clonedNode, 'left', `${currentResize.startingRect.left}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'top', `${currentResize.startingRect.top}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'height', `${currentResize.startingRect.height}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'width', `${currentResize.startingRect.width}px`);\n                this.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));\n                this.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);\n                (/** @type {?} */ (currentResize.clonedNode)).scrollTop = (/** @type {?} */ (currentResize.startingRect\n                    .scrollTop));\n                (/** @type {?} */ (currentResize.clonedNode)).scrollLeft = (/** @type {?} */ (currentResize.startingRect\n                    .scrollLeft));\n            }\n            if (this.resizeStart.observers.length > 0) {\n                this.zone.run(() => {\n                    this.resizeStart.emit({\n                        edges: getEdgesDiff({\n                            edges,\n                            initialRectangle: startingRect,\n                            newRectangle: startingRect\n                        }),\n                        rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n                    });\n                });\n            }\n        });\n        mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            if (currentResize) {\n                this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n                this.renderer.setStyle(document.body, 'cursor', '');\n                this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n                if (this.resizeEnd.observers.length > 0) {\n                    this.zone.run(() => {\n                        this.resizeEnd.emit({\n                            edges: getEdgesDiff({\n                                edges: (/** @type {?} */ (currentResize)).edges,\n                                initialRectangle: (/** @type {?} */ (currentResize)).startingRect,\n                                newRectangle: (/** @type {?} */ (currentResize)).currentRect\n                            }),\n                            rectangle: (/** @type {?} */ (currentResize)).currentRect\n                        });\n                    });\n                }\n                removeGhostElement();\n                currentResize = null;\n            }\n        });\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.resizeEdges) {\n            this.resizeEdges$.next(this.resizeEdges);\n        }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // browser check for angular universal, because it doesn't know what document is\n        if (isPlatformBrowser(this.platformId)) {\n            this.renderer.setStyle(document.body, 'cursor', '');\n        }\n        this.mousedown.complete();\n        this.mouseup.complete();\n        this.mousemove.complete();\n        this.resizeEdges$.complete();\n        this.destroy$.next();\n    }\n    /**\n     * @private\n     * @param {?} elm\n     * @param {?} name\n     * @param {?} add\n     * @return {?}\n     */\n    setElementClass(elm, name, add) {\n        if (add) {\n            this.renderer.addClass(elm.nativeElement, name);\n        }\n        else {\n            this.renderer.removeClass(elm.nativeElement, name);\n        }\n    }\n}\nResizableDirective.Éµfac = function ResizableDirective_Factory(t) { return new (t || ResizableDirective)(Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nResizableDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: ResizableDirective, selectors: [[\"\", \"mwlResizable\", \"\"]], inputs: { resizeEdges: \"resizeEdges\", enableGhostResize: \"enableGhostResize\", resizeSnapGrid: \"resizeSnapGrid\", resizeCursors: \"resizeCursors\", resizeCursorPrecision: \"resizeCursorPrecision\", ghostElementPositioning: \"ghostElementPositioning\", allowNegativeResizes: \"allowNegativeResizes\", mouseMoveThrottleMS: \"mouseMoveThrottleMS\", validateResize: \"validateResize\" }, outputs: { resizeStart: \"resizeStart\", resizing: \"resizing\", resizeEnd: \"resizeEnd\" }, exportAs: [\"mwlResizable\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\n/** @nocollapse */\nResizableDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone }\n];\nResizableDirective.propDecorators = {\n    validateResize: [{ type: Input }],\n    resizeEdges: [{ type: Input }],\n    enableGhostResize: [{ type: Input }],\n    resizeSnapGrid: [{ type: Input }],\n    resizeCursors: [{ type: Input }],\n    resizeCursorPrecision: [{ type: Input }],\n    ghostElementPositioning: [{ type: Input }],\n    allowNegativeResizes: [{ type: Input }],\n    mouseMoveThrottleMS: [{ type: Input }],\n    resizeStart: [{ type: Output }],\n    resizing: [{ type: Output }],\n    resizeEnd: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlResizable]',\n                exportAs: 'mwlResizable'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: Éµngcc0.Renderer2 }, { type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }]; }, { resizeEdges: [{\n            type: Input\n        }], enableGhostResize: [{\n            type: Input\n        }], resizeSnapGrid: [{\n            type: Input\n        }], resizeCursors: [{\n            type: Input\n        }], resizeCursorPrecision: [{\n            type: Input\n        }], ghostElementPositioning: [{\n            type: Input\n        }], allowNegativeResizes: [{\n            type: Input\n        }], mouseMoveThrottleMS: [{\n            type: Input\n        }], resizeStart: [{\n            type: Output\n        }], resizing: [{\n            type: Output\n        }], resizeEnd: [{\n            type: Output\n        }], validateResize: [{\n            type: Input\n        }] }); })();\nclass PointerEventListeners {\n    // tslint:disable-line\n    /**\n     * @param {?} renderer\n     * @param {?} zone\n     * @return {?}\n     */\n    static getInstance(renderer, zone) {\n        if (!PointerEventListeners.instance) {\n            PointerEventListeners.instance = new PointerEventListeners(renderer, zone);\n        }\n        return PointerEventListeners.instance;\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} zone\n     */\n    constructor(renderer, zone) {\n        this.pointerDown = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseDown;\n            /** @type {?} */\n            let unsubscribeTouchStart;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseDown = renderer.listen('document', 'mousedown', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchStart = renderer.listen('document', 'touchstart', (event) => {\n                        observer.next({\n                            clientX: event.touches[0].clientX,\n                            clientY: event.touches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseDown();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchStart))();\n                }\n            };\n        }).pipe(share());\n        this.pointerMove = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseMove;\n            /** @type {?} */\n            let unsubscribeTouchMove;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseMove = renderer.listen('document', 'mousemove', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchMove = renderer.listen('document', 'touchmove', (event) => {\n                        observer.next({\n                            clientX: event.targetTouches[0].clientX,\n                            clientY: event.targetTouches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseMove();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchMove))();\n                }\n            };\n        }).pipe(share());\n        this.pointerUp = new Observable((observer) => {\n            /** @type {?} */\n            let unsubscribeMouseUp;\n            /** @type {?} */\n            let unsubscribeTouchEnd;\n            /** @type {?} */\n            let unsubscribeTouchCancel;\n            zone.runOutsideAngular(() => {\n                unsubscribeMouseUp = renderer.listen('document', 'mouseup', (event) => {\n                    observer.next({\n                        clientX: event.clientX,\n                        clientY: event.clientY,\n                        event\n                    });\n                });\n                if (IS_TOUCH_DEVICE) {\n                    unsubscribeTouchEnd = renderer.listen('document', 'touchend', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event\n                        });\n                    });\n                    unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', (event) => {\n                        observer.next({\n                            clientX: event.changedTouches[0].clientX,\n                            clientY: event.changedTouches[0].clientY,\n                            event\n                        });\n                    });\n                }\n            });\n            return () => {\n                unsubscribeMouseUp();\n                if (IS_TOUCH_DEVICE) {\n                    (/** @type {?} */ (unsubscribeTouchEnd))();\n                    (/** @type {?} */ (unsubscribeTouchCancel))();\n                }\n            };\n        }).pipe(share());\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n * Or in case they are sibling elements:\n * ```html\n * <div mwlResizable #resizableElement=\"mwlResizable\"></div>\n * <div mwlResizeHandle [resizableContainer]=\"resizableElement\" [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * ```\n */\nclass ResizeHandleDirective {\n    /**\n     * @param {?} renderer\n     * @param {?} element\n     * @param {?} zone\n     * @param {?} resizableDirective\n     */\n    constructor(renderer, element, zone, resizableDirective) {\n        this.renderer = renderer;\n        this.element = element;\n        this.zone = zone;\n        this.resizableDirective = resizableDirective;\n        /**\n         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n         */\n        this.resizeEdges = {};\n        this.eventListeners = {};\n        this.destroy$ = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.zone.runOutsideAngular(() => {\n            this.listenOnTheHost('mousedown').subscribe(event => {\n                this.onMousedown(event, event.clientX, event.clientY);\n            });\n            this.listenOnTheHost('mouseup').subscribe(event => {\n                this.onMouseup(event.clientX, event.clientY);\n            });\n            if (IS_TOUCH_DEVICE) {\n                this.listenOnTheHost('touchstart').subscribe(event => {\n                    this.onMousedown(event, event.touches[0].clientX, event.touches[0].clientY);\n                });\n                merge(this.listenOnTheHost('touchend'), this.listenOnTheHost('touchcancel')).subscribe(event => {\n                    this.onMouseup(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n                });\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.unsubscribeEventListeners();\n    }\n    /**\n     * @hidden\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMousedown(event, clientX, clientY) {\n        event.preventDefault();\n        if (!this.eventListeners.touchmove) {\n            this.eventListeners.touchmove = this.renderer.listen(this.element.nativeElement, 'touchmove', (touchMoveEvent) => {\n                this.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);\n            });\n        }\n        if (!this.eventListeners.mousemove) {\n            this.eventListeners.mousemove = this.renderer.listen(this.element.nativeElement, 'mousemove', (mouseMoveEvent) => {\n                this.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);\n            });\n        }\n        this.resizable.mousedown.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges\n        });\n    }\n    /**\n     * @hidden\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMouseup(clientX, clientY) {\n        this.unsubscribeEventListeners();\n        this.resizable.mouseup.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges\n        });\n    }\n    // directive might be passed from DI or as an input\n    /**\n     * @private\n     * @return {?}\n     */\n    get resizable() {\n        return this.resizableDirective || this.resizableContainer;\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @param {?} clientX\n     * @param {?} clientY\n     * @return {?}\n     */\n    onMousemove(event, clientX, clientY) {\n        this.resizable.mousemove.next({\n            clientX,\n            clientY,\n            edges: this.resizeEdges,\n            event\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    unsubscribeEventListeners() {\n        Object.keys(this.eventListeners).forEach(type => {\n            ((/** @type {?} */ (this))).eventListeners[type]();\n            delete this.eventListeners[type];\n        });\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} eventName\n     * @return {?}\n     */\n    listenOnTheHost(eventName) {\n        return fromEvent(this.element.nativeElement, eventName).pipe(takeUntil(this.destroy$));\n    }\n}\nResizeHandleDirective.Éµfac = function ResizeHandleDirective_Factory(t) { return new (t || ResizeHandleDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.Renderer2), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(ResizableDirective, 8)); };\nResizeHandleDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: ResizeHandleDirective, selectors: [[\"\", \"mwlResizeHandle\", \"\"]], inputs: { resizeEdges: \"resizeEdges\", resizableContainer: \"resizableContainer\" } });\n/** @nocollapse */\nResizeHandleDirective.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ResizableDirective, decorators: [{ type: Optional }] }\n];\nResizeHandleDirective.propDecorators = {\n    resizeEdges: [{ type: Input }],\n    resizableContainer: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizeHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[mwlResizeHandle]'\n            }]\n    }], function () { return [{ type: Éµngcc0.Renderer2 }, { type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }, { type: ResizableDirective, decorators: [{\n                type: Optional\n            }] }]; }, { resizeEdges: [{\n            type: Input\n        }], resizableContainer: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ResizableModule {\n}\nResizableModule.Éµfac = function ResizableModule_Factory(t) { return new (t || ResizableModule)(); };\nResizableModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: ResizableModule });\nResizableModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ResizableModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ResizableDirective, ResizeHandleDirective],\n                exports: [ResizableDirective, ResizeHandleDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(ResizableModule, { declarations: [ResizableDirective, ResizeHandleDirective], exports: [ResizableDirective, ResizeHandleDirective] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ResizableDirective, ResizeHandleDirective, ResizableModule };\n\n//# sourceMappingURL=angular-resizable-element.js.map"]},"metadata":{},"sourceType":"module"}