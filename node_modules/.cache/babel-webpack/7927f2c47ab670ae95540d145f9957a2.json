{"ast":null,"code":"import _assertThisInitialized from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createForOfIteratorHelper from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _createClass from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { EventEmitter, Component, Renderer2, Inject, ViewChild, Input, Output, NgModule, ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nvar _c0 = [\"cropcanvas\"];\nvar _c1 = [\"fileInput\"];\n\nfunction ImageCropperComponent_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"change\", function ImageCropperComponent_input_1_Template_input_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.fileChangeListener($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar CropperDrawSettings = function CropperDrawSettings(settings) {\n  _classCallCheck(this, CropperDrawSettings);\n\n  this.lineDash = false;\n  this.strokeWidth = 1;\n  this.strokeColor = 'rgba(255,255,255,1)';\n  this.fillColor = 'rgba(255,255,255,1)';\n  this.dragIconStrokeWidth = 1;\n  this.dragIconStrokeColor = 'rgba(0,0,0,1)';\n  this.dragIconFillColor = 'rgba(255,255,255,1)';\n  this.backgroundFillColor = 'rgba(0,0,0,0.6)';\n\n  if (typeof settings === 'object') {\n    this.lineDash = settings.lineDash || this.lineDash;\n    this.strokeWidth = settings.strokeWidth || this.strokeWidth;\n    this.fillColor = settings.fillColor || this.fillColor;\n    this.strokeColor = settings.strokeColor || this.strokeColor;\n    this.dragIconStrokeWidth = settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\n    this.dragIconStrokeColor = settings.dragIconStrokeColor || this.dragIconStrokeColor;\n    this.dragIconFillColor = settings.dragIconFillColor || this.dragIconFillColor;\n    this.backgroundFillColor = settings.backgroundFillColor || this.backgroundFillColor;\n  }\n};\n\nvar CropperSettings = /*#__PURE__*/function () {\n  function CropperSettings(settings) {\n    _classCallCheck(this, CropperSettings);\n\n    this.canvasWidth = 300;\n    this.canvasHeight = 300;\n    this.dynamicSizing = false;\n    this.width = 200;\n    this.height = 200;\n    this.minWidth = 50;\n    this.minHeight = 50;\n    this.minWithRelativeToResolution = true;\n    this.croppedWidth = 100;\n    this.croppedHeight = 100;\n    this.cropperDrawSettings = new CropperDrawSettings();\n    this.touchRadius = 20;\n    this.noFileInput = false;\n    this.markerSizeMultiplier = 1;\n    this.centerTouchRadius = 20;\n    this.showCenterMarker = true;\n    this.allowedFilesRegex = /\\.(jpe?g|png|gif|bmp)$/i;\n    this.cropOnResize = true;\n    this.preserveSize = false;\n    this.compressRatio = 1.0; // tslint:disable-next-line:variable-name\n\n    this._rounded = false; // tslint:disable-next-line:variable-name\n\n    this._keepAspect = true;\n\n    if (typeof settings === 'object') {\n      Object.assign(this, settings);\n    }\n  }\n\n  _createClass(CropperSettings, [{\n    key: \"rounded\",\n    get: function get() {\n      return this._rounded;\n    },\n    set: function set(val) {\n      this._rounded = val;\n\n      if (val) {\n        this._keepAspect = true;\n      }\n    }\n  }, {\n    key: \"keepAspect\",\n    get: function get() {\n      return this._keepAspect;\n    },\n    set: function set(val) {\n      this._keepAspect = val;\n\n      if (this._rounded === true && this._keepAspect === false) {\n        console.error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');\n        this._keepAspect = true;\n      }\n    }\n  }]);\n\n  return CropperSettings;\n}();\n\nvar Fraction = /*#__PURE__*/function (_Number) {\n  _inherits(Fraction, _Number);\n\n  var _super = _createSuper(Fraction);\n\n  function Fraction() {\n    _classCallCheck(this, Fraction);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Fraction;\n}( /*#__PURE__*/_wrapNativeSuper(Number));\n\nvar Exif = /*#__PURE__*/function () {\n  function Exif() {\n    _classCallCheck(this, Exif);\n\n    this.debug = false;\n    this.IptcFieldMap = {\n      0x78: 'caption',\n      0x6e: 'credit',\n      0x19: 'keywords',\n      0x37: 'dateCreated',\n      0x50: 'byline',\n      0x55: 'bylineTitle',\n      0x7a: 'captionWriter',\n      0x69: 'headline',\n      0x74: 'copyright',\n      0x0f: 'category'\n    };\n    this.Tags = {\n      // version tags\n      0x9000: 'ExifVersion',\n      0xa000: 'FlashpixVersion',\n      // colorspace tags\n      0xa001: 'ColorSpace',\n      // image configuration\n      0xa002: 'PixelXDimension',\n      0xa003: 'PixelYDimension',\n      0x9101: 'ComponentsConfiguration',\n      0x9102: 'CompressedBitsPerPixel',\n      // user information\n      0x927c: 'MakerNote',\n      0x9286: 'UserComment',\n      // related file\n      0xa004: 'RelatedSoundFile',\n      // date and time\n      0x9003: 'DateTimeOriginal',\n      0x9004: 'DateTimeDigitized',\n      0x9290: 'SubsecTime',\n      0x9291: 'SubsecTimeOriginal',\n      0x9292: 'SubsecTimeDigitized',\n      // picture-taking conditions\n      0x829a: 'ExposureTime',\n      0x829d: 'FNumber',\n      0x8822: 'ExposureProgram',\n      0x8824: 'SpectralSensitivity',\n      0x8827: 'ISOSpeedRatings',\n      0x8828: 'OECF',\n      0x9201: 'ShutterSpeedValue',\n      0x9202: 'ApertureValue',\n      0x9203: 'BrightnessValue',\n      0x9204: 'ExposureBias',\n      0x9205: 'MaxApertureValue',\n      0x9206: 'SubjectDistance',\n      0x9207: 'MeteringMode',\n      0x9208: 'LightSource',\n      0x9209: 'Flash',\n      0x9214: 'SubjectArea',\n      0x920a: 'FocalLength',\n      0xa20b: 'FlashEnergy',\n      0xa20c: 'SpatialFrequencyResponse',\n      0xa20e: 'FocalPlaneXResolution',\n      0xa20f: 'FocalPlaneYResolution',\n      0xa210: 'FocalPlaneResolutionUnit',\n      0xa214: 'SubjectLocation',\n      0xa215: 'ExposureIndex',\n      0xa217: 'SensingMethod',\n      0xa300: 'FileSource',\n      0xa301: 'SceneType',\n      0xa302: 'CFAPattern',\n      0xa401: 'CustomRendered',\n      0xa402: 'ExposureMode',\n      0xa403: 'WhiteBalance',\n      0xa404: 'DigitalZoomRation',\n      0xa405: 'FocalLengthIn35mmFilm',\n      0xa406: 'SceneCaptureType',\n      0xa407: 'GainControl',\n      0xa408: 'Contrast',\n      0xa409: 'Saturation',\n      0xa40a: 'Sharpness',\n      0xa40b: 'DeviceSettingDescription',\n      0xa40c: 'SubjectDistanceRange',\n      // other tags\n      0xa005: 'InteroperabilityIFDPointer',\n      0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\n\n    };\n    this.TiffTags = {\n      0x0100: 'ImageWidth',\n      0x0101: 'ImageHeight',\n      0x8769: 'ExifIFDPointer',\n      0x8825: 'GPSInfoIFDPointer',\n      0xa005: 'InteroperabilityIFDPointer',\n      0x0102: 'BitsPerSample',\n      0x0103: 'Compression',\n      0x0106: 'PhotometricInterpretation',\n      0x0112: 'Orientation',\n      0x0115: 'SamplesPerPixel',\n      0x011c: 'PlanarConfiguration',\n      0x0212: 'YCbCrSubSampling',\n      0x0213: 'YCbCrPositioning',\n      0x011a: 'XResolution',\n      0x011b: 'YResolution',\n      0x0128: 'ResolutionUnit',\n      0x0111: 'StripOffsets',\n      0x0116: 'RowsPerStrip',\n      0x0117: 'StripByteCounts',\n      0x0201: 'JPEGInterchangeFormat',\n      0x0202: 'JPEGInterchangeFormatLength',\n      0x012d: 'TransferFunction',\n      0x013e: 'WhitePoint',\n      0x013f: 'PrimaryChromaticities',\n      0x0211: 'YCbCrCoefficients',\n      0x0214: 'ReferenceBlackWhite',\n      0x0132: 'DateTime',\n      0x010e: 'ImageDescription',\n      0x010f: 'Make',\n      0x0110: 'Model',\n      0x0131: 'Software',\n      0x013b: 'Artist',\n      0x8298: 'Copyright'\n    };\n    this.GPSTags = {\n      0x0000: 'GPSVersionID',\n      0x0001: 'GPSLatitudeRef',\n      0x0002: 'GPSLatitude',\n      0x0003: 'GPSLongitudeRef',\n      0x0004: 'GPSLongitude',\n      0x0005: 'GPSAltitudeRef',\n      0x0006: 'GPSAltitude',\n      0x0007: 'GPSTimeStamp',\n      0x0008: 'GPSSatellites',\n      0x0009: 'GPSStatus',\n      0x000a: 'GPSMeasureMode',\n      0x000b: 'GPSDOP',\n      0x000c: 'GPSSpeedRef',\n      0x000d: 'GPSSpeed',\n      0x000e: 'GPSTrackRef',\n      0x000f: 'GPSTrack',\n      0x0010: 'GPSImgDirectionRef',\n      0x0011: 'GPSImgDirection',\n      0x0012: 'GPSMapDatum',\n      0x0013: 'GPSDestLatitudeRef',\n      0x0014: 'GPSDestLatitude',\n      0x0015: 'GPSDestLongitudeRef',\n      0x0016: 'GPSDestLongitude',\n      0x0017: 'GPSDestBearingRef',\n      0x0018: 'GPSDestBearing',\n      0x0019: 'GPSDestDistanceRef',\n      0x001a: 'GPSDestDistance',\n      0x001b: 'GPSProcessingMethod',\n      0x001c: 'GPSAreaInformation',\n      0x001d: 'GPSDateStamp',\n      0x001e: 'GPSDifferential'\n    };\n    this.StringValues = {\n      ExposureProgram: {\n        0: 'Not defined',\n        1: 'Manual',\n        2: 'Normal program',\n        3: 'Aperture priority',\n        4: 'Shutter priority',\n        5: 'Creative program',\n        6: 'Action program',\n        7: 'Portrait mode',\n        8: 'Landscape mode'\n      },\n      MeteringMode: {\n        0: 'Unknown',\n        1: 'Average',\n        2: 'CenterWeightedAverage',\n        3: 'Spot',\n        4: 'MultiSpot',\n        5: 'Pattern',\n        6: 'Partial',\n        255: 'Other'\n      },\n      LightSource: {\n        0: 'Unknown',\n        1: 'Daylight',\n        2: 'Fluorescent',\n        3: 'Tungsten (incandescent light)',\n        4: 'Flash',\n        9: 'Fine weather',\n        10: 'Cloudy weather',\n        11: 'Shade',\n        12: 'Daylight fluorescent (D 5700 - 7100K)',\n        13: 'Day white fluorescent (N 4600 - 5400K)',\n        14: 'Cool white fluorescent (W 3900 - 4500K)',\n        15: 'White fluorescent (WW 3200 - 3700K)',\n        17: 'Standard light A',\n        18: 'Standard light B',\n        19: 'Standard light C',\n        20: 'D55',\n        21: 'D65',\n        22: 'D75',\n        23: 'D50',\n        24: 'ISO studio tungsten',\n        255: 'Other'\n      },\n      Flash: {\n        0x0000: 'Flash did not fire',\n        0x0001: 'Flash fired',\n        0x0005: 'Strobe return light not detected',\n        0x0007: 'Strobe return light detected',\n        0x0009: 'Flash fired, compulsory flash mode',\n        0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n        0x000f: 'Flash fired, compulsory flash mode, return light detected',\n        0x0010: 'Flash did not fire, compulsory flash mode',\n        0x0018: 'Flash did not fire, auto mode',\n        0x0019: 'Flash fired, auto mode',\n        0x001d: 'Flash fired, auto mode, return light not detected',\n        0x001f: 'Flash fired, auto mode, return light detected',\n        0x0020: 'No flash function',\n        0x0041: 'Flash fired, red-eye reduction mode',\n        0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n        0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n        0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n        0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n        0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n        0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n        0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n        0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n      },\n      SensingMethod: {\n        1: 'Not defined',\n        2: 'One-chip color area sensor',\n        3: 'Two-chip color area sensor',\n        4: 'Three-chip color area sensor',\n        5: 'Color sequential area sensor',\n        7: 'Trilinear sensor',\n        8: 'Color sequential linear sensor'\n      },\n      SceneCaptureType: {\n        0: 'Standard',\n        1: 'Landscape',\n        2: 'Portrait',\n        3: 'Night scene'\n      },\n      SceneType: {\n        1: 'Directly photographed'\n      },\n      CustomRendered: {\n        0: 'Normal process',\n        1: 'Custom process'\n      },\n      WhiteBalance: {\n        0: 'Auto white balance',\n        1: 'Manual white balance'\n      },\n      GainControl: {\n        0: 'None',\n        1: 'Low gain up',\n        2: 'High gain up',\n        3: 'Low gain down',\n        4: 'High gain down'\n      },\n      Contrast: {\n        0: 'Normal',\n        1: 'Soft',\n        2: 'Hard'\n      },\n      Saturation: {\n        0: 'Normal',\n        1: 'Low saturation',\n        2: 'High saturation'\n      },\n      Sharpness: {\n        0: 'Normal',\n        1: 'Soft',\n        2: 'Hard'\n      },\n      SubjectDistanceRange: {\n        0: 'Unknown',\n        1: 'Macro',\n        2: 'Close view',\n        3: 'Distant view'\n      },\n      FileSource: {\n        3: 'DSC'\n      },\n      Components: {\n        0: '',\n        1: 'Y',\n        2: 'Cb',\n        3: 'Cr',\n        4: 'R',\n        5: 'G',\n        6: 'B'\n      }\n    };\n  }\n\n  _createClass(Exif, [{\n    key: \"addEvent\",\n    value: function addEvent(element, event, handler) {\n      if (element.addEventListener) {\n        element.addEventListener(event, handler, false);\n      } else {\n        // Hello, IE!\n        if (element.attachEvent) {\n          element.attachEvent('on' + event, handler);\n        }\n      }\n    }\n  }, {\n    key: \"imageHasData\",\n    value: function imageHasData(img) {\n      return !!img.exifdata;\n    }\n  }, {\n    key: \"base64ToArrayBuffer\",\n    value: function base64ToArrayBuffer(base64) {\n      base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\n      var binary = atob(base64);\n      var len = binary.length;\n      var buffer = new ArrayBuffer(len);\n      var view = new Uint8Array(buffer);\n\n      for (var i = 0; i < len; i++) {\n        view[i] = binary.charCodeAt(i);\n      }\n\n      return buffer;\n    }\n  }, {\n    key: \"objectURLToBlob\",\n    value: function objectURLToBlob(url, callback) {\n      var http = new XMLHttpRequest();\n      http.open('GET', url, true);\n      http.responseType = 'blob';\n\n      http.onload = function () {\n        if (http.status === 200 || http.status === 0) {\n          callback(http.response);\n        }\n      };\n\n      http.send();\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(img, callback) {\n      var _this = this;\n\n      var handleBinaryFile = function handleBinaryFile(binFile) {\n        var data = _this.findEXIFinJPEG(binFile);\n\n        var iptcdata = _this.findIPTCinJPEG(binFile);\n\n        img.exifdata = data || {};\n        img.iptcdata = iptcdata || {};\n\n        if (callback) {\n          callback.call(img);\n        }\n      };\n\n      if ('src' in img && img.src) {\n        if (/^data:/i.test(img.src)) {\n          // Data URI\n          var arrayBuffer = this.base64ToArrayBuffer(img.src);\n          handleBinaryFile(arrayBuffer);\n        } else {\n          if (/^blob:/i.test(img.src)) {\n            // Object URL\n            var fileReader = new FileReader();\n\n            fileReader.onload = function (e) {\n              handleBinaryFile(e.target.result);\n            };\n\n            this.objectURLToBlob(img.src, function (blob) {\n              fileReader.readAsArrayBuffer(blob);\n            });\n          } else {\n            var http = new XMLHttpRequest();\n\n            http.onload = function () {\n              if (http.status === 200 || http.status === 0) {\n                handleBinaryFile(http.response);\n              } else {\n                throw new Error('Could not load image');\n              }\n            };\n\n            http.open('GET', img.src, true);\n            http.responseType = 'arraybuffer';\n            http.send(null);\n          }\n        }\n      } else {\n        if (FileReader && (img instanceof Blob || img instanceof File)) {\n          var _fileReader = new FileReader();\n\n          _fileReader.onload = function (e) {\n            _this.log('Got file of length ' + e.target.result.byteLength);\n\n            handleBinaryFile(e.target.result);\n          };\n\n          _fileReader.readAsArrayBuffer(img);\n        }\n      }\n    }\n  }, {\n    key: \"findEXIFinJPEG\",\n    value: function findEXIFinJPEG(file) {\n      var dataView = new DataView(file);\n      this.log('Got file of length ' + file.byteLength);\n\n      if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n        this.log('Not a valid JPEG');\n        return false; // not a valid jpeg\n      }\n\n      var offset = 2;\n      var length = file.byteLength;\n      var marker;\n\n      while (offset < length) {\n        if (dataView.getUint8(offset) !== 0xff) {\n          this.log('Not a valid marker at offset ' + offset + ', found: ' + dataView.getUint8(offset));\n          return false; // not a valid marker, something is wrong\n        }\n\n        marker = dataView.getUint8(offset + 1);\n        this.log(marker); // we could implement handling for other markers here,\n        // but we're only looking for 0xFFE1 for EXIF data\n\n        if (marker === 225) {\n          this.log('Found 0xFFE1 marker');\n          return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\n          // offset += 2 + file.getShortAt(offset+2, true);\n        } else {\n          offset += 2 + dataView.getUint16(offset + 2);\n        }\n      }\n    }\n  }, {\n    key: \"findIPTCinJPEG\",\n    value: function findIPTCinJPEG(file) {\n      var dataView = new DataView(file);\n      this.log('Got file of length ' + file.byteLength);\n\n      if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n        this.log('Not a valid JPEG');\n        return false; // not a valid jpeg\n      }\n\n      var offset = 2;\n      var length = file.byteLength; // tslint:disable-next-line:variable-name\n\n      var isFieldSegmentStart = function isFieldSegmentStart(_dataView, _offset) {\n        return _dataView.getUint8(_offset) === 0x38 && _dataView.getUint8(_offset + 1) === 0x42 && _dataView.getUint8(_offset + 2) === 0x49 && _dataView.getUint8(_offset + 3) === 0x4d && _dataView.getUint8(_offset + 4) === 0x04 && _dataView.getUint8(_offset + 5) === 0x04;\n      };\n\n      while (offset < length) {\n        if (isFieldSegmentStart(dataView, offset)) {\n          // Get the length of the name header (which is padded to an even number of bytes)\n          var nameHeaderLength = dataView.getUint8(offset + 7);\n\n          if (nameHeaderLength % 2 !== 0) {\n            nameHeaderLength += 1;\n          } // Check for pre photoshop 6 format\n\n\n          if (nameHeaderLength === 0) {\n            // Always 4\n            nameHeaderLength = 4;\n          }\n\n          var startOffset = offset + 8 + nameHeaderLength;\n          var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n          return this.readIPTCData(file, startOffset, sectionLength);\n        } // Not the marker, continue searching\n\n\n        offset++;\n      }\n    }\n  }, {\n    key: \"readIPTCData\",\n    value: function readIPTCData(file, startOffset, sectionLength) {\n      var dataView = new DataView(file);\n      var data = {};\n      var fieldValue;\n      var fieldName;\n      var dataSize;\n      var segmentType;\n      var segmentSize;\n      var segmentStartPos = startOffset;\n\n      while (segmentStartPos < startOffset + sectionLength) {\n        if (dataView.getUint8(segmentStartPos) === 0x1c && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n          segmentType = dataView.getUint8(segmentStartPos + 2);\n\n          if (segmentType in this.IptcFieldMap) {\n            dataSize = dataView.getInt16(segmentStartPos + 3);\n            segmentSize = dataSize + 5;\n            fieldName = this.IptcFieldMap[segmentType];\n            fieldValue = this.getStringFromDB(dataView, segmentStartPos + 5, dataSize); // Check if we already stored a value with this name\n\n            if (data.hasOwnProperty(fieldName)) {\n              // Value already stored with this name, create multivalue field\n              if (data[fieldName] instanceof Array) {\n                data[fieldName].push(fieldValue);\n              } else {\n                data[fieldName] = [data[fieldName], fieldValue];\n              }\n            } else {\n              data[fieldName] = fieldValue;\n            }\n          }\n        }\n\n        segmentStartPos++;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"readTags\",\n    value: function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n      var entries = file.getUint16(dirStart, !bigEnd);\n      var tags = {};\n      var entryOffset;\n      var tag;\n\n      for (var i = 0; i < entries; i++) {\n        entryOffset = dirStart + i * 12 + 2;\n        tag = strings[file.getUint16(entryOffset, !bigEnd)];\n\n        if (!tag) {\n          this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\n        }\n\n        tags[tag] = this.readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n      }\n\n      return tags;\n    }\n  }, {\n    key: \"readTagValue\",\n    value: function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n      var type = file.getUint16(entryOffset + 2, !bigEnd);\n      var numValues = file.getUint32(entryOffset + 4, !bigEnd);\n      var valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\n      var offset;\n      var vals;\n      var val;\n      var n;\n      var numerator;\n      var denominator;\n\n      switch (type) {\n        case 1: // byte, 8-bit unsigned int\n\n        case 7:\n          // undefined, 8-bit byte, value depending on field\n          if (numValues === 1) {\n            return file.getUint8(entryOffset + 8, !bigEnd);\n          } else {\n            offset = numValues > 4 ? valueOffset : entryOffset + 8;\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint8(offset + n);\n            }\n\n            return vals;\n          }\n\n        case 2:\n          // ascii, 8-bit byte\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\n          return this.getStringFromDB(file, offset, numValues - 1);\n\n        case 3:\n          // short, 16 bit int\n          if (numValues === 1) {\n            return file.getUint16(entryOffset + 8, !bigEnd);\n          } else {\n            offset = numValues > 2 ? valueOffset : entryOffset + 8;\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 4:\n          // long, 32 bit int\n          if (numValues === 1) {\n            return file.getUint32(entryOffset + 8, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 5:\n          // rational = two long values, first is numerator, second is denominator\n          if (numValues === 1) {\n            numerator = file.getUint32(valueOffset, !bigEnd);\n            denominator = file.getUint32(valueOffset + 4, !bigEnd);\n            val = new Fraction(numerator / denominator);\n            val.numerator = numerator;\n            val.denominator = denominator;\n            return val;\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n              denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n              vals[n] = new Fraction(numerator / denominator);\n              vals[n].numerator = numerator;\n              vals[n].denominator = denominator;\n            }\n\n            return vals;\n          }\n\n        case 9:\n          // slong, 32 bit signed int\n          if (numValues === 1) {\n            return file.getInt32(entryOffset + 8, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        case 10:\n          // signed rational, two slongs, first is numerator, second is denominator\n          if (numValues === 1) {\n            return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n          } else {\n            vals = [];\n\n            for (n = 0; n < numValues; n++) {\n              vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n            }\n\n            return vals;\n          }\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"getStringFromDB\",\n    value: function getStringFromDB(buffer, start, length) {\n      var outstr = '';\n\n      for (var n = start; n < start + length; n++) {\n        outstr += String.fromCharCode(buffer.getUint8(n));\n      }\n\n      return outstr;\n    }\n  }, {\n    key: \"readEXIFData\",\n    value: function readEXIFData(file, start) {\n      if (this.getStringFromDB(file, start, 4) !== 'Exif') {\n        this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\n        return false;\n      }\n\n      var bigEnd;\n      var tags;\n      var tag;\n      var exifData;\n      var gpsData;\n      var tiffOffset = start + 6; // test for TIFF validity and endianness\n\n      if (file.getUint16(tiffOffset) === 0x4949) {\n        bigEnd = false;\n      } else {\n        if (file.getUint16(tiffOffset) === 0x4d4d) {\n          bigEnd = true;\n        } else {\n          this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\n          return false;\n        }\n      }\n\n      if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\n        this.log('Not valid TIFF data! (no 0x002A)');\n        return false;\n      }\n\n      var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n      if (firstIFDOffset < 0x00000008) {\n        this.log('Not valid TIFF data! (First offset less than 8)', file.getUint32(tiffOffset + 4, !bigEnd));\n        return false;\n      }\n\n      tags = this.readTags(file, tiffOffset, tiffOffset + firstIFDOffset, this.TiffTags, bigEnd);\n\n      if (tags.ExifIFDPointer) {\n        exifData = this.readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, this.Tags, bigEnd);\n\n        for (tag in exifData) {\n          if ({}.hasOwnProperty.call(exifData, tag)) {\n            switch (tag) {\n              case 'LightSource':\n              case 'Flash':\n              case 'MeteringMode':\n              case 'ExposureProgram':\n              case 'SensingMethod':\n              case 'SceneCaptureType':\n              case 'SceneType':\n              case 'CustomRendered':\n              case 'WhiteBalance':\n              case 'GainControl':\n              case 'Contrast':\n              case 'Saturation':\n              case 'Sharpness':\n              case 'SubjectDistanceRange':\n              case 'FileSource':\n                exifData[tag] = this.StringValues[tag][exifData[tag]];\n                break;\n\n              case 'ExifVersion':\n              case 'FlashpixVersion':\n                exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                break;\n\n              case 'ComponentsConfiguration':\n                var compopents = 'Components';\n                exifData[tag] = this.StringValues[compopents][exifData[tag][0]] + this.StringValues[compopents][exifData[tag][1]] + this.StringValues[compopents][exifData[tag][2]] + this.StringValues[compopents][exifData[tag][3]];\n                break;\n\n              default:\n                break;\n            }\n\n            tags[tag] = exifData[tag];\n          }\n        }\n      }\n\n      if (tags.GPSInfoIFDPointer) {\n        gpsData = this.readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, this.GPSTags, bigEnd);\n\n        for (tag in gpsData) {\n          if ({}.hasOwnProperty.call(gpsData, tag)) {\n            switch (tag) {\n              case 'GPSVersionID':\n                gpsData[tag] = gpsData[tag][0] + '.' + gpsData[tag][1] + '.' + gpsData[tag][2] + '.' + gpsData[tag][3];\n                break;\n\n              default:\n                break;\n            }\n\n            tags[tag] = gpsData[tag];\n          }\n        }\n      }\n\n      return tags;\n    } //   get rid of this silly issue\n\n  }, {\n    key: \"checkImageType\",\n    value: function checkImageType(img) {\n      return img instanceof Image || img instanceof HTMLImageElement;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(img, callback) {\n      if (this.checkImageType(img) && !img.complete) {\n        return false;\n      }\n\n      if (!this.imageHasData(img)) {\n        this.getImageData(img, callback);\n      } else {\n        if (callback) {\n          callback.call(img);\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getTag\",\n    value: function getTag(img, tag) {\n      if (!this.imageHasData(img)) {\n        return;\n      }\n\n      return img.exifdata[tag];\n    }\n  }, {\n    key: \"getAllTags\",\n    value: function getAllTags(img) {\n      if (!this.imageHasData(img)) {\n        return {};\n      }\n\n      var a;\n      var data = img.exifdata;\n      var tags = {};\n\n      for (a in data) {\n        if (data.hasOwnProperty(a)) {\n          tags[a] = data[a];\n        }\n      }\n\n      return tags;\n    }\n  }, {\n    key: \"pretty\",\n    value: function pretty(img) {\n      if (!this.imageHasData(img)) {\n        return '';\n      }\n\n      var a;\n      var data = img.exifdata;\n      var strPretty = '';\n\n      for (a in data) {\n        if (data.hasOwnProperty(a)) {\n          if (typeof data[a] === 'object') {\n            if (data[a] instanceof Number) {\n              strPretty += \"\".concat(a, \" : \").concat(data[a], \" [\").concat(data[a].numerator, \"/\").concat(data[a].denominator, \"]\\r\\n\");\n            } else {\n              strPretty += \"\".concat(a, \" : [\").concat(data[a].length, \" values]\\r\\n\");\n            }\n          } else {\n            strPretty += \"\".concat(a, \" : \").concat(data[a], \"\\r\\n\");\n          }\n        }\n      }\n\n      return strPretty;\n    }\n  }, {\n    key: \"readFromBinaryFile\",\n    value: function readFromBinaryFile(file) {\n      return this.findEXIFinJPEG(file);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (this.debug) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        console.log(args);\n      }\n    }\n  }]);\n\n  return Exif;\n}();\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: \"next\",\n    get: function get() {\n      return this.myNext;\n    },\n    set: function set(p) {\n      this.myNext = p;\n    }\n  }, {\n    key: \"prev\",\n    get: function get() {\n      return this.myPrev;\n    },\n    set: function set(p) {\n      this.myPrev = p;\n    }\n  }]);\n\n  return Point;\n}();\n\nvar PointPool = /*#__PURE__*/function () {\n  function PointPool() {\n    var initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    _classCallCheck(this, PointPool);\n\n    var prev = this.firstAvailable = new Point();\n\n    for (var i = 1; i < initialSize; i++) {\n      var p = new Point();\n      prev.next = p;\n      prev = p;\n    }\n  }\n\n  _createClass(PointPool, [{\n    key: \"instance\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"borrow\",\n    value: function borrow(x, y) {\n      if (this.firstAvailable == null) {\n        throw new Error('Pool exhausted');\n      }\n\n      this.borrowed++;\n      var p = this.firstAvailable;\n      this.firstAvailable = p.next;\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n  }, {\n    key: \"returnPoint\",\n    value: function returnPoint(p) {\n      this.borrowed--;\n      p.x = 0;\n      p.y = 0;\n      p.next = this.firstAvailable;\n      this.firstAvailable = p;\n    }\n  }]);\n\n  return PointPool;\n}();\n\nvar Bounds = /*#__PURE__*/function () {\n  function Bounds(x, y, width, height) {\n    _classCallCheck(this, Bounds);\n\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (width === void 0) {\n      width = 0;\n    }\n\n    if (height === void 0) {\n      height = 0;\n    }\n\n    this.left = x;\n    this.right = x + width;\n    this.top = y;\n    this.bottom = y + height;\n  }\n\n  _createClass(Bounds, [{\n    key: \"width\",\n    get: function get() {\n      return this.right - this.left;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.bottom - this.top;\n    }\n  }, {\n    key: \"getCentre\",\n    value: function getCentre() {\n      var w = this.width;\n      var h = this.height;\n      return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\n    }\n  }]);\n\n  return Bounds;\n}();\n\nvar Handle = /*#__PURE__*/function () {\n  function Handle(x, y, radius, settings) {\n    _classCallCheck(this, Handle);\n\n    this.cropperSettings = new CropperSettings();\n    this.over = false;\n    this.drag = false;\n    this._position = new Point(x, y);\n    this.offset = new Point(0, 0);\n    this.radius = radius;\n    this.cropperSettings = settings;\n  }\n\n  _createClass(Handle, [{\n    key: \"setDrag\",\n    value: function setDrag(value) {\n      this.drag = value;\n      this.setOver(value);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {// this should't be empty\n    }\n  }, {\n    key: \"setOver\",\n    value: function setOver(over) {\n      this.over = over;\n    }\n  }, {\n    key: \"touchInBounds\",\n    value: function touchInBounds(x, y) {\n      return x > this.position.x - this.radius + this.offset.x && x < this.position.x + this.radius + this.offset.x && y > this.position.y - this.radius + this.offset.y && y < this.position.y + this.radius + this.offset.y;\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(x, y) {\n      this._position.x = x;\n      this._position.y = y;\n    }\n  }]);\n\n  return Handle;\n}();\n\nvar CornerMarker = /*#__PURE__*/function (_Handle) {\n  _inherits(CornerMarker, _Handle);\n\n  var _super2 = _createSuper(CornerMarker);\n\n  function CornerMarker(x, y, radius, cropperSettings) {\n    _classCallCheck(this, CornerMarker);\n\n    return _super2.call(this, x, y, radius, cropperSettings);\n  }\n\n  _createClass(CornerMarker, [{\n    key: \"drawCornerBorder\",\n    value: function drawCornerBorder(ctx) {\n      var sideLength = 10;\n\n      if (this.over || this.drag) {\n        sideLength = 12;\n      }\n\n      var hDirection = this.cropperSettings.markerSizeMultiplier;\n      var vDirection = this.cropperSettings.markerSizeMultiplier;\n\n      if (this.horizontalNeighbour.position.x < this.position.x) {\n        hDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.verticalNeighbour.position.y < this.position.y) {\n        vDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      ctx.beginPath();\n\n      if (this.cropperSettings.cropperDrawSettings.lineDash) {\n        ctx.setLineDash([1, 3]);\n      }\n\n      ctx.lineJoin = 'miter';\n      ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.closePath();\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor || 'rgba(255,255,255,.7)';\n      ctx.stroke();\n    }\n  }, {\n    key: \"drawCornerFill\",\n    value: function drawCornerFill(ctx) {\n      var sideLength = 10;\n\n      if (this.over || this.drag) {\n        sideLength = 12;\n      }\n\n      var hDirection = this.cropperSettings.markerSizeMultiplier;\n      var vDirection = this.cropperSettings.markerSizeMultiplier;\n\n      if (this.horizontalNeighbour.position.x < this.position.x) {\n        hDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.verticalNeighbour.position.y < this.position.y) {\n        vDirection = -this.cropperSettings.markerSizeMultiplier;\n      }\n\n      if (this.cropperSettings.rounded) {\n        var width = this.position.x - this.horizontalNeighbour.position.x;\n        var height = this.position.y - this.verticalNeighbour.position.y;\n        var offX = Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\n        var offY = Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\n        this.offset.x = hDirection > 0 ? offX : -offX;\n        this.offset.y = vDirection > 0 ? offY : -offY;\n      } else {\n        this.offset.x = 0;\n        this.offset.y = 0;\n      }\n\n      ctx.beginPath();\n\n      if (this.cropperSettings.cropperDrawSettings.lineDash) {\n        ctx.setLineDash([1, 3]);\n      }\n\n      ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\n      ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\n      ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\n      ctx.closePath();\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.fillColor || 'rgba(255,255,255,.7)';\n      ctx.fill();\n    }\n  }, {\n    key: \"moveX\",\n    value: function moveX(x) {\n      this.setPosition(x, this.position.y);\n    }\n  }, {\n    key: \"moveY\",\n    value: function moveY(y) {\n      this.setPosition(this.position.x, y);\n    }\n  }, {\n    key: \"move\",\n    value: function move(x, y) {\n      this.setPosition(x, y);\n      this.verticalNeighbour.moveX(x);\n      this.horizontalNeighbour.moveY(y);\n    }\n  }, {\n    key: \"addHorizontalNeighbour\",\n    value: function addHorizontalNeighbour(neighbour) {\n      this.horizontalNeighbour = neighbour;\n    }\n  }, {\n    key: \"addVerticalNeighbour\",\n    value: function addVerticalNeighbour(neighbour) {\n      this.verticalNeighbour = neighbour;\n    }\n  }, {\n    key: \"getHorizontalNeighbour\",\n    value: function getHorizontalNeighbour() {\n      return this.horizontalNeighbour;\n    }\n  }, {\n    key: \"getVerticalNeighbour\",\n    value: function getVerticalNeighbour() {\n      return this.verticalNeighbour;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      this.drawCornerFill(ctx);\n      this.drawCornerBorder(ctx);\n    }\n  }]);\n\n  return CornerMarker;\n}(Handle);\n\nvar CropTouch = function CropTouch() {\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  _classCallCheck(this, CropTouch);\n\n  this.id = id;\n  this.x = x;\n  this.y = y;\n};\n\nvar DragMarker = /*#__PURE__*/function (_Handle2) {\n  _inherits(DragMarker, _Handle2);\n\n  var _super3 = _createSuper(DragMarker);\n\n  function DragMarker(x, y, radius, cropperSettings) {\n    var _this2;\n\n    _classCallCheck(this, DragMarker);\n\n    _this2 = _super3.call(this, x, y, radius, cropperSettings);\n    _this2.iconPoints = [];\n    _this2.scaledIconPoints = [];\n\n    _this2.getDragIconPoints(_this2.iconPoints, 1);\n\n    _this2.getDragIconPoints(_this2.scaledIconPoints, 1.2);\n\n    return _this2;\n  }\n\n  _createClass(DragMarker, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (this.over || this.drag) {\n        this.drawIcon(ctx, this.scaledIconPoints);\n      } else {\n        this.drawIcon(ctx, this.iconPoints);\n      }\n    }\n  }, {\n    key: \"getDragIconPoints\",\n    value: function getDragIconPoints(arr, scale) {\n      var maxLength = 17 * scale;\n      var arrowWidth = 14 * scale;\n      var arrowLength = 8 * scale;\n      var connectorThroat = 4 * scale;\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(0, maxLength));\n      arr.push(new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, maxLength - arrowLength));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(maxLength, 0));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(0, -maxLength));\n      arr.push(new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength, 0));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\n      arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\n      arr.push(new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2));\n    }\n  }, {\n    key: \"drawIcon\",\n    value: function drawIcon(ctx, points) {\n      if (this.cropperSettings.showCenterMarker) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\n\n        var _iterator = _createForOfIteratorHelper(points),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var p = _step.value;\n            ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        ctx.closePath();\n        ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\n        ctx.fill();\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\n        ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"recalculatePosition\",\n    value: function recalculatePosition(bounds) {\n      var c = bounds.getCentre();\n      this.setPosition(c.x, c.y);\n      new PointPool().instance.returnPoint(c);\n    }\n  }]);\n\n  return DragMarker;\n}(Handle);\n\nvar ImageCropperModel = function ImageCropperModel() {\n  _classCallCheck(this, ImageCropperModel);\n};\n\nvar ImageCropperDataShare = /*#__PURE__*/function () {\n  function ImageCropperDataShare() {\n    _classCallCheck(this, ImageCropperDataShare);\n\n    this.share = {};\n  }\n\n  _createClass(ImageCropperDataShare, [{\n    key: \"setPressed\",\n    value: function setPressed(canvas) {\n      this.pressed = canvas;\n    }\n  }, {\n    key: \"setReleased\",\n    value: function setReleased(canvas) {\n      if (canvas === this.pressed) {//  this.pressed = undefined;\n      }\n    }\n  }, {\n    key: \"setOver\",\n    value: function setOver(canvas) {\n      this.over = canvas;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(canvas, style) {\n      if (this.pressed !== undefined) {\n        if (this.pressed === canvas) {// TODO: check this\n          // angular.element(document.documentElement).css('cursor', style);\n        }\n      } else {\n        if (canvas === this.over) {// TODO: check this\n          // angular.element(document.documentElement).css('cursor', style);\n        }\n      }\n    }\n  }]);\n\n  return ImageCropperDataShare;\n}();\n\nvar ImageCropper = /*#__PURE__*/function (_ImageCropperModel) {\n  _inherits(ImageCropper, _ImageCropperModel);\n\n  var _super4 = _createSuper(ImageCropper);\n\n  function ImageCropper(cropperSettings) {\n    var _this3;\n\n    _classCallCheck(this, ImageCropper);\n\n    _this3 = _super4.call(this);\n    _this3.imageCropperDataShare = new ImageCropperDataShare();\n    var x = 0;\n    var y = 0;\n    var width = cropperSettings.width;\n    var height = cropperSettings.height;\n    var keepAspect = cropperSettings.keepAspect;\n    var touchRadius = cropperSettings.touchRadius;\n    var centerTouchRadius = cropperSettings.centerTouchRadius;\n    var minWidth = cropperSettings.minWidth;\n    var minHeight = cropperSettings.minHeight;\n    var croppedWidth = cropperSettings.croppedWidth;\n    var croppedHeight = cropperSettings.croppedHeight;\n    _this3.cropperSettings = cropperSettings;\n    _this3.crop = _assertThisInitialized(_this3);\n    _this3.x = x;\n    _this3.y = y;\n    _this3.canvasHeight = cropperSettings.canvasHeight;\n    _this3.canvasWidth = cropperSettings.canvasWidth;\n    _this3.width = width;\n\n    if (width === void 0) {\n      _this3.width = 100;\n    }\n\n    _this3.height = height;\n\n    if (height === void 0) {\n      _this3.height = 50;\n    }\n\n    _this3.keepAspect = keepAspect;\n\n    if (keepAspect === void 0) {\n      _this3.keepAspect = true;\n    }\n\n    _this3.touchRadius = touchRadius;\n\n    if (touchRadius === void 0) {\n      _this3.touchRadius = 20;\n    }\n\n    _this3.minWidth = minWidth;\n    _this3.minHeight = minHeight;\n    _this3.aspectRatio = 0;\n    _this3.currentDragTouches = [];\n    _this3.isMouseDown = false;\n    _this3.ratioW = 1;\n    _this3.ratioH = 1;\n    _this3.fileType = cropperSettings.fileType;\n    _this3.imageSet = false;\n    _this3.pointPool = new PointPool(200);\n    _this3.tl = new CornerMarker(x, y, touchRadius, _this3.cropperSettings);\n    _this3.tr = new CornerMarker(x + width, y, touchRadius, _this3.cropperSettings);\n    _this3.bl = new CornerMarker(x, y + height, touchRadius, _this3.cropperSettings);\n    _this3.br = new CornerMarker(x + width, y + height, touchRadius, _this3.cropperSettings);\n\n    _this3.tl.addHorizontalNeighbour(_this3.tr);\n\n    _this3.tl.addVerticalNeighbour(_this3.bl);\n\n    _this3.tr.addHorizontalNeighbour(_this3.tl);\n\n    _this3.tr.addVerticalNeighbour(_this3.br);\n\n    _this3.bl.addHorizontalNeighbour(_this3.br);\n\n    _this3.bl.addVerticalNeighbour(_this3.tl);\n\n    _this3.br.addHorizontalNeighbour(_this3.bl);\n\n    _this3.br.addVerticalNeighbour(_this3.tr);\n\n    _this3.markers = [_this3.tl, _this3.tr, _this3.bl, _this3.br];\n    _this3.center = new DragMarker(x + width / 2, y + height / 2, centerTouchRadius, _this3.cropperSettings);\n    _this3.aspectRatio = height / width;\n    _this3.croppedImage = new Image();\n    _this3.currentlyInteracting = false;\n    _this3.cropWidth = croppedWidth;\n    _this3.cropHeight = croppedHeight;\n    return _this3;\n  }\n\n  _createClass(ImageCropper, [{\n    key: \"sign\",\n    value: function sign(x) {\n      if (+x === x) {\n        return x === 0 ? x : x > 0 ? 1 : -1;\n      }\n\n      return NaN;\n    }\n  }, {\n    key: \"getMousePos\",\n    value: function getMousePos(canvas, evt) {\n      var rect = canvas.getBoundingClientRect();\n      return new PointPool().instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\n    }\n  }, {\n    key: \"getTouchPos\",\n    value: function getTouchPos(canvas, touch) {\n      var rect = canvas.getBoundingClientRect();\n      return new PointPool().instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\n    }\n  }, {\n    key: \"detectVerticalSquash\",\n    value: function detectVerticalSquash(img) {\n      var ih = img.height;\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = ih;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      var imageData = ctx.getImageData(0, 0, 1, ih);\n\n      if (imageData) {\n        var data = imageData.data; // search image edge pixel position in case it is squashed vertically.\n\n        var sy = 0;\n        var ey = ih;\n        var py = ih;\n\n        while (py > sy) {\n          var alpha = data[(py - 1) * 4 + 3];\n\n          if (alpha === 0) {\n            ey = py;\n          } else {\n            sy = py;\n          } // tslint:disable-next-line:no-bitwise\n\n\n          py = ey + sy >> 1;\n        }\n\n        var ratio = py / ih;\n        return ratio === 0 ? 1 : ratio;\n      } else {\n        return 1;\n      }\n    }\n  }, {\n    key: \"getDataUriMimeType\",\n    value: function getDataUriMimeType(dataUri) {\n      // Get a substring because the regex does not perform well on very large strings.\n      // Cater for optional charset. Length 50 shoould be enough.\n      var dataUriSubstring = dataUri.substring(0, 50);\n      var mimeType = 'image/png'; // data-uri scheme\n      // data:[<media type>][;charset=<character set>][;base64],<data>\n\n      var regEx = RegExp(/^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi);\n      var matches = regEx.exec(dataUriSubstring);\n\n      if (matches && matches[2]) {\n        mimeType = matches[2];\n\n        if (mimeType === 'image/jpg') {\n          mimeType = 'image/jpeg';\n        }\n      }\n\n      return mimeType;\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare(canvas) {\n      this.buffer = document.createElement('canvas');\n      this.cropCanvas = document.createElement('canvas'); // todo get more reliable parent width value.\n\n      var responsiveWidth = canvas.parentElement ? canvas.parentElement.clientWidth : 0;\n\n      if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\n        this.cropCanvas.width = responsiveWidth;\n        this.buffer.width = responsiveWidth;\n        canvas.width = responsiveWidth;\n      } else {\n        this.cropCanvas.width = this.cropWidth;\n        this.buffer.width = canvas.width;\n      }\n\n      this.cropCanvas.height = this.cropHeight;\n      this.buffer.height = canvas.height;\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext('2d');\n      this.draw(this.ctx);\n    }\n  }, {\n    key: \"updateSettings\",\n    value: function updateSettings(cropperSettings) {\n      this.cropperSettings = cropperSettings;\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(width, height) {\n      var setImage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\n      this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\n\n      if (setImage) {\n        this.setImage(this.srcImage);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setImage(undefined);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var bounds = this.getBounds();\n\n      if (this.srcImage) {\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvasHeight / this.canvasWidth;\n        var w = this.canvasWidth;\n        var h = this.canvasHeight;\n\n        if (canvasAspect > sourceAspect) {\n          w = this.canvasWidth;\n          h = this.canvasWidth * sourceAspect;\n        } else {\n          h = this.canvasHeight;\n          w = this.canvasHeight / sourceAspect;\n        }\n\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n\n        if (canvasAspect < sourceAspect) {\n          this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\n        } else {\n          this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\n        }\n\n        this.buffer.getContext('2d').drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\n        ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\n        ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\n\n        if (!this.cropperSettings.rounded) {\n          ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n          ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.width, 1), Math.max(bounds.height, 1), bounds.left, bounds.top, bounds.width, bounds.height);\n          ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\n        } else {\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          ctx.save();\n          ctx.beginPath();\n          ctx.arc(bounds.left + bounds.width / 2, bounds.top + bounds.height / 2, bounds.width / 2, 0, 2 * Math.PI);\n          ctx.stroke();\n          ctx.clip();\n\n          if (canvasAspect < sourceAspect) {\n            this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\n          } else {\n            this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\n          }\n\n          ctx.restore();\n        }\n\n        var marker; // tslint:disable-next-line:prefer-for-of\n\n        for (var i = 0; i < this.markers.length; i++) {\n          marker = this.markers[i];\n          marker.draw(ctx);\n        }\n\n        this.center.draw(ctx);\n      } else {\n        ctx.fillStyle = 'rgba(192,192,192,1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n    }\n  }, {\n    key: \"dragCenter\",\n    value: function dragCenter(x, y, marker) {\n      var bounds = this.getBounds();\n      var left = x - bounds.width / 2;\n      var right = x + bounds.width / 2;\n      var top = y - bounds.height / 2;\n      var bottom = y + bounds.height / 2;\n\n      if (right >= this.maxXClamp) {\n        x = this.maxXClamp - bounds.width / 2;\n      }\n\n      if (left <= this.minXClamp) {\n        x = bounds.width / 2 + this.minXClamp;\n      }\n\n      if (top < this.minYClamp) {\n        y = bounds.height / 2 + this.minYClamp;\n      }\n\n      if (bottom >= this.maxYClamp) {\n        y = this.maxYClamp - bounds.height / 2;\n      }\n\n      this.tl.moveX(x - bounds.width / 2);\n      this.tl.moveY(y - bounds.height / 2);\n      this.tr.moveX(x + bounds.width / 2);\n      this.tr.moveY(y - bounds.height / 2);\n      this.bl.moveX(x - bounds.width / 2);\n      this.bl.moveY(y + bounds.height / 2);\n      this.br.moveX(x + bounds.width / 2);\n      this.br.moveY(y + bounds.height / 2);\n      marker.setPosition(x, y);\n    }\n  }, {\n    key: \"enforceMinSize\",\n    value: function enforceMinSize(x, y, marker) {\n      var xLength = x - marker.getHorizontalNeighbour().position.x;\n      var yLength = y - marker.getVerticalNeighbour().position.y;\n      var xOver = this.minWidth - Math.abs(xLength);\n      var yOver = this.minHeight - Math.abs(yLength);\n\n      if (xLength === 0 || yLength === 0) {\n        x = marker.position.x;\n        y = marker.position.y;\n        return new PointPool().instance.borrow(x, y);\n      }\n\n      if (this.keepAspect) {\n        if (xOver > 0 && yOver / this.aspectRatio > 0) {\n          if (xOver > yOver / this.aspectRatio) {\n            if (xLength < 0) {\n              x -= xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yLength < 0) {\n              y -= yOver;\n\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            } else {\n              y += yOver;\n\n              if (xLength < 0) {\n                x -= yOver / this.aspectRatio;\n              } else {\n                x += yOver / this.aspectRatio;\n              }\n            }\n          }\n        } else {\n          if (xOver > 0) {\n            if (xLength < 0) {\n              x -= xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            } else {\n              x += xOver;\n\n              if (yLength < 0) {\n                y -= xOver * this.aspectRatio;\n              } else {\n                y += xOver * this.aspectRatio;\n              }\n            }\n          } else {\n            if (yOver > 0) {\n              if (yLength < 0) {\n                y -= yOver;\n\n                if (xLength < 0) {\n                  x -= yOver / this.aspectRatio;\n                } else {\n                  x += yOver / this.aspectRatio;\n                }\n              } else {\n                y += yOver;\n\n                if (xLength < 0) {\n                  x -= yOver / this.aspectRatio;\n                } else {\n                  x += yOver / this.aspectRatio;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (xOver > 0) {\n          if (xLength < 0) {\n            x -= xOver;\n          } else {\n            x += xOver;\n          }\n        }\n\n        if (yOver > 0) {\n          if (yLength < 0) {\n            y -= yOver;\n          } else {\n            y += yOver;\n          }\n        }\n      }\n\n      if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\n        x = marker.position.x;\n        y = marker.position.y;\n      }\n\n      return new PointPool().instance.borrow(x, y);\n    }\n  }, {\n    key: \"dragCorner\",\n    value: function dragCorner(x, y, marker) {\n      var iX = 0;\n      var iY = 0;\n      var ax = 0;\n      var ay = 0;\n      var newHeight = 0;\n      var newWidth = 0;\n      var newY = 0;\n      var newX = 0;\n      var anchorMarker;\n      var fold = 0;\n\n      if (this.keepAspect) {\n        anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\n        ax = anchorMarker.position.x;\n        ay = anchorMarker.position.y;\n\n        if (x <= anchorMarker.position.x) {\n          if (y <= anchorMarker.position.y) {\n            iX = ax - 100 / this.aspectRatio;\n            iY = ay - 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold > 0) {\n              newHeight = Math.abs(anchorMarker.position.y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.position.y - newHeight;\n              newX = anchorMarker.position.x - newWidth;\n              var min = this.enforceMinSize(newX, newY, marker);\n              marker.move(min.x, min.y);\n              new PointPool().instance.returnPoint(min);\n            } else {\n              if (fold < 0) {\n                newWidth = Math.abs(anchorMarker.position.x - x);\n                newHeight = newWidth * this.aspectRatio;\n                newY = anchorMarker.position.y - newHeight;\n                newX = anchorMarker.position.x - newWidth;\n\n                var _min = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min.x, _min.y);\n                new PointPool().instance.returnPoint(_min);\n              }\n            }\n          } else {\n            iX = ax - 100 / this.aspectRatio;\n            iY = ay + 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold > 0) {\n              newWidth = Math.abs(anchorMarker.position.x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.position.y + newHeight;\n              newX = anchorMarker.position.x - newWidth;\n\n              var _min2 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min2.x, _min2.y);\n              new PointPool().instance.returnPoint(_min2);\n            } else {\n              if (fold < 0) {\n                newHeight = Math.abs(anchorMarker.position.y - y);\n                newWidth = newHeight / this.aspectRatio;\n                newY = anchorMarker.position.y + newHeight;\n                newX = anchorMarker.position.x - newWidth;\n\n                var _min3 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min3.x, _min3.y);\n                new PointPool().instance.returnPoint(_min3);\n              }\n            }\n          }\n        } else {\n          if (y <= anchorMarker.position.y) {\n            iX = ax + 100 / this.aspectRatio;\n            iY = ay - 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold < 0) {\n              newHeight = Math.abs(anchorMarker.position.y - y);\n              newWidth = newHeight / this.aspectRatio;\n              newY = anchorMarker.position.y - newHeight;\n              newX = anchorMarker.position.x + newWidth;\n\n              var _min4 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min4.x, _min4.y);\n              new PointPool().instance.returnPoint(_min4);\n            } else {\n              if (fold > 0) {\n                newWidth = Math.abs(anchorMarker.position.x - x);\n                newHeight = newWidth * this.aspectRatio;\n                newY = anchorMarker.position.y - newHeight;\n                newX = anchorMarker.position.x + newWidth;\n\n                var _min5 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min5.x, _min5.y);\n                new PointPool().instance.returnPoint(_min5);\n              }\n            }\n          } else {\n            iX = ax + 100 / this.aspectRatio;\n            iY = ay + 100 / this.aspectRatio * this.aspectRatio;\n            fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\n\n            if (fold < 0) {\n              newWidth = Math.abs(anchorMarker.position.x - x);\n              newHeight = newWidth * this.aspectRatio;\n              newY = anchorMarker.position.y + newHeight;\n              newX = anchorMarker.position.x + newWidth;\n\n              var _min6 = this.enforceMinSize(newX, newY, marker);\n\n              marker.move(_min6.x, _min6.y);\n              new PointPool().instance.returnPoint(_min6);\n            } else {\n              if (fold > 0) {\n                newHeight = Math.abs(anchorMarker.position.y - y);\n                newWidth = newHeight / this.aspectRatio;\n                newY = anchorMarker.position.y + newHeight;\n                newX = anchorMarker.position.x + newWidth;\n\n                var _min7 = this.enforceMinSize(newX, newY, marker);\n\n                marker.move(_min7.x, _min7.y);\n                new PointPool().instance.returnPoint(_min7);\n              }\n            }\n          }\n        }\n      } else {\n        var _min8 = this.enforceMinSize(x, y, marker);\n\n        marker.move(_min8.x, _min8.y);\n        new PointPool().instance.returnPoint(_min8);\n      }\n\n      this.center.recalculatePosition(this.getBounds());\n    }\n  }, {\n    key: \"getSide\",\n    value: function getSide(a, b, c) {\n      var n = this.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)); // TODO move the return of the pools to outside of this function\n\n      new PointPool().instance.returnPoint(a);\n      new PointPool().instance.returnPoint(c);\n      return n;\n    }\n  }, {\n    key: \"handleRelease\",\n    value: function handleRelease(newCropTouch) {\n      if (newCropTouch == null) {\n        return;\n      }\n\n      var index = 0;\n\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id === this.currentDragTouches[k].id) {\n          this.currentDragTouches[k].dragHandle.setDrag(false);\n          index = k;\n        }\n      }\n\n      this.currentDragTouches.splice(index, 1);\n      this.draw(this.ctx);\n    }\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(newCropTouch) {\n      var matched = false; // tslint:disable-next-line:prefer-for-of\n\n      for (var k = 0; k < this.currentDragTouches.length; k++) {\n        if (newCropTouch.id === this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null) {\n          var dragTouch = this.currentDragTouches[k];\n          var clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x, newCropTouch.y - dragTouch.dragHandle.offset.y);\n          newCropTouch.x = clampedPositions.x;\n          newCropTouch.y = clampedPositions.y;\n          new PointPool().instance.returnPoint(clampedPositions);\n\n          if (dragTouch.dragHandle instanceof CornerMarker) {\n            this.dragCorner(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          } else {\n            this.dragCenter(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\n          }\n\n          this.currentlyInteracting = true;\n          matched = true;\n          this.imageCropperDataShare.setPressed(this.canvas);\n          break;\n        }\n      }\n\n      if (!matched) {\n        var _iterator2 = _createForOfIteratorHelper(this.markers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var marker = _step2.value;\n\n            if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n              newCropTouch.dragHandle = marker;\n              this.currentDragTouches.push(newCropTouch);\n              marker.setDrag(true);\n              newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n              newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n              this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (newCropTouch.dragHandle === null || typeof newCropTouch.dragHandle === 'undefined') {\n          if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\n            newCropTouch.dragHandle = this.center;\n            this.currentDragTouches.push(newCropTouch);\n            newCropTouch.dragHandle.setDrag(true);\n            newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\n            newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\n            this.dragCenter(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateClampBounds\",\n    value: function updateClampBounds() {\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var canvasAspect = this.canvas.height / this.canvas.width;\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n\n      if (canvasAspect > sourceAspect) {\n        w = this.canvas.width;\n        h = this.canvas.width * sourceAspect;\n      } else {\n        h = this.canvas.height;\n        w = this.canvas.height / sourceAspect;\n      }\n\n      this.minXClamp = this.canvas.width / 2 - w / 2;\n      this.minYClamp = this.canvas.height / 2 - h / 2;\n      this.maxXClamp = this.canvas.width / 2 + w / 2;\n      this.maxYClamp = this.canvas.height / 2 + h / 2;\n    }\n  }, {\n    key: \"getCropBounds\",\n    value: function getCropBounds() {\n      var bounds = this.getBounds();\n      bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\n      bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\n      bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\n      bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\n      return bounds;\n    }\n  }, {\n    key: \"clampPosition\",\n    value: function clampPosition(x, y) {\n      if (x < this.minXClamp) {\n        x = this.minXClamp;\n      }\n\n      if (x > this.maxXClamp) {\n        x = this.maxXClamp;\n      }\n\n      if (y < this.minYClamp) {\n        y = this.minYClamp;\n      }\n\n      if (y > this.maxYClamp) {\n        y = this.maxYClamp;\n      }\n\n      return new PointPool().instance.borrow(x, y);\n    }\n  }, {\n    key: \"isImageSet\",\n    value: function isImageSet() {\n      return this.imageSet;\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(img) {\n      this.srcImage = img;\n\n      if (!img) {\n        this.imageSet = false;\n        this.draw(this.ctx);\n      } else {\n        this.imageSet = true;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        var bufferContext = this.buffer.getContext('2d');\n        bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\n\n        if (!this.cropperSettings.fileType) {\n          this.fileType = this.getDataUriMimeType(img.src);\n        }\n\n        if (this.cropperSettings.minWithRelativeToResolution) {\n          this.minWidth = this.canvas.width * this.cropperSettings.minWidth / this.srcImage.width;\n          this.minHeight = this.canvas.height * this.cropperSettings.minHeight / this.srcImage.height;\n        }\n\n        this.updateClampBounds();\n        this.canvasWidth = this.canvas.width;\n        this.canvasHeight = this.canvas.height;\n        var cropPosition = this.getCropPositionFromMarkers();\n        this.setCropPosition(cropPosition);\n      }\n    }\n  }, {\n    key: \"updateCropPosition\",\n    value: function updateCropPosition(cropBounds) {\n      var cropPosition = this.getCropPositionFromBounds(cropBounds);\n      this.setCropPosition(cropPosition);\n    }\n  }, {\n    key: \"setCropPosition\",\n    value: function setCropPosition(cropPosition) {\n      this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\n      this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\n      this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\n      this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\n      this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\n\n      var _iterator3 = _createForOfIteratorHelper(cropPosition),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var position = _step3.value;\n          new PointPool().instance.returnPoint(position);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\n      this.draw(this.ctx);\n      this.croppedImage = this.getCroppedImageHelper(false, this.cropWidth, this.cropHeight);\n    }\n  }, {\n    key: \"getCropPositionFromMarkers\",\n    value: function getCropPositionFromMarkers() {\n      var w = this.canvas.width;\n      var h = this.canvas.height;\n      var tlPos;\n      var trPos;\n      var blPos;\n      var brPos;\n      var center;\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n      var cropBounds = this.getBounds();\n      var cropAspect = cropBounds.height / cropBounds.width;\n      var cX = this.canvas.width / 2;\n      var cY = this.canvas.height / 2;\n\n      if (cropAspect > sourceAspect) {\n        var imageH = Math.min(w * sourceAspect, h);\n        var cropW = imageH / cropAspect;\n        tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\n        trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\n        blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\n        brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\n      } else {\n        var imageW = Math.min(h / sourceAspect, w);\n        var cropH = imageW * cropAspect;\n        tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\n        trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\n        blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\n        brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\n      }\n\n      center = new PointPool().instance.borrow(cX, cY);\n      var positions = [tlPos, trPos, blPos, brPos, center];\n      return positions;\n    }\n  }, {\n    key: \"getCropPositionFromBounds\",\n    value: function getCropPositionFromBounds(cropPosition) {\n      var marginTop = 0;\n      var marginLeft = 0;\n      var canvasAspect = this.canvasHeight / this.canvasWidth;\n      var sourceAspect = this.srcImage.height / this.srcImage.width;\n\n      if (canvasAspect > sourceAspect) {\n        marginTop = this.buffer.height / 2 - this.canvasWidth * sourceAspect / 2;\n      } else {\n        marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\n      }\n\n      var ratioW = (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\n      var ratioH = (this.canvasHeight - marginTop * 2) / this.srcImage.height;\n      var actualH = cropPosition.height * ratioH;\n      var actualW = cropPosition.width * ratioW;\n      var actualX = cropPosition.left * ratioW + marginLeft;\n      var actualY = cropPosition.top * ratioH + marginTop;\n\n      if (this.keepAspect) {\n        var scaledW = actualH / this.aspectRatio;\n        var scaledH = actualW * this.aspectRatio;\n\n        if (this.getCropBounds().height === cropPosition.height) {\n          // only width changed\n          actualH = scaledH;\n        } else if (this.getCropBounds().width === cropPosition.width) {\n          // only height changed\n          actualW = scaledW;\n        } else {\n          // height and width changed\n          if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\n            actualW = scaledW;\n          } else {\n            actualH = scaledH;\n          }\n        }\n      }\n\n      var tlPos = new PointPool().instance.borrow(actualX, actualY + actualH);\n      var trPos = new PointPool().instance.borrow(actualX + actualW, actualY + actualH);\n      var blPos = new PointPool().instance.borrow(actualX, actualY);\n      var brPos = new PointPool().instance.borrow(actualX + actualW, actualY);\n      var center = new PointPool().instance.borrow(actualX + actualW / 2, actualY + actualH / 2);\n      var positions = [tlPos, trPos, blPos, brPos, center];\n      return positions;\n    }\n  }, {\n    key: \"getCroppedImageHelper\",\n    value: function getCroppedImageHelper(preserveSize, fillWidth, fillHeight) {\n      if (this.cropperSettings.cropOnResize) {\n        return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\n      }\n\n      return this.croppedImage ? this.croppedImage : document.createElement('img');\n    } // todo: Unused parameters?\n\n  }, {\n    key: \"getCroppedImage\",\n    value: function getCroppedImage(preserveSize, fillWidth, fillHeight) {\n      var bounds = this.getBounds();\n\n      if (!this.srcImage) {\n        return document.createElement('img');\n      } else {\n        var sourceAspect = this.srcImage.height / this.srcImage.width;\n        var canvasAspect = this.canvas.height / this.canvas.width;\n        var w = this.canvas.width;\n        var h = this.canvas.height;\n\n        if (canvasAspect > sourceAspect) {\n          w = this.canvas.width;\n          h = this.canvas.width * sourceAspect;\n        } else {\n          if (canvasAspect < sourceAspect) {\n            h = this.canvas.height;\n            w = this.canvas.height / sourceAspect;\n          } else {\n            h = this.canvas.height;\n            w = this.canvas.width;\n          }\n        }\n\n        this.ratioW = w / this.srcImage.width;\n        this.ratioH = h / this.srcImage.height;\n        var offsetH = (this.buffer.height - h) / 2 / this.ratioH;\n        var offsetW = (this.buffer.width - w) / 2 / this.ratioW;\n        var ctx = this.cropCanvas.getContext('2d');\n\n        if (this.cropperSettings.preserveSize || preserveSize) {\n          var width = Math.round(bounds.right / this.ratioW - bounds.left / this.ratioW);\n          var height = Math.round(bounds.bottom / this.ratioH - bounds.top / this.ratioH);\n          this.cropCanvas.width = width;\n          this.cropCanvas.height = height;\n          this.cropperSettings.croppedWidth = this.cropCanvas.width;\n          this.cropperSettings.croppedHeight = this.cropCanvas.height;\n        } else {\n          this.cropCanvas.width = this.cropWidth;\n          this.cropCanvas.height = this.cropHeight;\n        }\n\n        ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\n        this.drawImageIOSFix(ctx, this.srcImage, Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0), Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0), Math.max(Math.round(bounds.width / this.ratioW), 1), Math.max(Math.round(bounds.height / this.ratioH), 1), 0, 0, this.cropCanvas.width, this.cropCanvas.height);\n\n        if (this.cropperSettings.resampleFn) {\n          this.cropperSettings.resampleFn(this.cropCanvas);\n        }\n\n        this.croppedImage.width = this.cropCanvas.width;\n        this.croppedImage.height = this.cropCanvas.height;\n        this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType, this.cropperSettings.compressRatio);\n        return this.croppedImage;\n      }\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = -Number.MAX_VALUE;\n      var maxY = -Number.MAX_VALUE;\n\n      var _iterator4 = _createForOfIteratorHelper(this.markers),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var marker = _step4.value;\n\n          if (marker.position.x < minX) {\n            minX = marker.position.x;\n          }\n\n          if (marker.position.x > maxX) {\n            maxX = marker.position.x;\n          }\n\n          if (marker.position.y < minY) {\n            minY = marker.position.y;\n          }\n\n          if (marker.position.y > maxY) {\n            maxY = marker.position.y;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var bounds = new Bounds();\n      bounds.left = minX;\n      bounds.right = maxX;\n      bounds.top = minY;\n      bounds.bottom = maxY;\n      return bounds;\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(bounds) {\n      // const topLeft: CornerMarker;\n      // const topRight: CornerMarker;\n      // const bottomLeft: CornerMarker;\n      // const bottomRight: CornerMarker;\n      var currentBounds = this.getBounds();\n\n      var _iterator5 = _createForOfIteratorHelper(this.markers),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var marker = _step5.value;\n\n          if (marker.position.x === currentBounds.left) {\n            if (marker.position.y === currentBounds.top) {\n              marker.setPosition(bounds.left, bounds.top);\n            } else {\n              marker.setPosition(bounds.left, bounds.bottom);\n            }\n          } else {\n            if (marker.position.y === currentBounds.top) {\n              marker.setPosition(bounds.right, bounds.top);\n            } else {\n              marker.setPosition(bounds.right, bounds.bottom);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.center.recalculatePosition(bounds);\n      this.center.draw(this.ctx);\n      this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      if (this.crop.isImageSet()) {\n        if (event.touches.length === 1) {\n          if (this.isMouseDown) {\n            event.preventDefault(); // tslint:disable-next-line:prefer-for-of\n\n            for (var i = 0; i < event.touches.length; i++) {\n              var touch = event.touches[i];\n              var touchPosition = this.getTouchPos(this.canvas, touch);\n              var cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\n              new PointPool().instance.returnPoint(touchPosition);\n              this.move(cropTouch);\n            }\n          }\n        } else {\n          if (event.touches.length === 2) {\n            event.preventDefault();\n            var distance = (event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX) + (event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY);\n\n            if (this.previousDistance && this.previousDistance !== distance) {\n              var bounds = this.getBounds();\n\n              if (distance < this.previousDistance) {\n                bounds.top += 1;\n                bounds.left += 1;\n                bounds.right -= 1;\n                bounds.bottom -= 1;\n              }\n\n              if (distance > this.previousDistance) {\n                if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // none\n                  bounds.top -= 1;\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                  bounds.bottom += 1;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // left\n                  bounds.top -= 1;\n                  bounds.right += 2;\n                  bounds.bottom += 1;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // right\n                  bounds.top -= 1;\n                  bounds.left -= 2;\n                  bounds.bottom += 1;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // top\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                  bounds.bottom += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // bottom\n                  bounds.top -= 2;\n                  bounds.left -= 1;\n                  bounds.right += 1;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // top left\n                  bounds.right += 2;\n                  bounds.bottom += 2;\n                } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // top right\n                  bounds.left -= 2;\n                  bounds.bottom += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) {\n                  // bottom left\n                  bounds.top -= 2;\n                  bounds.right += 2;\n                } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) {\n                  // bottom right\n                  bounds.top -= 2;\n                  bounds.left -= 2;\n                }\n              }\n\n              if (bounds.top < this.minYClamp) {\n                bounds.top = this.minYClamp;\n              }\n\n              if (bounds.bottom > this.maxYClamp) {\n                bounds.bottom = this.maxYClamp;\n              }\n\n              if (bounds.left < this.minXClamp) {\n                bounds.left = this.minXClamp;\n              }\n\n              if (bounds.right > this.maxXClamp) {\n                bounds.right = this.maxXClamp;\n              }\n\n              this.setBounds(bounds);\n            }\n\n            this.previousDistance = distance;\n          }\n        }\n\n        this.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      if (this.crop.isImageSet() && this.isMouseDown) {\n        var mousePosition = this.getMousePos(this.canvas, e);\n        this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\n        var dragTouch = this.getDragTouchForID(0);\n\n        if (dragTouch) {\n          dragTouch.x = mousePosition.x;\n          dragTouch.y = mousePosition.y;\n        } else {\n          dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\n        }\n\n        new PointPool().instance.returnPoint(mousePosition);\n        this.drawCursors(dragTouch);\n        this.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"move\",\n    value: function move(cropTouch) {\n      if (this.isMouseDown) {\n        this.handleMove(cropTouch);\n      }\n    }\n  }, {\n    key: \"getDragTouchForID\",\n    value: function getDragTouchForID(id) {\n      // tslint:disable-next-line:prefer-for-of\n      for (var i = 0; i < this.currentDragTouches.length; i++) {\n        if (id === this.currentDragTouches[i].id) {\n          return this.currentDragTouches[i];\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"drawCursors\",\n    value: function drawCursors(cropTouch) {\n      var cursorDrawn = false;\n\n      if (cropTouch != null) {\n        if (cropTouch.dragHandle === this.center) {\n          this.imageCropperDataShare.setStyle(this.canvas, 'move');\n          cursorDrawn = true;\n        }\n\n        if (cropTouch.dragHandle !== null && cropTouch.dragHandle instanceof CornerMarker) {\n          this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.position.x, cropTouch.dragHandle.position.y);\n          cursorDrawn = true;\n        }\n      }\n\n      var didDraw = false;\n\n      if (!cursorDrawn) {\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this.markers.length; i++) {\n          didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\n        }\n\n        if (!didDraw) {\n          this.imageCropperDataShare.setStyle(this.canvas, 'initial');\n        }\n      }\n\n      if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n        this.center.setOver(true);\n        this.imageCropperDataShare.setOver(this.canvas);\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\n      } else {\n        this.center.setOver(false);\n      }\n    }\n  }, {\n    key: \"drawCornerCursor\",\n    value: function drawCornerCursor(marker, x, y) {\n      if (marker.touchInBounds(x, y)) {\n        marker.setOver(true);\n\n        if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\n          if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          } else {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          }\n        } else {\n          if (marker.getVerticalNeighbour().position.y > marker.position.y) {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\n          } else {\n            this.imageCropperDataShare.setOver(this.canvas);\n            this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\n          }\n        }\n\n        return true;\n      }\n\n      marker.setOver(false);\n      return false;\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      if (this.crop.isImageSet()) {\n        var touch = event.touches[0];\n        var touchPosition = this.getTouchPos(this.canvas, touch);\n        var cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\n        new PointPool().instance.returnPoint(touchPosition);\n        this.isMouseDown = false;\n\n        var _iterator6 = _createForOfIteratorHelper(this.markers),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var marker = _step6.value;\n\n            if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\n              this.isMouseDown = true;\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\n          this.isMouseDown = true;\n        }\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (this.crop.isImageSet()) {\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < event.changedTouches.length; i++) {\n          var touch = event.changedTouches[i];\n          var dragTouch = this.getDragTouchForID(touch.identifier);\n\n          if (dragTouch && dragTouch !== undefined) {\n            if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\n              dragTouch.dragHandle.setOver(false);\n            }\n\n            this.handleRelease(dragTouch);\n          }\n        }\n\n        if (this.currentDragTouches.length === 0) {\n          this.isMouseDown = false;\n          this.currentlyInteracting = false;\n        }\n      }\n    } // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n\n  }, {\n    key: \"drawImageIOSFix\",\n    value: function drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n      // Works only if whole image is displayed:\n      // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n      // The following works correct also when only a part of the image is displayed:\n      // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\n      // this.vertSquashRatio, dx, dy, dw, dh);\n      ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (this.crop.isImageSet()) {\n        this.isMouseDown = true;\n      }\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      if (this.crop.isImageSet()) {\n        this.imageCropperDataShare.setReleased(this.canvas);\n        this.isMouseDown = false;\n        this.handleRelease(new CropTouch(0, 0, 0));\n      }\n    }\n  }]);\n\n  return ImageCropper;\n}(ImageCropperModel);\n\nvar CropPosition = /*#__PURE__*/function () {\n  function CropPosition() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var w = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var h = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, CropPosition);\n\n    this.x = +x;\n    this.y = +y;\n    this.w = +w;\n    this.h = +h;\n  }\n\n  _createClass(CropPosition, [{\n    key: \"toBounds\",\n    value: function toBounds() {\n      return new Bounds(this.x, this.y, this.w, this.h);\n    }\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\n    }\n  }]);\n\n  return CropPosition;\n}();\n\nvar ImageCropperComponent = /*#__PURE__*/function () {\n  function ImageCropperComponent(renderer, document) {\n    _classCallCheck(this, ImageCropperComponent);\n\n    this.document = document;\n    this.cropPositionChange = new EventEmitter();\n    this.exif = new Exif(); // tslint:disable-next-line:no-output-on-prefix\n\n    this.onCrop = new EventEmitter();\n    this.imageSet = new EventEmitter();\n    this.dragUnsubscribers = [];\n    this.renderer = renderer;\n  }\n\n  _createClass(ImageCropperComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var canvas = this.cropcanvas.nativeElement;\n\n      if (!this.settings) {\n        this.settings = new CropperSettings();\n      }\n\n      if (this.settings.cropperClass) {\n        this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\n      }\n\n      if (!this.settings.dynamicSizing) {\n        this.renderer.setAttribute(canvas, 'width', this.settings.canvasWidth.toString());\n        this.renderer.setAttribute(canvas, 'height', this.settings.canvasHeight.toString());\n      } else {\n        this.windowListener = this.resize.bind(this);\n        window.addEventListener('resize', this.windowListener);\n      }\n\n      if (!this.cropper) {\n        this.cropper = new ImageCropper(this.settings);\n      }\n\n      this.cropper.prepare(canvas);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.isCropPositionChanged(changes)) {\n        this.cropper.updateCropPosition(this.cropPosition.toBounds());\n\n        if (this.cropper.isImageSet()) {\n          var bounds = this.cropper.getCropBounds();\n          this.image.image = this.cropper.getCroppedImageHelper().src;\n          this.onCrop.emit(bounds);\n        }\n\n        this.updateCropBounds();\n      }\n\n      if (changes.inputImage) {\n        this.setImage(changes.inputImage.currentValue);\n      }\n\n      if (changes.settings && this.cropper) {\n        this.cropper.updateSettings(this.settings);\n\n        if (this.cropper.isImageSet()) {\n          this.image.image = this.cropper.getCroppedImageHelper().src;\n          this.onCrop.emit(this.cropper.getCropBounds());\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeDragListeners();\n\n      if (this.settings.dynamicSizing && this.windowListener) {\n        window.removeEventListener('resize', this.windowListener);\n      }\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      this.cropper.onTouchMove(event);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      this.cropper.onTouchStart(event);\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      this.cropper.onTouchEnd(event);\n\n      if (this.cropper.isImageSet()) {\n        this.image.image = this.cropper.getCroppedImageHelper().src;\n        this.onCrop.emit(this.cropper.getCropBounds());\n        this.updateCropBounds();\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\n      this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\n      this.cropper.onMouseDown(event); // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\n      //   // load img\n      //   this.fileInput.nativeElement.click();\n      // }\n    }\n  }, {\n    key: \"removeDragListeners\",\n    value: function removeDragListeners() {\n      this.dragUnsubscribers.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(event) {\n      this.removeDragListeners();\n\n      if (this.cropper.isImageSet()) {\n        this.cropper.onMouseUp(event);\n        this.image.image = this.cropper.getCroppedImageHelper().src;\n        this.onCrop.emit(this.cropper.getCropBounds());\n        this.updateCropBounds();\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      this.cropper.onMouseMove(event);\n    }\n  }, {\n    key: \"fileChangeListener\",\n    value: function fileChangeListener($event) {\n      var _this4 = this;\n\n      if ($event.target.files.length === 0) {\n        return;\n      }\n\n      var file = $event.target.files[0];\n\n      if (this.settings.allowedFilesRegex.test(file.name)) {\n        var image = new Image();\n        var fileReader = new FileReader();\n        fileReader.addEventListener('loadend', function (loadEvent) {\n          image.addEventListener('load', function () {\n            _this4.setImage(image);\n          });\n          image.src = loadEvent.target.result;\n        });\n        fileReader.readAsDataURL(file);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var canvas = this.cropcanvas.nativeElement;\n      this.settings.canvasWidth = canvas.offsetWidth;\n      this.settings.canvasHeight = canvas.offsetHeight;\n      this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.cropper.reset();\n      this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', this.settings.cropperClass);\n      this.image.image = this.cropper.getCroppedImageHelper().src;\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(image) {\n      var _this5 = this;\n\n      var newBounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      this.imageSet.emit(true);\n      this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', \"\".concat(this.settings.cropperClass, \" \").concat(this.settings.croppingClass));\n      this.raf = window.requestAnimationFrame(function () {\n        if (_this5.raf) {\n          window.cancelAnimationFrame(_this5.raf);\n        }\n\n        if (image.naturalHeight > 0 && image.naturalWidth > 0) {\n          image.height = image.naturalHeight;\n          image.width = image.naturalWidth;\n          window.cancelAnimationFrame(_this5.raf);\n\n          _this5.getOrientedImage(image, function (img) {\n            if (_this5.settings.dynamicSizing) {\n              var canvas = _this5.cropcanvas.nativeElement;\n              _this5.settings.canvasWidth = canvas.offsetWidth;\n              _this5.settings.canvasHeight = canvas.offsetHeight;\n\n              _this5.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, false);\n            }\n\n            _this5.cropper.setImage(img);\n\n            if (_this5.cropPosition && _this5.cropPosition.isInitialized()) {\n              _this5.cropper.updateCropPosition(_this5.cropPosition.toBounds());\n            }\n\n            _this5.image.original = img;\n\n            var bounds = _this5.cropper.getCropBounds();\n\n            _this5.image.image = _this5.cropper.getCroppedImageHelper().src;\n\n            if (!_this5.image) {\n              _this5.image = image;\n            }\n\n            if (newBounds != null) {\n              bounds = newBounds;\n\n              _this5.cropper.setBounds(bounds);\n\n              _this5.cropper.updateCropPosition(bounds);\n            }\n\n            _this5.onCrop.emit(bounds);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"isCropPositionChanged\",\n    value: function isCropPositionChanged(changes) {\n      if (this.cropper && changes.cropPosition && this.isCropPositionUpdateNeeded) {\n        return true;\n      } else {\n        this.isCropPositionUpdateNeeded = true;\n        return false;\n      }\n    }\n  }, {\n    key: \"updateCropBounds\",\n    value: function updateCropBounds() {\n      var cropBound = this.cropper.getCropBounds();\n      this.cropPositionChange.emit(new CropPosition(cropBound.left, cropBound.top, cropBound.width, cropBound.height));\n      this.isCropPositionUpdateNeeded = false;\n    }\n  }, {\n    key: \"getOrientedImage\",\n    value: function getOrientedImage(image, callback) {\n      var _this6 = this;\n\n      var img;\n      this.exif.getData(image, function () {\n        var orientation = _this6.exif.getTag(image, 'Orientation');\n\n        if ([3, 6, 8].indexOf(orientation) > -1) {\n          var canvas = document.createElement('canvas');\n          var ctx = canvas.getContext('2d');\n          var cw = image.width;\n          var ch = image.height;\n          var cx = 0;\n          var cy = 0;\n          var deg = 0;\n\n          switch (orientation) {\n            case 3:\n              cx = -image.width;\n              cy = -image.height;\n              deg = 180;\n              break;\n\n            case 6:\n              cw = image.height;\n              ch = image.width;\n              cy = -image.height;\n              deg = 90;\n              break;\n\n            case 8:\n              cw = image.height;\n              ch = image.width;\n              cx = -image.width;\n              deg = 270;\n              break;\n\n            default:\n              break;\n          }\n\n          canvas.width = cw;\n          canvas.height = ch;\n          ctx.rotate(deg * Math.PI / 180);\n          ctx.drawImage(image, cx, cy);\n          img = document.createElement('img');\n          img.width = cw;\n          img.height = ch;\n          img.addEventListener('load', function () {\n            callback(img);\n          });\n          img.src = canvas.toDataURL('image/png');\n        } else {\n          img = image;\n          callback(img);\n        }\n      });\n    }\n  }]);\n\n  return ImageCropperComponent;\n}();\n\nImageCropperComponent.ɵfac = function ImageCropperComponent_Factory(t) {\n  return new (t || ImageCropperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nImageCropperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: ImageCropperComponent,\n  selectors: [[\"img-cropper\"]],\n  viewQuery: function ImageCropperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 7);\n      ɵngcc0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cropcanvas = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    }\n  },\n  inputs: {\n    settings: \"settings\",\n    cropper: \"cropper\",\n    image: \"image\",\n    inputImage: \"inputImage\",\n    cropPosition: \"cropPosition\"\n  },\n  outputs: {\n    cropPositionChange: \"cropPositionChange\",\n    onCrop: \"onCrop\",\n    imageSet: \"imageSet\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"ng2-imgcrop\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\", 4, \"ngIf\"], [3, \"mousedown\", \"touchmove\", \"touchend\", \"touchstart\"], [\"cropcanvas\", \"\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"fileInput\", \"\"]],\n  template: function ImageCropperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, ImageCropperComponent_input_1_Template, 2, 0, \"input\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"canvas\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function ImageCropperComponent_Template_canvas_mousedown_2_listener($event) {\n        return ctx.onMouseDown($event);\n      })(\"touchmove\", function ImageCropperComponent_Template_canvas_touchmove_2_listener($event) {\n        return ctx.onTouchMove($event);\n      })(\"touchend\", function ImageCropperComponent_Template_canvas_touchend_2_listener($event) {\n        return ctx.onTouchEnd($event);\n      })(\"touchstart\", function ImageCropperComponent_Template_canvas_touchstart_2_listener($event) {\n        return ctx.onTouchStart($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.noFileInput);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\nImageCropperComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nImageCropperComponent.propDecorators = {\n  cropcanvas: [{\n    type: ViewChild,\n    args: ['cropcanvas', {\n      static: true\n    }]\n  }],\n  fileInput: [{\n    type: ViewChild,\n    args: ['fileInput']\n  }],\n  settings: [{\n    type: Input\n  }],\n  image: [{\n    type: Input\n  }],\n  inputImage: [{\n    type: Input\n  }],\n  cropper: [{\n    type: Input\n  }],\n  cropPosition: [{\n    type: Input\n  }],\n  cropPositionChange: [{\n    type: Output\n  }],\n  onCrop: [{\n    type: Output\n  }],\n  imageSet: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line:component-selector\n      selector: 'img-cropper',\n      template: \"<span class=\\\"ng2-imgcrop\\\">\\r\\n  <input\\r\\n    *ngIf=\\\"!settings.noFileInput\\\"\\r\\n    #fileInput\\r\\n    type=\\\"file\\\"\\r\\n    accept=\\\"image/*\\\"\\r\\n    (change)=\\\"fileChangeListener($event)\\\"\\r\\n  />\\r\\n  <canvas\\r\\n    #cropcanvas\\r\\n    (mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (touchmove)=\\\"onTouchMove($event)\\\"\\r\\n    (touchend)=\\\"onTouchEnd($event)\\\"\\r\\n    (touchstart)=\\\"onTouchStart($event)\\\"\\r\\n  >\\r\\n  </canvas>\\r\\n</span>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    cropPositionChange: [{\n      type: Output\n    }],\n    onCrop: [{\n      type: Output\n    }],\n    imageSet: [{\n      type: Output\n    }],\n    settings: [{\n      type: Input\n    }],\n    cropper: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    cropcanvas: [{\n      type: ViewChild,\n      args: ['cropcanvas', {\n        static: true\n      }]\n    }],\n    fileInput: [{\n      type: ViewChild,\n      args: ['fileInput']\n    }],\n    inputImage: [{\n      type: Input\n    }],\n    cropPosition: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ImageCropperModule = function ImageCropperModule() {\n  _classCallCheck(this, ImageCropperModule);\n};\n\nImageCropperModule.ɵfac = function ImageCropperModule_Factory(t) {\n  return new (t || ImageCropperModule)();\n};\n\nImageCropperModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: ImageCropperModule\n});\nImageCropperModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ImageCropperComponent],\n      exports: [ImageCropperComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageCropperModule, {\n    declarations: function declarations() {\n      return [ImageCropperComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ImageCropperComponent];\n    }\n  });\n})();\n\nvar ImageCropperService = function ImageCropperService() {\n  _classCallCheck(this, ImageCropperService);\n};\n\nImageCropperService.ɵfac = function ImageCropperService_Factory(t) {\n  return new (t || ImageCropperService)();\n};\n\nImageCropperService.ɵprov = ɵɵdefineInjectable({\n  factory: function ImageCropperService_Factory() {\n    return new ImageCropperService();\n  },\n  token: ImageCropperService,\n  providedIn: \"root\"\n});\n\nImageCropperService.ctorParameters = function () {\n  return [];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})(); // looks like this CropService is never used\n\n\nvar CropService = /*#__PURE__*/function () {\n  function CropService() {\n    _classCallCheck(this, CropService);\n  }\n\n  _createClass(CropService, [{\n    key: \"init\",\n    value: function init(canvas) {\n      this.canvas = canvas;\n      this.ctx = this.canvas.getContext('2d');\n    }\n  }]);\n\n  return CropService;\n}();\n/*\r\n * Public API Surface of ngx-img-cropper\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { Bounds, CornerMarker, CropPosition, CropService, CropTouch, CropperDrawSettings, CropperSettings, DragMarker, Exif, Fraction, Handle, ImageCropper, ImageCropperComponent, ImageCropperDataShare, ImageCropperModel, ImageCropperModule, ImageCropperService, Point, PointPool, ImageCropperModel as ɵa }; //# sourceMappingURL=ngx-img-cropper.js.map","map":{"version":3,"sources":["E:/_Projet/Cnss/gull-admin-full-version-12.0/gull-compact-sidebar/node_modules/ngx-img-cropper/fesm2015/ngx-img-cropper.js"],"names":["EventEmitter","Component","Renderer2","Inject","ViewChild","Input","Output","NgModule","ɵɵdefineInjectable","Injectable","DOCUMENT","CommonModule","ɵngcc0","ɵngcc1","_c0","_c1","ImageCropperComponent_input_1_Template","rf","ctx","_r4","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ImageCropperComponent_input_1_Template_input_change_0_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵnextContext","fileChangeListener","ɵɵelementEnd","CropperDrawSettings","settings","lineDash","strokeWidth","strokeColor","fillColor","dragIconStrokeWidth","dragIconStrokeColor","dragIconFillColor","backgroundFillColor","CropperSettings","canvasWidth","canvasHeight","dynamicSizing","width","height","minWidth","minHeight","minWithRelativeToResolution","croppedWidth","croppedHeight","cropperDrawSettings","touchRadius","noFileInput","markerSizeMultiplier","centerTouchRadius","showCenterMarker","allowedFilesRegex","cropOnResize","preserveSize","compressRatio","_rounded","_keepAspect","Object","assign","val","console","error","Fraction","Number","Exif","debug","IptcFieldMap","Tags","TiffTags","GPSTags","StringValues","ExposureProgram","MeteringMode","LightSource","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","element","event","handler","addEventListener","attachEvent","img","exifdata","base64","replace","binary","atob","len","length","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","url","callback","http","XMLHttpRequest","open","responseType","onload","status","response","send","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","findIPTCinJPEG","call","src","test","arrayBuffer","base64ToArrayBuffer","fileReader","FileReader","e","target","result","objectURLToBlob","blob","readAsArrayBuffer","Error","Blob","File","log","byteLength","file","dataView","DataView","getUint8","offset","marker","readEXIFData","getUint16","isFieldSegmentStart","_dataView","_offset","nameHeaderLength","startOffset","sectionLength","readIPTCData","fieldValue","fieldName","dataSize","segmentType","segmentSize","segmentStartPos","getInt16","getStringFromDB","hasOwnProperty","Array","push","tiffStart","dirStart","strings","bigEnd","entries","tags","entryOffset","tag","readTagValue","type","numValues","getUint32","valueOffset","vals","n","numerator","denominator","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","readTags","ExifIFDPointer","compopents","GPSInfoIFDPointer","Image","HTMLImageElement","checkImageType","complete","imageHasData","getImageData","a","strPretty","args","Point","x","y","myNext","p","myPrev","PointPool","initialSize","prev","firstAvailable","next","borrowed","Bounds","left","right","top","bottom","w","h","instance","borrow","Handle","radius","cropperSettings","over","drag","_position","value","setOver","position","CornerMarker","sideLength","hDirection","vDirection","horizontalNeighbour","verticalNeighbour","beginPath","setLineDash","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","rounded","offX","Math","round","sin","PI","abs","offY","fillStyle","fill","setPosition","moveX","moveY","neighbour","drawCornerFill","drawCornerBorder","CropTouch","id","DragMarker","iconPoints","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","points","bounds","c","getCentre","returnPoint","ImageCropperModel","ImageCropperDataShare","share","canvas","pressed","style","undefined","ImageCropper","imageCropperDataShare","keepAspect","crop","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","fileType","imageSet","pointPool","tl","tr","bl","br","addHorizontalNeighbour","addVerticalNeighbour","markers","center","croppedImage","currentlyInteracting","cropWidth","cropHeight","NaN","evt","rect","getBoundingClientRect","clientX","clientY","touch","ih","document","createElement","getContext","drawImage","imageData","sy","ey","py","alpha","ratio","dataUri","dataUriSubstring","substring","mimeType","regEx","RegExp","matches","exec","cropCanvas","responsiveWidth","parentElement","clientWidth","draw","setImage","srcImage","getBounds","clearRect","sourceAspect","canvasAspect","drawImageIOSFix","fillRect","max","strokeRect","save","arc","clip","restore","maxXClamp","minXClamp","minYClamp","maxYClamp","xLength","getHorizontalNeighbour","yLength","getVerticalNeighbour","xOver","yOver","iX","iY","ax","ay","newHeight","newWidth","newY","newX","anchorMarker","fold","getSide","min","enforceMinSize","move","recalculatePosition","b","sign","newCropTouch","index","k","dragHandle","setDrag","splice","matched","dragTouch","clampedPositions","clampPosition","dragCorner","dragCenter","setPressed","touchInBounds","bufferContext","getDataUriMimeType","updateClampBounds","cropPosition","getCropPositionFromMarkers","setCropPosition","cropBounds","getCropPositionFromBounds","vertSquashRatio","detectVerticalSquash","getCroppedImageHelper","tlPos","trPos","blPos","brPos","cropAspect","cX","cY","imageH","cropW","imageW","cropH","positions","marginTop","marginLeft","actualH","actualW","actualX","actualY","scaledW","scaledH","getCropBounds","fillWidth","fillHeight","getCroppedImage","offsetH","offsetW","resampleFn","toDataURL","minX","MAX_VALUE","minY","maxX","maxY","currentBounds","isImageSet","touches","preventDefault","touchPosition","getTouchPos","cropTouch","identifier","distance","previousDistance","setBounds","mousePosition","getMousePos","getDragTouchForID","drawCursors","handleMove","cursorDrawn","setStyle","drawCornerCursor","didDraw","changedTouches","handleRelease","sx","sw","sh","dx","dy","dw","dh","setReleased","CropPosition","ImageCropperComponent","renderer","cropPositionChange","exif","onCrop","dragUnsubscribers","cropcanvas","nativeElement","cropperClass","setAttribute","toString","windowListener","resize","bind","window","cropper","prepare","changes","isCropPositionChanged","updateCropPosition","toBounds","image","emit","updateCropBounds","inputImage","currentValue","updateSettings","removeDragListeners","removeEventListener","onTouchMove","onTouchStart","onTouchEnd","listen","onMouseMove","onMouseUp","onMouseDown","forEach","unsubscribe","files","name","loadEvent","readAsDataURL","offsetWidth","offsetHeight","resizeCanvas","reset","newBounds","croppingClass","raf","requestAnimationFrame","cancelAnimationFrame","naturalHeight","naturalWidth","getOrientedImage","isInitialized","original","isCropPositionUpdateNeeded","cropBound","getData","orientation","getTag","indexOf","cw","ch","cx","cy","deg","rotate","ɵfac","ImageCropperComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","ImageCropperComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","fileInput","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","ImageCropperComponent_Template","ɵɵtemplate","ImageCropperComponent_Template_canvas_mousedown_2_listener","ImageCropperComponent_Template_canvas_touchmove_2_listener","ImageCropperComponent_Template_canvas_touchend_2_listener","ImageCropperComponent_Template_canvas_touchstart_2_listener","ɵɵadvance","ɵɵproperty","directives","NgIf","encapsulation","ctorParameters","decorators","propDecorators","static","ngDevMode","ɵsetClassMetadata","selector","ImageCropperModule","ImageCropperModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ImageCropperService","ImageCropperService_Factory","ɵprov","factory","token","providedIn","CropService","ɵa"],"mappings":"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","sourcesContent":["import { EventEmitter, Component, Renderer2, Inject, ViewChild, Input, Output, NgModule, ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"cropcanvas\"];\nconst _c1 = [\"fileInput\"];\nfunction ImageCropperComponent_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"change\", function ImageCropperComponent_input_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.fileChangeListener($event); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nclass CropperDrawSettings {\r\n    constructor(settings) {\r\n        this.lineDash = false;\r\n        this.strokeWidth = 1;\r\n        this.strokeColor = 'rgba(255,255,255,1)';\r\n        this.fillColor = 'rgba(255,255,255,1)';\r\n        this.dragIconStrokeWidth = 1;\r\n        this.dragIconStrokeColor = 'rgba(0,0,0,1)';\r\n        this.dragIconFillColor = 'rgba(255,255,255,1)';\r\n        this.backgroundFillColor = 'rgba(0,0,0,0.6)';\r\n        if (typeof settings === 'object') {\r\n            this.lineDash = settings.lineDash || this.lineDash;\r\n            this.strokeWidth = settings.strokeWidth || this.strokeWidth;\r\n            this.fillColor = settings.fillColor || this.fillColor;\r\n            this.strokeColor = settings.strokeColor || this.strokeColor;\r\n            this.dragIconStrokeWidth =\r\n                settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\r\n            this.dragIconStrokeColor =\r\n                settings.dragIconStrokeColor || this.dragIconStrokeColor;\r\n            this.dragIconFillColor =\r\n                settings.dragIconFillColor || this.dragIconFillColor;\r\n            this.backgroundFillColor =\r\n                settings.backgroundFillColor || this.backgroundFillColor;\r\n        }\r\n    }\r\n}\n\nclass CropperSettings {\r\n    constructor(settings) {\r\n        this.canvasWidth = 300;\r\n        this.canvasHeight = 300;\r\n        this.dynamicSizing = false;\r\n        this.width = 200;\r\n        this.height = 200;\r\n        this.minWidth = 50;\r\n        this.minHeight = 50;\r\n        this.minWithRelativeToResolution = true;\r\n        this.croppedWidth = 100;\r\n        this.croppedHeight = 100;\r\n        this.cropperDrawSettings = new CropperDrawSettings();\r\n        this.touchRadius = 20;\r\n        this.noFileInput = false;\r\n        this.markerSizeMultiplier = 1;\r\n        this.centerTouchRadius = 20;\r\n        this.showCenterMarker = true;\r\n        this.allowedFilesRegex = /\\.(jpe?g|png|gif|bmp)$/i;\r\n        this.cropOnResize = true;\r\n        this.preserveSize = false;\r\n        this.compressRatio = 1.0;\r\n        // tslint:disable-next-line:variable-name\r\n        this._rounded = false;\r\n        // tslint:disable-next-line:variable-name\r\n        this._keepAspect = true;\r\n        if (typeof settings === 'object') {\r\n            Object.assign(this, settings);\r\n        }\r\n    }\r\n    set rounded(val) {\r\n        this._rounded = val;\r\n        if (val) {\r\n            this._keepAspect = true;\r\n        }\r\n    }\r\n    get rounded() {\r\n        return this._rounded;\r\n    }\r\n    set keepAspect(val) {\r\n        this._keepAspect = val;\r\n        if (this._rounded === true && this._keepAspect === false) {\r\n            console.error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');\r\n            this._keepAspect = true;\r\n        }\r\n    }\r\n    get keepAspect() {\r\n        return this._keepAspect;\r\n    }\r\n}\n\nclass Fraction extends Number {\r\n}\r\nclass Exif {\r\n    constructor() {\r\n        this.debug = false;\r\n        this.IptcFieldMap = {\r\n            0x78: 'caption',\r\n            0x6e: 'credit',\r\n            0x19: 'keywords',\r\n            0x37: 'dateCreated',\r\n            0x50: 'byline',\r\n            0x55: 'bylineTitle',\r\n            0x7a: 'captionWriter',\r\n            0x69: 'headline',\r\n            0x74: 'copyright',\r\n            0x0f: 'category'\r\n        };\r\n        this.Tags = {\r\n            // version tags\r\n            0x9000: 'ExifVersion',\r\n            0xa000: 'FlashpixVersion',\r\n            // colorspace tags\r\n            0xa001: 'ColorSpace',\r\n            // image configuration\r\n            0xa002: 'PixelXDimension',\r\n            0xa003: 'PixelYDimension',\r\n            0x9101: 'ComponentsConfiguration',\r\n            0x9102: 'CompressedBitsPerPixel',\r\n            // user information\r\n            0x927c: 'MakerNote',\r\n            0x9286: 'UserComment',\r\n            // related file\r\n            0xa004: 'RelatedSoundFile',\r\n            // date and time\r\n            0x9003: 'DateTimeOriginal',\r\n            0x9004: 'DateTimeDigitized',\r\n            0x9290: 'SubsecTime',\r\n            0x9291: 'SubsecTimeOriginal',\r\n            0x9292: 'SubsecTimeDigitized',\r\n            // picture-taking conditions\r\n            0x829a: 'ExposureTime',\r\n            0x829d: 'FNumber',\r\n            0x8822: 'ExposureProgram',\r\n            0x8824: 'SpectralSensitivity',\r\n            0x8827: 'ISOSpeedRatings',\r\n            0x8828: 'OECF',\r\n            0x9201: 'ShutterSpeedValue',\r\n            0x9202: 'ApertureValue',\r\n            0x9203: 'BrightnessValue',\r\n            0x9204: 'ExposureBias',\r\n            0x9205: 'MaxApertureValue',\r\n            0x9206: 'SubjectDistance',\r\n            0x9207: 'MeteringMode',\r\n            0x9208: 'LightSource',\r\n            0x9209: 'Flash',\r\n            0x9214: 'SubjectArea',\r\n            0x920a: 'FocalLength',\r\n            0xa20b: 'FlashEnergy',\r\n            0xa20c: 'SpatialFrequencyResponse',\r\n            0xa20e: 'FocalPlaneXResolution',\r\n            0xa20f: 'FocalPlaneYResolution',\r\n            0xa210: 'FocalPlaneResolutionUnit',\r\n            0xa214: 'SubjectLocation',\r\n            0xa215: 'ExposureIndex',\r\n            0xa217: 'SensingMethod',\r\n            0xa300: 'FileSource',\r\n            0xa301: 'SceneType',\r\n            0xa302: 'CFAPattern',\r\n            0xa401: 'CustomRendered',\r\n            0xa402: 'ExposureMode',\r\n            0xa403: 'WhiteBalance',\r\n            0xa404: 'DigitalZoomRation',\r\n            0xa405: 'FocalLengthIn35mmFilm',\r\n            0xa406: 'SceneCaptureType',\r\n            0xa407: 'GainControl',\r\n            0xa408: 'Contrast',\r\n            0xa409: 'Saturation',\r\n            0xa40a: 'Sharpness',\r\n            0xa40b: 'DeviceSettingDescription',\r\n            0xa40c: 'SubjectDistanceRange',\r\n            // other tags\r\n            0xa005: 'InteroperabilityIFDPointer',\r\n            0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\r\n        };\r\n        this.TiffTags = {\r\n            0x0100: 'ImageWidth',\r\n            0x0101: 'ImageHeight',\r\n            0x8769: 'ExifIFDPointer',\r\n            0x8825: 'GPSInfoIFDPointer',\r\n            0xa005: 'InteroperabilityIFDPointer',\r\n            0x0102: 'BitsPerSample',\r\n            0x0103: 'Compression',\r\n            0x0106: 'PhotometricInterpretation',\r\n            0x0112: 'Orientation',\r\n            0x0115: 'SamplesPerPixel',\r\n            0x011c: 'PlanarConfiguration',\r\n            0x0212: 'YCbCrSubSampling',\r\n            0x0213: 'YCbCrPositioning',\r\n            0x011a: 'XResolution',\r\n            0x011b: 'YResolution',\r\n            0x0128: 'ResolutionUnit',\r\n            0x0111: 'StripOffsets',\r\n            0x0116: 'RowsPerStrip',\r\n            0x0117: 'StripByteCounts',\r\n            0x0201: 'JPEGInterchangeFormat',\r\n            0x0202: 'JPEGInterchangeFormatLength',\r\n            0x012d: 'TransferFunction',\r\n            0x013e: 'WhitePoint',\r\n            0x013f: 'PrimaryChromaticities',\r\n            0x0211: 'YCbCrCoefficients',\r\n            0x0214: 'ReferenceBlackWhite',\r\n            0x0132: 'DateTime',\r\n            0x010e: 'ImageDescription',\r\n            0x010f: 'Make',\r\n            0x0110: 'Model',\r\n            0x0131: 'Software',\r\n            0x013b: 'Artist',\r\n            0x8298: 'Copyright'\r\n        };\r\n        this.GPSTags = {\r\n            0x0000: 'GPSVersionID',\r\n            0x0001: 'GPSLatitudeRef',\r\n            0x0002: 'GPSLatitude',\r\n            0x0003: 'GPSLongitudeRef',\r\n            0x0004: 'GPSLongitude',\r\n            0x0005: 'GPSAltitudeRef',\r\n            0x0006: 'GPSAltitude',\r\n            0x0007: 'GPSTimeStamp',\r\n            0x0008: 'GPSSatellites',\r\n            0x0009: 'GPSStatus',\r\n            0x000a: 'GPSMeasureMode',\r\n            0x000b: 'GPSDOP',\r\n            0x000c: 'GPSSpeedRef',\r\n            0x000d: 'GPSSpeed',\r\n            0x000e: 'GPSTrackRef',\r\n            0x000f: 'GPSTrack',\r\n            0x0010: 'GPSImgDirectionRef',\r\n            0x0011: 'GPSImgDirection',\r\n            0x0012: 'GPSMapDatum',\r\n            0x0013: 'GPSDestLatitudeRef',\r\n            0x0014: 'GPSDestLatitude',\r\n            0x0015: 'GPSDestLongitudeRef',\r\n            0x0016: 'GPSDestLongitude',\r\n            0x0017: 'GPSDestBearingRef',\r\n            0x0018: 'GPSDestBearing',\r\n            0x0019: 'GPSDestDistanceRef',\r\n            0x001a: 'GPSDestDistance',\r\n            0x001b: 'GPSProcessingMethod',\r\n            0x001c: 'GPSAreaInformation',\r\n            0x001d: 'GPSDateStamp',\r\n            0x001e: 'GPSDifferential'\r\n        };\r\n        this.StringValues = {\r\n            ExposureProgram: {\r\n                0: 'Not defined',\r\n                1: 'Manual',\r\n                2: 'Normal program',\r\n                3: 'Aperture priority',\r\n                4: 'Shutter priority',\r\n                5: 'Creative program',\r\n                6: 'Action program',\r\n                7: 'Portrait mode',\r\n                8: 'Landscape mode'\r\n            },\r\n            MeteringMode: {\r\n                0: 'Unknown',\r\n                1: 'Average',\r\n                2: 'CenterWeightedAverage',\r\n                3: 'Spot',\r\n                4: 'MultiSpot',\r\n                5: 'Pattern',\r\n                6: 'Partial',\r\n                255: 'Other'\r\n            },\r\n            LightSource: {\r\n                0: 'Unknown',\r\n                1: 'Daylight',\r\n                2: 'Fluorescent',\r\n                3: 'Tungsten (incandescent light)',\r\n                4: 'Flash',\r\n                9: 'Fine weather',\r\n                10: 'Cloudy weather',\r\n                11: 'Shade',\r\n                12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n                13: 'Day white fluorescent (N 4600 - 5400K)',\r\n                14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n                15: 'White fluorescent (WW 3200 - 3700K)',\r\n                17: 'Standard light A',\r\n                18: 'Standard light B',\r\n                19: 'Standard light C',\r\n                20: 'D55',\r\n                21: 'D65',\r\n                22: 'D75',\r\n                23: 'D50',\r\n                24: 'ISO studio tungsten',\r\n                255: 'Other'\r\n            },\r\n            Flash: {\r\n                0x0000: 'Flash did not fire',\r\n                0x0001: 'Flash fired',\r\n                0x0005: 'Strobe return light not detected',\r\n                0x0007: 'Strobe return light detected',\r\n                0x0009: 'Flash fired, compulsory flash mode',\r\n                0x000d: 'Flash fired, compulsory flash mode, return light not detected',\r\n                0x000f: 'Flash fired, compulsory flash mode, return light detected',\r\n                0x0010: 'Flash did not fire, compulsory flash mode',\r\n                0x0018: 'Flash did not fire, auto mode',\r\n                0x0019: 'Flash fired, auto mode',\r\n                0x001d: 'Flash fired, auto mode, return light not detected',\r\n                0x001f: 'Flash fired, auto mode, return light detected',\r\n                0x0020: 'No flash function',\r\n                0x0041: 'Flash fired, red-eye reduction mode',\r\n                0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n                0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n                0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n                0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n                0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n                0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n                0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n                0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n            },\r\n            SensingMethod: {\r\n                1: 'Not defined',\r\n                2: 'One-chip color area sensor',\r\n                3: 'Two-chip color area sensor',\r\n                4: 'Three-chip color area sensor',\r\n                5: 'Color sequential area sensor',\r\n                7: 'Trilinear sensor',\r\n                8: 'Color sequential linear sensor'\r\n            },\r\n            SceneCaptureType: {\r\n                0: 'Standard',\r\n                1: 'Landscape',\r\n                2: 'Portrait',\r\n                3: 'Night scene'\r\n            },\r\n            SceneType: {\r\n                1: 'Directly photographed'\r\n            },\r\n            CustomRendered: {\r\n                0: 'Normal process',\r\n                1: 'Custom process'\r\n            },\r\n            WhiteBalance: {\r\n                0: 'Auto white balance',\r\n                1: 'Manual white balance'\r\n            },\r\n            GainControl: {\r\n                0: 'None',\r\n                1: 'Low gain up',\r\n                2: 'High gain up',\r\n                3: 'Low gain down',\r\n                4: 'High gain down'\r\n            },\r\n            Contrast: {\r\n                0: 'Normal',\r\n                1: 'Soft',\r\n                2: 'Hard'\r\n            },\r\n            Saturation: {\r\n                0: 'Normal',\r\n                1: 'Low saturation',\r\n                2: 'High saturation'\r\n            },\r\n            Sharpness: {\r\n                0: 'Normal',\r\n                1: 'Soft',\r\n                2: 'Hard'\r\n            },\r\n            SubjectDistanceRange: {\r\n                0: 'Unknown',\r\n                1: 'Macro',\r\n                2: 'Close view',\r\n                3: 'Distant view'\r\n            },\r\n            FileSource: {\r\n                3: 'DSC'\r\n            },\r\n            Components: {\r\n                0: '',\r\n                1: 'Y',\r\n                2: 'Cb',\r\n                3: 'Cr',\r\n                4: 'R',\r\n                5: 'G',\r\n                6: 'B'\r\n            }\r\n        };\r\n    }\r\n    addEvent(element, event, handler) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(event, handler, false);\r\n        }\r\n        else {\r\n            // Hello, IE!\r\n            if (element.attachEvent) {\r\n                element.attachEvent('on' + event, handler);\r\n            }\r\n        }\r\n    }\r\n    imageHasData(img) {\r\n        return !!img.exifdata;\r\n    }\r\n    base64ToArrayBuffer(base64) {\r\n        base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\r\n        const binary = atob(base64);\r\n        const len = binary.length;\r\n        const buffer = new ArrayBuffer(len);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < len; i++) {\r\n            view[i] = binary.charCodeAt(i);\r\n        }\r\n        return buffer;\r\n    }\r\n    objectURLToBlob(url, callback) {\r\n        const http = new XMLHttpRequest();\r\n        http.open('GET', url, true);\r\n        http.responseType = 'blob';\r\n        http.onload = () => {\r\n            if (http.status === 200 || http.status === 0) {\r\n                callback(http.response);\r\n            }\r\n        };\r\n        http.send();\r\n    }\r\n    getImageData(img, callback) {\r\n        const handleBinaryFile = (binFile) => {\r\n            const data = this.findEXIFinJPEG(binFile);\r\n            const iptcdata = this.findIPTCinJPEG(binFile);\r\n            img.exifdata = data || {};\r\n            img.iptcdata = iptcdata || {};\r\n            if (callback) {\r\n                callback.call(img);\r\n            }\r\n        };\r\n        if ('src' in img && img.src) {\r\n            if (/^data:/i.test(img.src)) {\r\n                // Data URI\r\n                const arrayBuffer = this.base64ToArrayBuffer(img.src);\r\n                handleBinaryFile(arrayBuffer);\r\n            }\r\n            else {\r\n                if (/^blob:/i.test(img.src)) {\r\n                    // Object URL\r\n                    const fileReader = new FileReader();\r\n                    fileReader.onload = (e) => {\r\n                        handleBinaryFile(e.target.result);\r\n                    };\r\n                    this.objectURLToBlob(img.src, (blob) => {\r\n                        fileReader.readAsArrayBuffer(blob);\r\n                    });\r\n                }\r\n                else {\r\n                    const http = new XMLHttpRequest();\r\n                    http.onload = () => {\r\n                        if (http.status === 200 || http.status === 0) {\r\n                            handleBinaryFile(http.response);\r\n                        }\r\n                        else {\r\n                            throw new Error('Could not load image');\r\n                        }\r\n                    };\r\n                    http.open('GET', img.src, true);\r\n                    http.responseType = 'arraybuffer';\r\n                    http.send(null);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (FileReader && (img instanceof Blob || img instanceof File)) {\r\n                const fileReader = new FileReader();\r\n                fileReader.onload = (e) => {\r\n                    this.log('Got file of length ' + e.target.result.byteLength);\r\n                    handleBinaryFile(e.target.result);\r\n                };\r\n                fileReader.readAsArrayBuffer(img);\r\n            }\r\n        }\r\n    }\r\n    findEXIFinJPEG(file) {\r\n        const dataView = new DataView(file);\r\n        this.log('Got file of length ' + file.byteLength);\r\n        if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n            this.log('Not a valid JPEG');\r\n            return false; // not a valid jpeg\r\n        }\r\n        let offset = 2;\r\n        const length = file.byteLength;\r\n        let marker;\r\n        while (offset < length) {\r\n            if (dataView.getUint8(offset) !== 0xff) {\r\n                this.log('Not a valid marker at offset ' +\r\n                    offset +\r\n                    ', found: ' +\r\n                    dataView.getUint8(offset));\r\n                return false; // not a valid marker, something is wrong\r\n            }\r\n            marker = dataView.getUint8(offset + 1);\r\n            this.log(marker);\r\n            // we could implement handling for other markers here,\r\n            // but we're only looking for 0xFFE1 for EXIF data\r\n            if (marker === 225) {\r\n                this.log('Found 0xFFE1 marker');\r\n                return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\r\n                // offset += 2 + file.getShortAt(offset+2, true);\r\n            }\r\n            else {\r\n                offset += 2 + dataView.getUint16(offset + 2);\r\n            }\r\n        }\r\n    }\r\n    findIPTCinJPEG(file) {\r\n        const dataView = new DataView(file);\r\n        this.log('Got file of length ' + file.byteLength);\r\n        if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n            this.log('Not a valid JPEG');\r\n            return false; // not a valid jpeg\r\n        }\r\n        let offset = 2;\r\n        const length = file.byteLength;\r\n        // tslint:disable-next-line:variable-name\r\n        const isFieldSegmentStart = (_dataView, _offset) => {\r\n            return (_dataView.getUint8(_offset) === 0x38 &&\r\n                _dataView.getUint8(_offset + 1) === 0x42 &&\r\n                _dataView.getUint8(_offset + 2) === 0x49 &&\r\n                _dataView.getUint8(_offset + 3) === 0x4d &&\r\n                _dataView.getUint8(_offset + 4) === 0x04 &&\r\n                _dataView.getUint8(_offset + 5) === 0x04);\r\n        };\r\n        while (offset < length) {\r\n            if (isFieldSegmentStart(dataView, offset)) {\r\n                // Get the length of the name header (which is padded to an even number of bytes)\r\n                let nameHeaderLength = dataView.getUint8(offset + 7);\r\n                if (nameHeaderLength % 2 !== 0) {\r\n                    nameHeaderLength += 1;\r\n                }\r\n                // Check for pre photoshop 6 format\r\n                if (nameHeaderLength === 0) {\r\n                    // Always 4\r\n                    nameHeaderLength = 4;\r\n                }\r\n                const startOffset = offset + 8 + nameHeaderLength;\r\n                const sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n                return this.readIPTCData(file, startOffset, sectionLength);\r\n            }\r\n            // Not the marker, continue searching\r\n            offset++;\r\n        }\r\n    }\r\n    readIPTCData(file, startOffset, sectionLength) {\r\n        const dataView = new DataView(file);\r\n        const data = {};\r\n        let fieldValue;\r\n        let fieldName;\r\n        let dataSize;\r\n        let segmentType;\r\n        let segmentSize;\r\n        let segmentStartPos = startOffset;\r\n        while (segmentStartPos < startOffset + sectionLength) {\r\n            if (dataView.getUint8(segmentStartPos) === 0x1c &&\r\n                dataView.getUint8(segmentStartPos + 1) === 0x02) {\r\n                segmentType = dataView.getUint8(segmentStartPos + 2);\r\n                if (segmentType in this.IptcFieldMap) {\r\n                    dataSize = dataView.getInt16(segmentStartPos + 3);\r\n                    segmentSize = dataSize + 5;\r\n                    fieldName = this.IptcFieldMap[segmentType];\r\n                    fieldValue = this.getStringFromDB(dataView, segmentStartPos + 5, dataSize);\r\n                    // Check if we already stored a value with this name\r\n                    if (data.hasOwnProperty(fieldName)) {\r\n                        // Value already stored with this name, create multivalue field\r\n                        if (data[fieldName] instanceof Array) {\r\n                            data[fieldName].push(fieldValue);\r\n                        }\r\n                        else {\r\n                            data[fieldName] = [data[fieldName], fieldValue];\r\n                        }\r\n                    }\r\n                    else {\r\n                        data[fieldName] = fieldValue;\r\n                    }\r\n                }\r\n            }\r\n            segmentStartPos++;\r\n        }\r\n        return data;\r\n    }\r\n    readTags(file, tiffStart, dirStart, strings, bigEnd) {\r\n        const entries = file.getUint16(dirStart, !bigEnd);\r\n        const tags = {};\r\n        let entryOffset;\r\n        let tag;\r\n        for (let i = 0; i < entries; i++) {\r\n            entryOffset = dirStart + i * 12 + 2;\r\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n            if (!tag) {\r\n                this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\r\n            }\r\n            tags[tag] = this.readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\r\n        }\r\n        return tags;\r\n    }\r\n    readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\r\n        const type = file.getUint16(entryOffset + 2, !bigEnd);\r\n        const numValues = file.getUint32(entryOffset + 4, !bigEnd);\r\n        const valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\r\n        let offset;\r\n        let vals;\r\n        let val;\r\n        let n;\r\n        let numerator;\r\n        let denominator;\r\n        switch (type) {\r\n            case 1: // byte, 8-bit unsigned int\r\n            case 7: // undefined, 8-bit byte, value depending on field\r\n                if (numValues === 1) {\r\n                    return file.getUint8(entryOffset + 8, !bigEnd);\r\n                }\r\n                else {\r\n                    offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        vals[n] = file.getUint8(offset + n);\r\n                    }\r\n                    return vals;\r\n                }\r\n            case 2: // ascii, 8-bit byte\r\n                offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n                return this.getStringFromDB(file, offset, numValues - 1);\r\n            case 3: // short, 16 bit int\r\n                if (numValues === 1) {\r\n                    return file.getUint16(entryOffset + 8, !bigEnd);\r\n                }\r\n                else {\r\n                    offset = numValues > 2 ? valueOffset : entryOffset + 8;\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n            case 4: // long, 32 bit int\r\n                if (numValues === 1) {\r\n                    return file.getUint32(entryOffset + 8, !bigEnd);\r\n                }\r\n                else {\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n            case 5: // rational = two long values, first is numerator, second is denominator\r\n                if (numValues === 1) {\r\n                    numerator = file.getUint32(valueOffset, !bigEnd);\r\n                    denominator = file.getUint32(valueOffset + 4, !bigEnd);\r\n                    val = new Fraction(numerator / denominator);\r\n                    val.numerator = numerator;\r\n                    val.denominator = denominator;\r\n                    return val;\r\n                }\r\n                else {\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\r\n                        denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\r\n                        vals[n] = new Fraction(numerator / denominator);\r\n                        vals[n].numerator = numerator;\r\n                        vals[n].denominator = denominator;\r\n                    }\r\n                    return vals;\r\n                }\r\n            case 9: // slong, 32 bit signed int\r\n                if (numValues === 1) {\r\n                    return file.getInt32(entryOffset + 8, !bigEnd);\r\n                }\r\n                else {\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n                if (numValues === 1) {\r\n                    return (file.getInt32(valueOffset, !bigEnd) /\r\n                        file.getInt32(valueOffset + 4, !bigEnd));\r\n                }\r\n                else {\r\n                    vals = [];\r\n                    for (n = 0; n < numValues; n++) {\r\n                        vals[n] =\r\n                            file.getInt32(valueOffset + 8 * n, !bigEnd) /\r\n                                file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\r\n                    }\r\n                    return vals;\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    getStringFromDB(buffer, start, length) {\r\n        let outstr = '';\r\n        for (let n = start; n < start + length; n++) {\r\n            outstr += String.fromCharCode(buffer.getUint8(n));\r\n        }\r\n        return outstr;\r\n    }\r\n    readEXIFData(file, start) {\r\n        if (this.getStringFromDB(file, start, 4) !== 'Exif') {\r\n            this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\r\n            return false;\r\n        }\r\n        let bigEnd;\r\n        let tags;\r\n        let tag;\r\n        let exifData;\r\n        let gpsData;\r\n        const tiffOffset = start + 6;\r\n        // test for TIFF validity and endianness\r\n        if (file.getUint16(tiffOffset) === 0x4949) {\r\n            bigEnd = false;\r\n        }\r\n        else {\r\n            if (file.getUint16(tiffOffset) === 0x4d4d) {\r\n                bigEnd = true;\r\n            }\r\n            else {\r\n                this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\r\n                return false;\r\n            }\r\n        }\r\n        if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\r\n            this.log('Not valid TIFF data! (no 0x002A)');\r\n            return false;\r\n        }\r\n        const firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\r\n        if (firstIFDOffset < 0x00000008) {\r\n            this.log('Not valid TIFF data! (First offset less than 8)', file.getUint32(tiffOffset + 4, !bigEnd));\r\n            return false;\r\n        }\r\n        tags = this.readTags(file, tiffOffset, tiffOffset + firstIFDOffset, this.TiffTags, bigEnd);\r\n        if (tags.ExifIFDPointer) {\r\n            exifData = this.readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, this.Tags, bigEnd);\r\n            for (tag in exifData) {\r\n                if ({}.hasOwnProperty.call(exifData, tag)) {\r\n                    switch (tag) {\r\n                        case 'LightSource':\r\n                        case 'Flash':\r\n                        case 'MeteringMode':\r\n                        case 'ExposureProgram':\r\n                        case 'SensingMethod':\r\n                        case 'SceneCaptureType':\r\n                        case 'SceneType':\r\n                        case 'CustomRendered':\r\n                        case 'WhiteBalance':\r\n                        case 'GainControl':\r\n                        case 'Contrast':\r\n                        case 'Saturation':\r\n                        case 'Sharpness':\r\n                        case 'SubjectDistanceRange':\r\n                        case 'FileSource':\r\n                            exifData[tag] = this.StringValues[tag][exifData[tag]];\r\n                            break;\r\n                        case 'ExifVersion':\r\n                        case 'FlashpixVersion':\r\n                            exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\r\n                            break;\r\n                        case 'ComponentsConfiguration':\r\n                            const compopents = 'Components';\r\n                            exifData[tag] =\r\n                                this.StringValues[compopents][exifData[tag][0]] +\r\n                                    this.StringValues[compopents][exifData[tag][1]] +\r\n                                    this.StringValues[compopents][exifData[tag][2]] +\r\n                                    this.StringValues[compopents][exifData[tag][3]];\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    tags[tag] = exifData[tag];\r\n                }\r\n            }\r\n        }\r\n        if (tags.GPSInfoIFDPointer) {\r\n            gpsData = this.readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, this.GPSTags, bigEnd);\r\n            for (tag in gpsData) {\r\n                if ({}.hasOwnProperty.call(gpsData, tag)) {\r\n                    switch (tag) {\r\n                        case 'GPSVersionID':\r\n                            gpsData[tag] =\r\n                                gpsData[tag][0] +\r\n                                    '.' +\r\n                                    gpsData[tag][1] +\r\n                                    '.' +\r\n                                    gpsData[tag][2] +\r\n                                    '.' +\r\n                                    gpsData[tag][3];\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    tags[tag] = gpsData[tag];\r\n                }\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n    //   get rid of this silly issue\r\n    checkImageType(img) {\r\n        return img instanceof Image || img instanceof HTMLImageElement;\r\n    }\r\n    getData(img, callback) {\r\n        if (this.checkImageType(img) && !img.complete) {\r\n            return false;\r\n        }\r\n        if (!this.imageHasData(img)) {\r\n            this.getImageData(img, callback);\r\n        }\r\n        else {\r\n            if (callback) {\r\n                callback.call(img);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getTag(img, tag) {\r\n        if (!this.imageHasData(img)) {\r\n            return;\r\n        }\r\n        return img.exifdata[tag];\r\n    }\r\n    getAllTags(img) {\r\n        if (!this.imageHasData(img)) {\r\n            return {};\r\n        }\r\n        let a;\r\n        const data = img.exifdata;\r\n        const tags = {};\r\n        for (a in data) {\r\n            if (data.hasOwnProperty(a)) {\r\n                tags[a] = data[a];\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n    pretty(img) {\r\n        if (!this.imageHasData(img)) {\r\n            return '';\r\n        }\r\n        let a;\r\n        const data = img.exifdata;\r\n        let strPretty = '';\r\n        for (a in data) {\r\n            if (data.hasOwnProperty(a)) {\r\n                if (typeof data[a] === 'object') {\r\n                    if (data[a] instanceof Number) {\r\n                        strPretty += `${a} : ${data[a]} [${data[a].numerator}/${data[a].denominator}]\\r\\n`;\r\n                    }\r\n                    else {\r\n                        strPretty += `${a} : [${data[a].length} values]\\r\\n`;\r\n                    }\r\n                }\r\n                else {\r\n                    strPretty += `${a} : ${data[a]}\\r\\n`;\r\n                }\r\n            }\r\n        }\r\n        return strPretty;\r\n    }\r\n    readFromBinaryFile(file) {\r\n        return this.findEXIFinJPEG(file);\r\n    }\r\n    log(...args) {\r\n        if (this.debug) {\r\n            console.log(args);\r\n        }\r\n    }\r\n}\n\nclass Point {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get next() {\r\n        return this.myNext;\r\n    }\r\n    set next(p) {\r\n        this.myNext = p;\r\n    }\r\n    get prev() {\r\n        return this.myPrev;\r\n    }\r\n    set prev(p) {\r\n        this.myPrev = p;\r\n    }\r\n}\n\nclass PointPool {\r\n    constructor(initialSize = 1) {\r\n        let prev = (this.firstAvailable = new Point());\r\n        for (let i = 1; i < initialSize; i++) {\r\n            const p = new Point();\r\n            prev.next = p;\r\n            prev = p;\r\n        }\r\n    }\r\n    get instance() {\r\n        return this;\r\n    }\r\n    borrow(x, y) {\r\n        if (this.firstAvailable == null) {\r\n            throw new Error('Pool exhausted');\r\n        }\r\n        this.borrowed++;\r\n        const p = this.firstAvailable;\r\n        this.firstAvailable = p.next;\r\n        p.x = x;\r\n        p.y = y;\r\n        return p;\r\n    }\r\n    returnPoint(p) {\r\n        this.borrowed--;\r\n        p.x = 0;\r\n        p.y = 0;\r\n        p.next = this.firstAvailable;\r\n        this.firstAvailable = p;\r\n    }\r\n}\n\nclass Bounds {\r\n    constructor(x, y, width, height) {\r\n        if (x === void 0) {\r\n            x = 0;\r\n        }\r\n        if (y === void 0) {\r\n            y = 0;\r\n        }\r\n        if (width === void 0) {\r\n            width = 0;\r\n        }\r\n        if (height === void 0) {\r\n            height = 0;\r\n        }\r\n        this.left = x;\r\n        this.right = x + width;\r\n        this.top = y;\r\n        this.bottom = y + height;\r\n    }\r\n    get width() {\r\n        return this.right - this.left;\r\n    }\r\n    get height() {\r\n        return this.bottom - this.top;\r\n    }\r\n    getCentre() {\r\n        const w = this.width;\r\n        const h = this.height;\r\n        return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\r\n    }\r\n}\n\nclass Handle {\r\n    constructor(x, y, radius, settings) {\r\n        this.cropperSettings = new CropperSettings();\r\n        this.over = false;\r\n        this.drag = false;\r\n        this._position = new Point(x, y);\r\n        this.offset = new Point(0, 0);\r\n        this.radius = radius;\r\n        this.cropperSettings = settings;\r\n    }\r\n    setDrag(value) {\r\n        this.drag = value;\r\n        this.setOver(value);\r\n    }\r\n    draw(ctx) {\r\n        // this should't be empty\r\n    }\r\n    setOver(over) {\r\n        this.over = over;\r\n    }\r\n    touchInBounds(x, y) {\r\n        return (x > this.position.x - this.radius + this.offset.x &&\r\n            x < this.position.x + this.radius + this.offset.x &&\r\n            y > this.position.y - this.radius + this.offset.y &&\r\n            y < this.position.y + this.radius + this.offset.y);\r\n    }\r\n    get position() {\r\n        return this._position;\r\n    }\r\n    setPosition(x, y) {\r\n        this._position.x = x;\r\n        this._position.y = y;\r\n    }\r\n}\n\nclass CornerMarker extends Handle {\r\n    constructor(x, y, radius, cropperSettings) {\r\n        super(x, y, radius, cropperSettings);\r\n    }\r\n    drawCornerBorder(ctx) {\r\n        let sideLength = 10;\r\n        if (this.over || this.drag) {\r\n            sideLength = 12;\r\n        }\r\n        let hDirection = this.cropperSettings.markerSizeMultiplier;\r\n        let vDirection = this.cropperSettings.markerSizeMultiplier;\r\n        if (this.horizontalNeighbour.position.x < this.position.x) {\r\n            hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n        }\r\n        if (this.verticalNeighbour.position.y < this.position.y) {\r\n            vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n        }\r\n        ctx.beginPath();\r\n        if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n            ctx.setLineDash([1, 3]);\r\n        }\r\n        ctx.lineJoin = 'miter';\r\n        ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\r\n        ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\r\n        ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\r\n        ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\r\n        ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\r\n        ctx.closePath();\r\n        ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n        ctx.strokeStyle =\r\n            this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n                'rgba(255,255,255,.7)';\r\n        ctx.stroke();\r\n    }\r\n    drawCornerFill(ctx) {\r\n        let sideLength = 10;\r\n        if (this.over || this.drag) {\r\n            sideLength = 12;\r\n        }\r\n        let hDirection = this.cropperSettings.markerSizeMultiplier;\r\n        let vDirection = this.cropperSettings.markerSizeMultiplier;\r\n        if (this.horizontalNeighbour.position.x < this.position.x) {\r\n            hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n        }\r\n        if (this.verticalNeighbour.position.y < this.position.y) {\r\n            vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n        }\r\n        if (this.cropperSettings.rounded) {\r\n            const width = this.position.x - this.horizontalNeighbour.position.x;\r\n            const height = this.position.y - this.verticalNeighbour.position.y;\r\n            const offX = Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n            const offY = Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n            this.offset.x = hDirection > 0 ? offX : -offX;\r\n            this.offset.y = vDirection > 0 ? offY : -offY;\r\n        }\r\n        else {\r\n            this.offset.x = 0;\r\n            this.offset.y = 0;\r\n        }\r\n        ctx.beginPath();\r\n        if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n            ctx.setLineDash([1, 3]);\r\n        }\r\n        ctx.moveTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\r\n        ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y);\r\n        ctx.lineTo(this.position.x + this.offset.x + sideLength * hDirection, this.position.y + this.offset.y + sideLength * vDirection);\r\n        ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y + sideLength * vDirection);\r\n        ctx.lineTo(this.position.x + this.offset.x, this.position.y + this.offset.y);\r\n        ctx.closePath();\r\n        ctx.fillStyle =\r\n            this.cropperSettings.cropperDrawSettings.fillColor ||\r\n                'rgba(255,255,255,.7)';\r\n        ctx.fill();\r\n    }\r\n    moveX(x) {\r\n        this.setPosition(x, this.position.y);\r\n    }\r\n    moveY(y) {\r\n        this.setPosition(this.position.x, y);\r\n    }\r\n    move(x, y) {\r\n        this.setPosition(x, y);\r\n        this.verticalNeighbour.moveX(x);\r\n        this.horizontalNeighbour.moveY(y);\r\n    }\r\n    addHorizontalNeighbour(neighbour) {\r\n        this.horizontalNeighbour = neighbour;\r\n    }\r\n    addVerticalNeighbour(neighbour) {\r\n        this.verticalNeighbour = neighbour;\r\n    }\r\n    getHorizontalNeighbour() {\r\n        return this.horizontalNeighbour;\r\n    }\r\n    getVerticalNeighbour() {\r\n        return this.verticalNeighbour;\r\n    }\r\n    draw(ctx) {\r\n        this.drawCornerFill(ctx);\r\n        this.drawCornerBorder(ctx);\r\n    }\r\n}\n\nclass CropTouch {\r\n    constructor(x = 0, y = 0, id = 0) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\n\nclass DragMarker extends Handle {\r\n    constructor(x, y, radius, cropperSettings) {\r\n        super(x, y, radius, cropperSettings);\r\n        this.iconPoints = [];\r\n        this.scaledIconPoints = [];\r\n        this.getDragIconPoints(this.iconPoints, 1);\r\n        this.getDragIconPoints(this.scaledIconPoints, 1.2);\r\n    }\r\n    draw(ctx) {\r\n        if (this.over || this.drag) {\r\n            this.drawIcon(ctx, this.scaledIconPoints);\r\n        }\r\n        else {\r\n            this.drawIcon(ctx, this.iconPoints);\r\n        }\r\n    }\r\n    getDragIconPoints(arr, scale) {\r\n        const maxLength = 17 * scale;\r\n        const arrowWidth = 14 * scale;\r\n        const arrowLength = 8 * scale;\r\n        const connectorThroat = 4 * scale;\r\n        arr.push(new PointPool().instance.borrow(-connectorThroat / 2, maxLength - arrowLength));\r\n        arr.push(new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength));\r\n        arr.push(new PointPool().instance.borrow(0, maxLength));\r\n        arr.push(new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength));\r\n        arr.push(new PointPool().instance.borrow(connectorThroat / 2, maxLength - arrowLength));\r\n        arr.push(new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(maxLength - arrowLength, connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2));\r\n        arr.push(new PointPool().instance.borrow(maxLength, 0));\r\n        arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2));\r\n        arr.push(new PointPool().instance.borrow(maxLength - arrowLength, -connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(connectorThroat / 2, -maxLength + arrowLength));\r\n        arr.push(new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength));\r\n        arr.push(new PointPool().instance.borrow(0, -maxLength));\r\n        arr.push(new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength));\r\n        arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -maxLength + arrowLength));\r\n        arr.push(new PointPool().instance.borrow(-connectorThroat / 2, -connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2));\r\n        arr.push(new PointPool().instance.borrow(-maxLength, 0));\r\n        arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2));\r\n        arr.push(new PointPool().instance.borrow(-maxLength + arrowLength, connectorThroat / 2));\r\n        arr.push(new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2));\r\n    }\r\n    drawIcon(ctx, points) {\r\n        if (this.cropperSettings.showCenterMarker) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\r\n            for (const p of points) {\r\n                ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\r\n            }\r\n            ctx.closePath();\r\n            ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\r\n            ctx.fill();\r\n            ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\r\n            ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    recalculatePosition(bounds) {\r\n        const c = bounds.getCentre();\r\n        this.setPosition(c.x, c.y);\r\n        new PointPool().instance.returnPoint(c);\r\n    }\r\n}\n\nclass ImageCropperModel {\r\n}\n\nclass ImageCropperDataShare {\r\n    constructor() {\r\n        this.share = {};\r\n    }\r\n    setPressed(canvas) {\r\n        this.pressed = canvas;\r\n    }\r\n    setReleased(canvas) {\r\n        if (canvas === this.pressed) {\r\n            //  this.pressed = undefined;\r\n        }\r\n    }\r\n    setOver(canvas) {\r\n        this.over = canvas;\r\n    }\r\n    setStyle(canvas, style) {\r\n        if (this.pressed !== undefined) {\r\n            if (this.pressed === canvas) {\r\n                // TODO: check this\r\n                // angular.element(document.documentElement).css('cursor', style);\r\n            }\r\n        }\r\n        else {\r\n            if (canvas === this.over) {\r\n                // TODO: check this\r\n                // angular.element(document.documentElement).css('cursor', style);\r\n            }\r\n        }\r\n    }\r\n}\n\nclass ImageCropper extends ImageCropperModel {\r\n    constructor(cropperSettings) {\r\n        super();\r\n        this.imageCropperDataShare = new ImageCropperDataShare();\r\n        const x = 0;\r\n        const y = 0;\r\n        const width = cropperSettings.width;\r\n        const height = cropperSettings.height;\r\n        const keepAspect = cropperSettings.keepAspect;\r\n        const touchRadius = cropperSettings.touchRadius;\r\n        const centerTouchRadius = cropperSettings.centerTouchRadius;\r\n        const minWidth = cropperSettings.minWidth;\r\n        const minHeight = cropperSettings.minHeight;\r\n        const croppedWidth = cropperSettings.croppedWidth;\r\n        const croppedHeight = cropperSettings.croppedHeight;\r\n        this.cropperSettings = cropperSettings;\r\n        this.crop = this;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.canvasHeight = cropperSettings.canvasHeight;\r\n        this.canvasWidth = cropperSettings.canvasWidth;\r\n        this.width = width;\r\n        if (width === void 0) {\r\n            this.width = 100;\r\n        }\r\n        this.height = height;\r\n        if (height === void 0) {\r\n            this.height = 50;\r\n        }\r\n        this.keepAspect = keepAspect;\r\n        if (keepAspect === void 0) {\r\n            this.keepAspect = true;\r\n        }\r\n        this.touchRadius = touchRadius;\r\n        if (touchRadius === void 0) {\r\n            this.touchRadius = 20;\r\n        }\r\n        this.minWidth = minWidth;\r\n        this.minHeight = minHeight;\r\n        this.aspectRatio = 0;\r\n        this.currentDragTouches = [];\r\n        this.isMouseDown = false;\r\n        this.ratioW = 1;\r\n        this.ratioH = 1;\r\n        this.fileType = cropperSettings.fileType;\r\n        this.imageSet = false;\r\n        this.pointPool = new PointPool(200);\r\n        this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n        this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n        this.bl = new CornerMarker(x, y + height, touchRadius, this.cropperSettings);\r\n        this.br = new CornerMarker(x + width, y + height, touchRadius, this.cropperSettings);\r\n        this.tl.addHorizontalNeighbour(this.tr);\r\n        this.tl.addVerticalNeighbour(this.bl);\r\n        this.tr.addHorizontalNeighbour(this.tl);\r\n        this.tr.addVerticalNeighbour(this.br);\r\n        this.bl.addHorizontalNeighbour(this.br);\r\n        this.bl.addVerticalNeighbour(this.tl);\r\n        this.br.addHorizontalNeighbour(this.bl);\r\n        this.br.addVerticalNeighbour(this.tr);\r\n        this.markers = [this.tl, this.tr, this.bl, this.br];\r\n        this.center = new DragMarker(x + width / 2, y + height / 2, centerTouchRadius, this.cropperSettings);\r\n        this.aspectRatio = height / width;\r\n        this.croppedImage = new Image();\r\n        this.currentlyInteracting = false;\r\n        this.cropWidth = croppedWidth;\r\n        this.cropHeight = croppedHeight;\r\n    }\r\n    sign(x) {\r\n        if (+x === x) {\r\n            return x === 0 ? x : x > 0 ? 1 : -1;\r\n        }\r\n        return NaN;\r\n    }\r\n    getMousePos(canvas, evt) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        return new PointPool().instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\r\n    }\r\n    getTouchPos(canvas, touch) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        return new PointPool().instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\r\n    }\r\n    detectVerticalSquash(img) {\r\n        const ih = img.height;\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = ih;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, 1, ih);\r\n        if (imageData) {\r\n            const data = imageData.data;\r\n            // search image edge pixel position in case it is squashed vertically.\r\n            let sy = 0;\r\n            let ey = ih;\r\n            let py = ih;\r\n            while (py > sy) {\r\n                const alpha = data[(py - 1) * 4 + 3];\r\n                if (alpha === 0) {\r\n                    ey = py;\r\n                }\r\n                else {\r\n                    sy = py;\r\n                }\r\n                // tslint:disable-next-line:no-bitwise\r\n                py = (ey + sy) >> 1;\r\n            }\r\n            const ratio = py / ih;\r\n            return ratio === 0 ? 1 : ratio;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    getDataUriMimeType(dataUri) {\r\n        // Get a substring because the regex does not perform well on very large strings.\r\n        // Cater for optional charset. Length 50 shoould be enough.\r\n        const dataUriSubstring = dataUri.substring(0, 50);\r\n        let mimeType = 'image/png';\r\n        // data-uri scheme\r\n        // data:[<media type>][;charset=<character set>][;base64],<data>\r\n        const regEx = RegExp(/^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi);\r\n        const matches = regEx.exec(dataUriSubstring);\r\n        if (matches && matches[2]) {\r\n            mimeType = matches[2];\r\n            if (mimeType === 'image/jpg') {\r\n                mimeType = 'image/jpeg';\r\n            }\r\n        }\r\n        return mimeType;\r\n    }\r\n    prepare(canvas) {\r\n        this.buffer = document.createElement('canvas');\r\n        this.cropCanvas = document.createElement('canvas');\r\n        // todo get more reliable parent width value.\r\n        const responsiveWidth = canvas.parentElement\r\n            ? canvas.parentElement.clientWidth\r\n            : 0;\r\n        if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n            this.cropCanvas.width = responsiveWidth;\r\n            this.buffer.width = responsiveWidth;\r\n            canvas.width = responsiveWidth;\r\n        }\r\n        else {\r\n            this.cropCanvas.width = this.cropWidth;\r\n            this.buffer.width = canvas.width;\r\n        }\r\n        this.cropCanvas.height = this.cropHeight;\r\n        this.buffer.height = canvas.height;\r\n        this.canvas = canvas;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.draw(this.ctx);\r\n    }\r\n    updateSettings(cropperSettings) {\r\n        this.cropperSettings = cropperSettings;\r\n    }\r\n    resizeCanvas(width, height, setImage = false) {\r\n        this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n        this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n        if (setImage) {\r\n            this.setImage(this.srcImage);\r\n        }\r\n    }\r\n    reset() {\r\n        this.setImage(undefined);\r\n    }\r\n    draw(ctx) {\r\n        const bounds = this.getBounds();\r\n        if (this.srcImage) {\r\n            ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n            const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n            const canvasAspect = this.canvasHeight / this.canvasWidth;\r\n            let w = this.canvasWidth;\r\n            let h = this.canvasHeight;\r\n            if (canvasAspect > sourceAspect) {\r\n                w = this.canvasWidth;\r\n                h = this.canvasWidth * sourceAspect;\r\n            }\r\n            else {\r\n                h = this.canvasHeight;\r\n                w = this.canvasHeight / sourceAspect;\r\n            }\r\n            this.ratioW = w / this.srcImage.width;\r\n            this.ratioH = h / this.srcImage.height;\r\n            if (canvasAspect < sourceAspect) {\r\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\r\n            }\r\n            else {\r\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\r\n            }\r\n            this.buffer.getContext('2d').drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n            ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n            ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\r\n            ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\r\n            if (!this.cropperSettings.rounded) {\r\n                ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n                ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.width, 1), Math.max(bounds.height, 1), bounds.left, bounds.top, bounds.width, bounds.height);\r\n                ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n            }\r\n            else {\r\n                ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.save();\r\n                ctx.beginPath();\r\n                ctx.arc(bounds.left + bounds.width / 2, bounds.top + bounds.height / 2, bounds.width / 2, 0, 2 * Math.PI);\r\n                ctx.stroke();\r\n                ctx.clip();\r\n                if (canvasAspect < sourceAspect) {\r\n                    this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, this.buffer.width / 2 - w / 2, 0, w, h);\r\n                }\r\n                else {\r\n                    this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0, this.buffer.height / 2 - h / 2, w, h);\r\n                }\r\n                ctx.restore();\r\n            }\r\n            let marker;\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                marker = this.markers[i];\r\n                marker.draw(ctx);\r\n            }\r\n            this.center.draw(ctx);\r\n        }\r\n        else {\r\n            ctx.fillStyle = 'rgba(192,192,192,1)';\r\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n    }\r\n    dragCenter(x, y, marker) {\r\n        const bounds = this.getBounds();\r\n        const left = x - bounds.width / 2;\r\n        const right = x + bounds.width / 2;\r\n        const top = y - bounds.height / 2;\r\n        const bottom = y + bounds.height / 2;\r\n        if (right >= this.maxXClamp) {\r\n            x = this.maxXClamp - bounds.width / 2;\r\n        }\r\n        if (left <= this.minXClamp) {\r\n            x = bounds.width / 2 + this.minXClamp;\r\n        }\r\n        if (top < this.minYClamp) {\r\n            y = bounds.height / 2 + this.minYClamp;\r\n        }\r\n        if (bottom >= this.maxYClamp) {\r\n            y = this.maxYClamp - bounds.height / 2;\r\n        }\r\n        this.tl.moveX(x - bounds.width / 2);\r\n        this.tl.moveY(y - bounds.height / 2);\r\n        this.tr.moveX(x + bounds.width / 2);\r\n        this.tr.moveY(y - bounds.height / 2);\r\n        this.bl.moveX(x - bounds.width / 2);\r\n        this.bl.moveY(y + bounds.height / 2);\r\n        this.br.moveX(x + bounds.width / 2);\r\n        this.br.moveY(y + bounds.height / 2);\r\n        marker.setPosition(x, y);\r\n    }\r\n    enforceMinSize(x, y, marker) {\r\n        const xLength = x - marker.getHorizontalNeighbour().position.x;\r\n        const yLength = y - marker.getVerticalNeighbour().position.y;\r\n        const xOver = this.minWidth - Math.abs(xLength);\r\n        const yOver = this.minHeight - Math.abs(yLength);\r\n        if (xLength === 0 || yLength === 0) {\r\n            x = marker.position.x;\r\n            y = marker.position.y;\r\n            return new PointPool().instance.borrow(x, y);\r\n        }\r\n        if (this.keepAspect) {\r\n            if (xOver > 0 && yOver / this.aspectRatio > 0) {\r\n                if (xOver > yOver / this.aspectRatio) {\r\n                    if (xLength < 0) {\r\n                        x -= xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                    else {\r\n                        x += xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (yLength < 0) {\r\n                        y -= yOver;\r\n                        if (xLength < 0) {\r\n                            x -= yOver / this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            x += yOver / this.aspectRatio;\r\n                        }\r\n                    }\r\n                    else {\r\n                        y += yOver;\r\n                        if (xLength < 0) {\r\n                            x -= yOver / this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            x += yOver / this.aspectRatio;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (xOver > 0) {\r\n                    if (xLength < 0) {\r\n                        x -= xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                    else {\r\n                        x += xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        }\r\n                        else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (yOver > 0) {\r\n                        if (yLength < 0) {\r\n                            y -= yOver;\r\n                            if (xLength < 0) {\r\n                                x -= yOver / this.aspectRatio;\r\n                            }\r\n                            else {\r\n                                x += yOver / this.aspectRatio;\r\n                            }\r\n                        }\r\n                        else {\r\n                            y += yOver;\r\n                            if (xLength < 0) {\r\n                                x -= yOver / this.aspectRatio;\r\n                            }\r\n                            else {\r\n                                x += yOver / this.aspectRatio;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (xOver > 0) {\r\n                if (xLength < 0) {\r\n                    x -= xOver;\r\n                }\r\n                else {\r\n                    x += xOver;\r\n                }\r\n            }\r\n            if (yOver > 0) {\r\n                if (yLength < 0) {\r\n                    y -= yOver;\r\n                }\r\n                else {\r\n                    y += yOver;\r\n                }\r\n            }\r\n        }\r\n        if (x < this.minXClamp ||\r\n            x > this.maxXClamp ||\r\n            y < this.minYClamp ||\r\n            y > this.maxYClamp) {\r\n            x = marker.position.x;\r\n            y = marker.position.y;\r\n        }\r\n        return new PointPool().instance.borrow(x, y);\r\n    }\r\n    dragCorner(x, y, marker) {\r\n        let iX = 0;\r\n        let iY = 0;\r\n        let ax = 0;\r\n        let ay = 0;\r\n        let newHeight = 0;\r\n        let newWidth = 0;\r\n        let newY = 0;\r\n        let newX = 0;\r\n        let anchorMarker;\r\n        let fold = 0;\r\n        if (this.keepAspect) {\r\n            anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n            ax = anchorMarker.position.x;\r\n            ay = anchorMarker.position.y;\r\n            if (x <= anchorMarker.position.x) {\r\n                if (y <= anchorMarker.position.y) {\r\n                    iX = ax - 100 / this.aspectRatio;\r\n                    iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n                    fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\r\n                    if (fold > 0) {\r\n                        newHeight = Math.abs(anchorMarker.position.y - y);\r\n                        newWidth = newHeight / this.aspectRatio;\r\n                        newY = anchorMarker.position.y - newHeight;\r\n                        newX = anchorMarker.position.x - newWidth;\r\n                        const min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        new PointPool().instance.returnPoint(min);\r\n                    }\r\n                    else {\r\n                        if (fold < 0) {\r\n                            newWidth = Math.abs(anchorMarker.position.x - x);\r\n                            newHeight = newWidth * this.aspectRatio;\r\n                            newY = anchorMarker.position.y - newHeight;\r\n                            newX = anchorMarker.position.x - newWidth;\r\n                            const min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            new PointPool().instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    iX = ax - 100 / this.aspectRatio;\r\n                    iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n                    fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\r\n                    if (fold > 0) {\r\n                        newWidth = Math.abs(anchorMarker.position.x - x);\r\n                        newHeight = newWidth * this.aspectRatio;\r\n                        newY = anchorMarker.position.y + newHeight;\r\n                        newX = anchorMarker.position.x - newWidth;\r\n                        const min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        new PointPool().instance.returnPoint(min);\r\n                    }\r\n                    else {\r\n                        if (fold < 0) {\r\n                            newHeight = Math.abs(anchorMarker.position.y - y);\r\n                            newWidth = newHeight / this.aspectRatio;\r\n                            newY = anchorMarker.position.y + newHeight;\r\n                            newX = anchorMarker.position.x - newWidth;\r\n                            const min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            new PointPool().instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (y <= anchorMarker.position.y) {\r\n                    iX = ax + 100 / this.aspectRatio;\r\n                    iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n                    fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\r\n                    if (fold < 0) {\r\n                        newHeight = Math.abs(anchorMarker.position.y - y);\r\n                        newWidth = newHeight / this.aspectRatio;\r\n                        newY = anchorMarker.position.y - newHeight;\r\n                        newX = anchorMarker.position.x + newWidth;\r\n                        const min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        new PointPool().instance.returnPoint(min);\r\n                    }\r\n                    else {\r\n                        if (fold > 0) {\r\n                            newWidth = Math.abs(anchorMarker.position.x - x);\r\n                            newHeight = newWidth * this.aspectRatio;\r\n                            newY = anchorMarker.position.y - newHeight;\r\n                            newX = anchorMarker.position.x + newWidth;\r\n                            const min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            new PointPool().instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    iX = ax + 100 / this.aspectRatio;\r\n                    iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n                    fold = this.getSide(new PointPool().instance.borrow(iX, iY), anchorMarker.position, new PointPool().instance.borrow(x, y));\r\n                    if (fold < 0) {\r\n                        newWidth = Math.abs(anchorMarker.position.x - x);\r\n                        newHeight = newWidth * this.aspectRatio;\r\n                        newY = anchorMarker.position.y + newHeight;\r\n                        newX = anchorMarker.position.x + newWidth;\r\n                        const min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        new PointPool().instance.returnPoint(min);\r\n                    }\r\n                    else {\r\n                        if (fold > 0) {\r\n                            newHeight = Math.abs(anchorMarker.position.y - y);\r\n                            newWidth = newHeight / this.aspectRatio;\r\n                            newY = anchorMarker.position.y + newHeight;\r\n                            newX = anchorMarker.position.x + newWidth;\r\n                            const min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            new PointPool().instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const min = this.enforceMinSize(x, y, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n        }\r\n        this.center.recalculatePosition(this.getBounds());\r\n    }\r\n    getSide(a, b, c) {\r\n        const n = this.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\r\n        // TODO move the return of the pools to outside of this function\r\n        new PointPool().instance.returnPoint(a);\r\n        new PointPool().instance.returnPoint(c);\r\n        return n;\r\n    }\r\n    handleRelease(newCropTouch) {\r\n        if (newCropTouch == null) {\r\n            return;\r\n        }\r\n        let index = 0;\r\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n            if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n                this.currentDragTouches[k].dragHandle.setDrag(false);\r\n                index = k;\r\n            }\r\n        }\r\n        this.currentDragTouches.splice(index, 1);\r\n        this.draw(this.ctx);\r\n    }\r\n    handleMove(newCropTouch) {\r\n        let matched = false;\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n            if (newCropTouch.id === this.currentDragTouches[k].id &&\r\n                this.currentDragTouches[k].dragHandle != null) {\r\n                const dragTouch = this.currentDragTouches[k];\r\n                const clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x, newCropTouch.y - dragTouch.dragHandle.offset.y);\r\n                newCropTouch.x = clampedPositions.x;\r\n                newCropTouch.y = clampedPositions.y;\r\n                new PointPool().instance.returnPoint(clampedPositions);\r\n                if (dragTouch.dragHandle instanceof CornerMarker) {\r\n                    this.dragCorner(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\r\n                }\r\n                else {\r\n                    this.dragCenter(newCropTouch.x, newCropTouch.y, dragTouch.dragHandle);\r\n                }\r\n                this.currentlyInteracting = true;\r\n                matched = true;\r\n                this.imageCropperDataShare.setPressed(this.canvas);\r\n                break;\r\n            }\r\n        }\r\n        if (!matched) {\r\n            for (const marker of this.markers) {\r\n                if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n                    newCropTouch.dragHandle = marker;\r\n                    this.currentDragTouches.push(newCropTouch);\r\n                    marker.setDrag(true);\r\n                    newCropTouch.dragHandle.offset.x =\r\n                        newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n                    newCropTouch.dragHandle.offset.y =\r\n                        newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n                    this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\r\n                    break;\r\n                }\r\n            }\r\n            if (newCropTouch.dragHandle === null ||\r\n                typeof newCropTouch.dragHandle === 'undefined') {\r\n                if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n                    newCropTouch.dragHandle = this.center;\r\n                    this.currentDragTouches.push(newCropTouch);\r\n                    newCropTouch.dragHandle.setDrag(true);\r\n                    newCropTouch.dragHandle.offset.x =\r\n                        newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n                    newCropTouch.dragHandle.offset.y =\r\n                        newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n                    this.dragCenter(newCropTouch.x - newCropTouch.dragHandle.offset.x, newCropTouch.y - newCropTouch.dragHandle.offset.y, newCropTouch.dragHandle);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateClampBounds() {\r\n        const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n        const canvasAspect = this.canvas.height / this.canvas.width;\r\n        let w = this.canvas.width;\r\n        let h = this.canvas.height;\r\n        if (canvasAspect > sourceAspect) {\r\n            w = this.canvas.width;\r\n            h = this.canvas.width * sourceAspect;\r\n        }\r\n        else {\r\n            h = this.canvas.height;\r\n            w = this.canvas.height / sourceAspect;\r\n        }\r\n        this.minXClamp = this.canvas.width / 2 - w / 2;\r\n        this.minYClamp = this.canvas.height / 2 - h / 2;\r\n        this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n        this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n    }\r\n    getCropBounds() {\r\n        const bounds = this.getBounds();\r\n        bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\r\n        bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\r\n        bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n        bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n        return bounds;\r\n    }\r\n    clampPosition(x, y) {\r\n        if (x < this.minXClamp) {\r\n            x = this.minXClamp;\r\n        }\r\n        if (x > this.maxXClamp) {\r\n            x = this.maxXClamp;\r\n        }\r\n        if (y < this.minYClamp) {\r\n            y = this.minYClamp;\r\n        }\r\n        if (y > this.maxYClamp) {\r\n            y = this.maxYClamp;\r\n        }\r\n        return new PointPool().instance.borrow(x, y);\r\n    }\r\n    isImageSet() {\r\n        return this.imageSet;\r\n    }\r\n    setImage(img) {\r\n        this.srcImage = img;\r\n        if (!img) {\r\n            this.imageSet = false;\r\n            this.draw(this.ctx);\r\n        }\r\n        else {\r\n            this.imageSet = true;\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            const bufferContext = this.buffer.getContext('2d');\r\n            bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n            if (!this.cropperSettings.fileType) {\r\n                this.fileType = this.getDataUriMimeType(img.src);\r\n            }\r\n            if (this.cropperSettings.minWithRelativeToResolution) {\r\n                this.minWidth =\r\n                    (this.canvas.width * this.cropperSettings.minWidth) /\r\n                        this.srcImage.width;\r\n                this.minHeight =\r\n                    (this.canvas.height * this.cropperSettings.minHeight) /\r\n                        this.srcImage.height;\r\n            }\r\n            this.updateClampBounds();\r\n            this.canvasWidth = this.canvas.width;\r\n            this.canvasHeight = this.canvas.height;\r\n            const cropPosition = this.getCropPositionFromMarkers();\r\n            this.setCropPosition(cropPosition);\r\n        }\r\n    }\r\n    updateCropPosition(cropBounds) {\r\n        const cropPosition = this.getCropPositionFromBounds(cropBounds);\r\n        this.setCropPosition(cropPosition);\r\n    }\r\n    setCropPosition(cropPosition) {\r\n        this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n        this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n        this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n        this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n        this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n        for (const position of cropPosition) {\r\n            new PointPool().instance.returnPoint(position);\r\n        }\r\n        this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\r\n        this.draw(this.ctx);\r\n        this.croppedImage = this.getCroppedImageHelper(false, this.cropWidth, this.cropHeight);\r\n    }\r\n    getCropPositionFromMarkers() {\r\n        const w = this.canvas.width;\r\n        const h = this.canvas.height;\r\n        let tlPos;\r\n        let trPos;\r\n        let blPos;\r\n        let brPos;\r\n        let center;\r\n        const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n        const cropBounds = this.getBounds();\r\n        const cropAspect = cropBounds.height / cropBounds.width;\r\n        const cX = this.canvas.width / 2;\r\n        const cY = this.canvas.height / 2;\r\n        if (cropAspect > sourceAspect) {\r\n            const imageH = Math.min(w * sourceAspect, h);\r\n            const cropW = imageH / cropAspect;\r\n            tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n            trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n            blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n            brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n        }\r\n        else {\r\n            const imageW = Math.min(h / sourceAspect, w);\r\n            const cropH = imageW * cropAspect;\r\n            tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n            trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n            blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n            brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n        }\r\n        center = new PointPool().instance.borrow(cX, cY);\r\n        const positions = [tlPos, trPos, blPos, brPos, center];\r\n        return positions;\r\n    }\r\n    getCropPositionFromBounds(cropPosition) {\r\n        let marginTop = 0;\r\n        let marginLeft = 0;\r\n        const canvasAspect = this.canvasHeight / this.canvasWidth;\r\n        const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n        if (canvasAspect > sourceAspect) {\r\n            marginTop =\r\n                this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n        }\r\n        else {\r\n            marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\r\n        }\r\n        const ratioW = (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n        const ratioH = (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n        let actualH = cropPosition.height * ratioH;\r\n        let actualW = cropPosition.width * ratioW;\r\n        const actualX = cropPosition.left * ratioW + marginLeft;\r\n        const actualY = cropPosition.top * ratioH + marginTop;\r\n        if (this.keepAspect) {\r\n            const scaledW = actualH / this.aspectRatio;\r\n            const scaledH = actualW * this.aspectRatio;\r\n            if (this.getCropBounds().height === cropPosition.height) {\r\n                // only width changed\r\n                actualH = scaledH;\r\n            }\r\n            else if (this.getCropBounds().width === cropPosition.width) {\r\n                // only height changed\r\n                actualW = scaledW;\r\n            }\r\n            else {\r\n                // height and width changed\r\n                if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n                    actualW = scaledW;\r\n                }\r\n                else {\r\n                    actualH = scaledH;\r\n                }\r\n            }\r\n        }\r\n        const tlPos = new PointPool().instance.borrow(actualX, actualY + actualH);\r\n        const trPos = new PointPool().instance.borrow(actualX + actualW, actualY + actualH);\r\n        const blPos = new PointPool().instance.borrow(actualX, actualY);\r\n        const brPos = new PointPool().instance.borrow(actualX + actualW, actualY);\r\n        const center = new PointPool().instance.borrow(actualX + actualW / 2, actualY + actualH / 2);\r\n        const positions = [tlPos, trPos, blPos, brPos, center];\r\n        return positions;\r\n    }\r\n    getCroppedImageHelper(preserveSize, fillWidth, fillHeight) {\r\n        if (this.cropperSettings.cropOnResize) {\r\n            return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n        }\r\n        return this.croppedImage\r\n            ? this.croppedImage\r\n            : document.createElement('img');\r\n    }\r\n    // todo: Unused parameters?\r\n    getCroppedImage(preserveSize, fillWidth, fillHeight) {\r\n        const bounds = this.getBounds();\r\n        if (!this.srcImage) {\r\n            return document.createElement('img');\r\n        }\r\n        else {\r\n            const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n            const canvasAspect = this.canvas.height / this.canvas.width;\r\n            let w = this.canvas.width;\r\n            let h = this.canvas.height;\r\n            if (canvasAspect > sourceAspect) {\r\n                w = this.canvas.width;\r\n                h = this.canvas.width * sourceAspect;\r\n            }\r\n            else {\r\n                if (canvasAspect < sourceAspect) {\r\n                    h = this.canvas.height;\r\n                    w = this.canvas.height / sourceAspect;\r\n                }\r\n                else {\r\n                    h = this.canvas.height;\r\n                    w = this.canvas.width;\r\n                }\r\n            }\r\n            this.ratioW = w / this.srcImage.width;\r\n            this.ratioH = h / this.srcImage.height;\r\n            const offsetH = (this.buffer.height - h) / 2 / this.ratioH;\r\n            const offsetW = (this.buffer.width - w) / 2 / this.ratioW;\r\n            const ctx = this.cropCanvas.getContext('2d');\r\n            if (this.cropperSettings.preserveSize || preserveSize) {\r\n                const width = Math.round(bounds.right / this.ratioW - bounds.left / this.ratioW);\r\n                const height = Math.round(bounds.bottom / this.ratioH - bounds.top / this.ratioH);\r\n                this.cropCanvas.width = width;\r\n                this.cropCanvas.height = height;\r\n                this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n                this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n            }\r\n            else {\r\n                this.cropCanvas.width = this.cropWidth;\r\n                this.cropCanvas.height = this.cropHeight;\r\n            }\r\n            ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n            this.drawImageIOSFix(ctx, this.srcImage, Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0), Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0), Math.max(Math.round(bounds.width / this.ratioW), 1), Math.max(Math.round(bounds.height / this.ratioH), 1), 0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n            if (this.cropperSettings.resampleFn) {\r\n                this.cropperSettings.resampleFn(this.cropCanvas);\r\n            }\r\n            this.croppedImage.width = this.cropCanvas.width;\r\n            this.croppedImage.height = this.cropCanvas.height;\r\n            this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType, this.cropperSettings.compressRatio);\r\n            return this.croppedImage;\r\n        }\r\n    }\r\n    getBounds() {\r\n        let minX = Number.MAX_VALUE;\r\n        let minY = Number.MAX_VALUE;\r\n        let maxX = -Number.MAX_VALUE;\r\n        let maxY = -Number.MAX_VALUE;\r\n        for (const marker of this.markers) {\r\n            if (marker.position.x < minX) {\r\n                minX = marker.position.x;\r\n            }\r\n            if (marker.position.x > maxX) {\r\n                maxX = marker.position.x;\r\n            }\r\n            if (marker.position.y < minY) {\r\n                minY = marker.position.y;\r\n            }\r\n            if (marker.position.y > maxY) {\r\n                maxY = marker.position.y;\r\n            }\r\n        }\r\n        const bounds = new Bounds();\r\n        bounds.left = minX;\r\n        bounds.right = maxX;\r\n        bounds.top = minY;\r\n        bounds.bottom = maxY;\r\n        return bounds;\r\n    }\r\n    setBounds(bounds) {\r\n        // const topLeft: CornerMarker;\r\n        // const topRight: CornerMarker;\r\n        // const bottomLeft: CornerMarker;\r\n        // const bottomRight: CornerMarker;\r\n        const currentBounds = this.getBounds();\r\n        for (const marker of this.markers) {\r\n            if (marker.position.x === currentBounds.left) {\r\n                if (marker.position.y === currentBounds.top) {\r\n                    marker.setPosition(bounds.left, bounds.top);\r\n                }\r\n                else {\r\n                    marker.setPosition(bounds.left, bounds.bottom);\r\n                }\r\n            }\r\n            else {\r\n                if (marker.position.y === currentBounds.top) {\r\n                    marker.setPosition(bounds.right, bounds.top);\r\n                }\r\n                else {\r\n                    marker.setPosition(bounds.right, bounds.bottom);\r\n                }\r\n            }\r\n        }\r\n        this.center.recalculatePosition(bounds);\r\n        this.center.draw(this.ctx);\r\n        this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n    }\r\n    onTouchMove(event) {\r\n        if (this.crop.isImageSet()) {\r\n            if (event.touches.length === 1) {\r\n                if (this.isMouseDown) {\r\n                    event.preventDefault();\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < event.touches.length; i++) {\r\n                        const touch = event.touches[i];\r\n                        const touchPosition = this.getTouchPos(this.canvas, touch);\r\n                        const cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\r\n                        new PointPool().instance.returnPoint(touchPosition);\r\n                        this.move(cropTouch);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (event.touches.length === 2) {\r\n                    event.preventDefault();\r\n                    const distance = (event.touches[0].clientX - event.touches[1].clientX) *\r\n                        (event.touches[0].clientX - event.touches[1].clientX) +\r\n                        (event.touches[0].clientY - event.touches[1].clientY) *\r\n                            (event.touches[0].clientY - event.touches[1].clientY);\r\n                    if (this.previousDistance && this.previousDistance !== distance) {\r\n                        const bounds = this.getBounds();\r\n                        if (distance < this.previousDistance) {\r\n                            bounds.top += 1;\r\n                            bounds.left += 1;\r\n                            bounds.right -= 1;\r\n                            bounds.bottom -= 1;\r\n                        }\r\n                        if (distance > this.previousDistance) {\r\n                            if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // none\r\n                                bounds.top -= 1;\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                                bounds.bottom += 1;\r\n                            }\r\n                            else if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left === this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // left\r\n                                bounds.top -= 1;\r\n                                bounds.right += 2;\r\n                                bounds.bottom += 1;\r\n                            }\r\n                            else if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right === this.maxXClamp) {\r\n                                // right\r\n                                bounds.top -= 1;\r\n                                bounds.left -= 2;\r\n                                bounds.bottom += 1;\r\n                            }\r\n                            else if (bounds.top === this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // top\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                                bounds.bottom += 2;\r\n                            }\r\n                            else if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom === this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // bottom\r\n                                bounds.top -= 2;\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                            }\r\n                            else if (bounds.top === this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left === this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // top left\r\n                                bounds.right += 2;\r\n                                bounds.bottom += 2;\r\n                            }\r\n                            else if (bounds.top === this.minYClamp &&\r\n                                bounds.bottom !== this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right === this.maxXClamp) {\r\n                                // top right\r\n                                bounds.left -= 2;\r\n                                bounds.bottom += 2;\r\n                            }\r\n                            else if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom === this.maxYClamp &&\r\n                                bounds.left === this.minXClamp &&\r\n                                bounds.right !== this.maxXClamp) {\r\n                                // bottom left\r\n                                bounds.top -= 2;\r\n                                bounds.right += 2;\r\n                            }\r\n                            else if (bounds.top !== this.minYClamp &&\r\n                                bounds.bottom === this.maxYClamp &&\r\n                                bounds.left !== this.minXClamp &&\r\n                                bounds.right === this.maxXClamp) {\r\n                                // bottom right\r\n                                bounds.top -= 2;\r\n                                bounds.left -= 2;\r\n                            }\r\n                        }\r\n                        if (bounds.top < this.minYClamp) {\r\n                            bounds.top = this.minYClamp;\r\n                        }\r\n                        if (bounds.bottom > this.maxYClamp) {\r\n                            bounds.bottom = this.maxYClamp;\r\n                        }\r\n                        if (bounds.left < this.minXClamp) {\r\n                            bounds.left = this.minXClamp;\r\n                        }\r\n                        if (bounds.right > this.maxXClamp) {\r\n                            bounds.right = this.maxXClamp;\r\n                        }\r\n                        this.setBounds(bounds);\r\n                    }\r\n                    this.previousDistance = distance;\r\n                }\r\n            }\r\n            this.draw(this.ctx);\r\n        }\r\n    }\r\n    onMouseMove(e) {\r\n        if (this.crop.isImageSet() && this.isMouseDown) {\r\n            const mousePosition = this.getMousePos(this.canvas, e);\r\n            this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n            let dragTouch = this.getDragTouchForID(0);\r\n            if (dragTouch) {\r\n                dragTouch.x = mousePosition.x;\r\n                dragTouch.y = mousePosition.y;\r\n            }\r\n            else {\r\n                dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n            }\r\n            new PointPool().instance.returnPoint(mousePosition);\r\n            this.drawCursors(dragTouch);\r\n            this.draw(this.ctx);\r\n        }\r\n    }\r\n    move(cropTouch) {\r\n        if (this.isMouseDown) {\r\n            this.handleMove(cropTouch);\r\n        }\r\n    }\r\n    getDragTouchForID(id) {\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n            if (id === this.currentDragTouches[i].id) {\r\n                return this.currentDragTouches[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    drawCursors(cropTouch) {\r\n        let cursorDrawn = false;\r\n        if (cropTouch != null) {\r\n            if (cropTouch.dragHandle === this.center) {\r\n                this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n                cursorDrawn = true;\r\n            }\r\n            if (cropTouch.dragHandle !== null &&\r\n                cropTouch.dragHandle instanceof CornerMarker) {\r\n                this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.position.x, cropTouch.dragHandle.position.y);\r\n                cursorDrawn = true;\r\n            }\r\n        }\r\n        let didDraw = false;\r\n        if (!cursorDrawn) {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                didDraw =\r\n                    didDraw ||\r\n                        this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n            }\r\n            if (!didDraw) {\r\n                this.imageCropperDataShare.setStyle(this.canvas, 'initial');\r\n            }\r\n        }\r\n        if (!didDraw &&\r\n            !cursorDrawn &&\r\n            this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n            this.center.setOver(true);\r\n            this.imageCropperDataShare.setOver(this.canvas);\r\n            this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n        }\r\n        else {\r\n            this.center.setOver(false);\r\n        }\r\n    }\r\n    drawCornerCursor(marker, x, y) {\r\n        if (marker.touchInBounds(x, y)) {\r\n            marker.setOver(true);\r\n            if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n                    this.imageCropperDataShare.setOver(this.canvas);\r\n                    this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n                }\r\n                else {\r\n                    this.imageCropperDataShare.setOver(this.canvas);\r\n                    this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n                }\r\n            }\r\n            else {\r\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n                    this.imageCropperDataShare.setOver(this.canvas);\r\n                    this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n                }\r\n                else {\r\n                    this.imageCropperDataShare.setOver(this.canvas);\r\n                    this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        marker.setOver(false);\r\n        return false;\r\n    }\r\n    onTouchStart(event) {\r\n        if (this.crop.isImageSet()) {\r\n            const touch = event.touches[0];\r\n            const touchPosition = this.getTouchPos(this.canvas, touch);\r\n            const cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\r\n            new PointPool().instance.returnPoint(touchPosition);\r\n            this.isMouseDown = false;\r\n            for (const marker of this.markers) {\r\n                if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n                    this.isMouseDown = true;\r\n                }\r\n            }\r\n            if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n                this.isMouseDown = true;\r\n            }\r\n        }\r\n    }\r\n    onTouchEnd(event) {\r\n        if (this.crop.isImageSet()) {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < event.changedTouches.length; i++) {\r\n                const touch = event.changedTouches[i];\r\n                const dragTouch = this.getDragTouchForID(touch.identifier);\r\n                if (dragTouch && dragTouch !== undefined) {\r\n                    if (dragTouch.dragHandle instanceof CornerMarker ||\r\n                        dragTouch.dragHandle instanceof DragMarker) {\r\n                        dragTouch.dragHandle.setOver(false);\r\n                    }\r\n                    this.handleRelease(dragTouch);\r\n                }\r\n            }\r\n            if (this.currentDragTouches.length === 0) {\r\n                this.isMouseDown = false;\r\n                this.currentlyInteracting = false;\r\n            }\r\n        }\r\n    }\r\n    // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n    drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n        // Works only if whole image is displayed:\r\n        // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n        // The following works correct also when only a part of the image is displayed:\r\n        // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n        // this.vertSquashRatio, dx, dy, dw, dh);\r\n        ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n    }\r\n    onMouseDown(event) {\r\n        if (this.crop.isImageSet()) {\r\n            this.isMouseDown = true;\r\n        }\r\n    }\r\n    onMouseUp(event) {\r\n        if (this.crop.isImageSet()) {\r\n            this.imageCropperDataShare.setReleased(this.canvas);\r\n            this.isMouseDown = false;\r\n            this.handleRelease(new CropTouch(0, 0, 0));\r\n        }\r\n    }\r\n}\n\nclass CropPosition {\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.x = +x;\r\n        this.y = +y;\r\n        this.w = +w;\r\n        this.h = +h;\r\n    }\r\n    toBounds() {\r\n        return new Bounds(this.x, this.y, this.w, this.h);\r\n    }\r\n    isInitialized() {\r\n        return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\r\n    }\r\n}\n\nclass ImageCropperComponent {\r\n    constructor(renderer, document) {\r\n        this.document = document;\r\n        this.cropPositionChange = new EventEmitter();\r\n        this.exif = new Exif();\r\n        // tslint:disable-next-line:no-output-on-prefix\r\n        this.onCrop = new EventEmitter();\r\n        this.imageSet = new EventEmitter();\r\n        this.dragUnsubscribers = [];\r\n        this.renderer = renderer;\r\n    }\r\n    ngAfterViewInit() {\r\n        const canvas = this.cropcanvas.nativeElement;\r\n        if (!this.settings) {\r\n            this.settings = new CropperSettings();\r\n        }\r\n        if (this.settings.cropperClass) {\r\n            this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n        }\r\n        if (!this.settings.dynamicSizing) {\r\n            this.renderer.setAttribute(canvas, 'width', this.settings.canvasWidth.toString());\r\n            this.renderer.setAttribute(canvas, 'height', this.settings.canvasHeight.toString());\r\n        }\r\n        else {\r\n            this.windowListener = this.resize.bind(this);\r\n            window.addEventListener('resize', this.windowListener);\r\n        }\r\n        if (!this.cropper) {\r\n            this.cropper = new ImageCropper(this.settings);\r\n        }\r\n        this.cropper.prepare(canvas);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.isCropPositionChanged(changes)) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n            if (this.cropper.isImageSet()) {\r\n                const bounds = this.cropper.getCropBounds();\r\n                this.image.image = this.cropper.getCroppedImageHelper().src;\r\n                this.onCrop.emit(bounds);\r\n            }\r\n            this.updateCropBounds();\r\n        }\r\n        if (changes.inputImage) {\r\n            this.setImage(changes.inputImage.currentValue);\r\n        }\r\n        if (changes.settings && this.cropper) {\r\n            this.cropper.updateSettings(this.settings);\r\n            if (this.cropper.isImageSet()) {\r\n                this.image.image = this.cropper.getCroppedImageHelper().src;\r\n                this.onCrop.emit(this.cropper.getCropBounds());\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.removeDragListeners();\r\n        if (this.settings.dynamicSizing && this.windowListener) {\r\n            window.removeEventListener('resize', this.windowListener);\r\n        }\r\n    }\r\n    onTouchMove(event) {\r\n        this.cropper.onTouchMove(event);\r\n    }\r\n    onTouchStart(event) {\r\n        this.cropper.onTouchStart(event);\r\n    }\r\n    onTouchEnd(event) {\r\n        this.cropper.onTouchEnd(event);\r\n        if (this.cropper.isImageSet()) {\r\n            this.image.image = this.cropper.getCroppedImageHelper().src;\r\n            this.onCrop.emit(this.cropper.getCropBounds());\r\n            this.updateCropBounds();\r\n        }\r\n    }\r\n    onMouseDown(event) {\r\n        this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\r\n        this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\r\n        this.cropper.onMouseDown(event);\r\n        // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\r\n        //   // load img\r\n        //   this.fileInput.nativeElement.click();\r\n        // }\r\n    }\r\n    removeDragListeners() {\r\n        this.dragUnsubscribers.forEach(unsubscribe => unsubscribe());\r\n    }\r\n    onMouseUp(event) {\r\n        this.removeDragListeners();\r\n        if (this.cropper.isImageSet()) {\r\n            this.cropper.onMouseUp(event);\r\n            this.image.image = this.cropper.getCroppedImageHelper().src;\r\n            this.onCrop.emit(this.cropper.getCropBounds());\r\n            this.updateCropBounds();\r\n        }\r\n    }\r\n    onMouseMove(event) {\r\n        this.cropper.onMouseMove(event);\r\n    }\r\n    fileChangeListener($event) {\r\n        if ($event.target.files.length === 0) {\r\n            return;\r\n        }\r\n        const file = $event.target.files[0];\r\n        if (this.settings.allowedFilesRegex.test(file.name)) {\r\n            const image = new Image();\r\n            const fileReader = new FileReader();\r\n            fileReader.addEventListener('loadend', (loadEvent) => {\r\n                image.addEventListener('load', () => {\r\n                    this.setImage(image);\r\n                });\r\n                image.src = loadEvent.target.result;\r\n            });\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n    }\r\n    resize() {\r\n        const canvas = this.cropcanvas.nativeElement;\r\n        this.settings.canvasWidth = canvas.offsetWidth;\r\n        this.settings.canvasHeight = canvas.offsetHeight;\r\n        this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n    }\r\n    reset() {\r\n        this.cropper.reset();\r\n        this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', this.settings.cropperClass);\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n    }\r\n    setImage(image, newBounds = null) {\r\n        this.imageSet.emit(true);\r\n        this.renderer.setAttribute(this.cropcanvas.nativeElement, 'class', `${this.settings.cropperClass} ${this.settings.croppingClass}`);\r\n        this.raf = window.requestAnimationFrame(() => {\r\n            if (this.raf) {\r\n                window.cancelAnimationFrame(this.raf);\r\n            }\r\n            if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n                image.height = image.naturalHeight;\r\n                image.width = image.naturalWidth;\r\n                window.cancelAnimationFrame(this.raf);\r\n                this.getOrientedImage(image, (img) => {\r\n                    if (this.settings.dynamicSizing) {\r\n                        const canvas = this.cropcanvas.nativeElement;\r\n                        this.settings.canvasWidth = canvas.offsetWidth;\r\n                        this.settings.canvasHeight = canvas.offsetHeight;\r\n                        this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, false);\r\n                    }\r\n                    this.cropper.setImage(img);\r\n                    if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n                        this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n                    }\r\n                    this.image.original = img;\r\n                    let bounds = this.cropper.getCropBounds();\r\n                    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n                    if (!this.image) {\r\n                        this.image = image;\r\n                    }\r\n                    if (newBounds != null) {\r\n                        bounds = newBounds;\r\n                        this.cropper.setBounds(bounds);\r\n                        this.cropper.updateCropPosition(bounds);\r\n                    }\r\n                    this.onCrop.emit(bounds);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    isCropPositionChanged(changes) {\r\n        if (this.cropper &&\r\n            changes.cropPosition &&\r\n            this.isCropPositionUpdateNeeded) {\r\n            return true;\r\n        }\r\n        else {\r\n            this.isCropPositionUpdateNeeded = true;\r\n            return false;\r\n        }\r\n    }\r\n    updateCropBounds() {\r\n        const cropBound = this.cropper.getCropBounds();\r\n        this.cropPositionChange.emit(new CropPosition(cropBound.left, cropBound.top, cropBound.width, cropBound.height));\r\n        this.isCropPositionUpdateNeeded = false;\r\n    }\r\n    getOrientedImage(image, callback) {\r\n        let img;\r\n        this.exif.getData(image, () => {\r\n            const orientation = this.exif.getTag(image, 'Orientation');\r\n            if ([3, 6, 8].indexOf(orientation) > -1) {\r\n                const canvas = document.createElement('canvas');\r\n                const ctx = canvas.getContext('2d');\r\n                let cw = image.width;\r\n                let ch = image.height;\r\n                let cx = 0;\r\n                let cy = 0;\r\n                let deg = 0;\r\n                switch (orientation) {\r\n                    case 3:\r\n                        cx = -image.width;\r\n                        cy = -image.height;\r\n                        deg = 180;\r\n                        break;\r\n                    case 6:\r\n                        cw = image.height;\r\n                        ch = image.width;\r\n                        cy = -image.height;\r\n                        deg = 90;\r\n                        break;\r\n                    case 8:\r\n                        cw = image.height;\r\n                        ch = image.width;\r\n                        cx = -image.width;\r\n                        deg = 270;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                canvas.width = cw;\r\n                canvas.height = ch;\r\n                ctx.rotate((deg * Math.PI) / 180);\r\n                ctx.drawImage(image, cx, cy);\r\n                img = document.createElement('img');\r\n                img.width = cw;\r\n                img.height = ch;\r\n                img.addEventListener('load', () => {\r\n                    callback(img);\r\n                });\r\n                img.src = canvas.toDataURL('image/png');\r\n            }\r\n            else {\r\n                img = image;\r\n                callback(img);\r\n            }\r\n        });\r\n    }\r\n}\nImageCropperComponent.ɵfac = function ImageCropperComponent_Factory(t) { return new (t || ImageCropperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nImageCropperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ImageCropperComponent, selectors: [[\"img-cropper\"]], viewQuery: function ImageCropperComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cropcanvas = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    } }, inputs: { settings: \"settings\", cropper: \"cropper\", image: \"image\", inputImage: \"inputImage\", cropPosition: \"cropPosition\" }, outputs: { cropPositionChange: \"cropPositionChange\", onCrop: \"onCrop\", imageSet: \"imageSet\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 4, vars: 1, consts: [[1, \"ng2-imgcrop\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\", 4, \"ngIf\"], [3, \"mousedown\", \"touchmove\", \"touchend\", \"touchstart\"], [\"cropcanvas\", \"\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"fileInput\", \"\"]], template: function ImageCropperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, ImageCropperComponent_input_1_Template, 2, 0, \"input\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"canvas\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ImageCropperComponent_Template_canvas_mousedown_2_listener($event) { return ctx.onMouseDown($event); })(\"touchmove\", function ImageCropperComponent_Template_canvas_touchmove_2_listener($event) { return ctx.onTouchMove($event); })(\"touchend\", function ImageCropperComponent_Template_canvas_touchend_2_listener($event) { return ctx.onTouchEnd($event); })(\"touchstart\", function ImageCropperComponent_Template_canvas_touchstart_2_listener($event) { return ctx.onTouchStart($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.settings.noFileInput);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });\r\nImageCropperComponent.ctorParameters = () => [\r\n    { type: Renderer2 },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\nImageCropperComponent.propDecorators = {\r\n    cropcanvas: [{ type: ViewChild, args: ['cropcanvas', { static: true },] }],\r\n    fileInput: [{ type: ViewChild, args: ['fileInput',] }],\r\n    settings: [{ type: Input }],\r\n    image: [{ type: Input }],\r\n    inputImage: [{ type: Input }],\r\n    cropper: [{ type: Input }],\r\n    cropPosition: [{ type: Input }],\r\n    cropPositionChange: [{ type: Output }],\r\n    onCrop: [{ type: Output }],\r\n    imageSet: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'img-cropper',\n                template: \"<span class=\\\"ng2-imgcrop\\\">\\r\\n  <input\\r\\n    *ngIf=\\\"!settings.noFileInput\\\"\\r\\n    #fileInput\\r\\n    type=\\\"file\\\"\\r\\n    accept=\\\"image/*\\\"\\r\\n    (change)=\\\"fileChangeListener($event)\\\"\\r\\n  />\\r\\n  <canvas\\r\\n    #cropcanvas\\r\\n    (mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (touchmove)=\\\"onTouchMove($event)\\\"\\r\\n    (touchend)=\\\"onTouchEnd($event)\\\"\\r\\n    (touchstart)=\\\"onTouchStart($event)\\\"\\r\\n  >\\r\\n  </canvas>\\r\\n</span>\\r\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { cropPositionChange: [{\n            type: Output\n        }], onCrop: [{\n            type: Output\n        }], imageSet: [{\n            type: Output\n        }], settings: [{\n            type: Input\n        }], cropper: [{\n            type: Input\n        }], image: [{\n            type: Input\n        }], cropcanvas: [{\n            type: ViewChild,\n            args: ['cropcanvas', { static: true }]\n        }], fileInput: [{\n            type: ViewChild,\n            args: ['fileInput']\n        }], inputImage: [{\n            type: Input\n        }], cropPosition: [{\n            type: Input\n        }] }); })();\n\nclass ImageCropperModule {\r\n}\nImageCropperModule.ɵfac = function ImageCropperModule_Factory(t) { return new (t || ImageCropperModule)(); };\nImageCropperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ImageCropperModule });\nImageCropperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ImageCropperComponent],\n                exports: [ImageCropperComponent],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageCropperModule, { declarations: function () { return [ImageCropperComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ImageCropperComponent]; } }); })();\n\nclass ImageCropperService {\r\n    constructor() { }\r\n}\nImageCropperService.ɵfac = function ImageCropperService_Factory(t) { return new (t || ImageCropperService)(); };\r\nImageCropperService.ɵprov = ɵɵdefineInjectable({ factory: function ImageCropperService_Factory() { return new ImageCropperService(); }, token: ImageCropperService, providedIn: \"root\" });\r\nImageCropperService.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImageCropperService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n// looks like this CropService is never used\r\nclass CropService {\r\n    init(canvas) {\r\n        this.canvas = canvas;\r\n        this.ctx = this.canvas.getContext('2d');\r\n    }\r\n}\n\n/*\r\n * Public API Surface of ngx-img-cropper\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Bounds, CornerMarker, CropPosition, CropService, CropTouch, CropperDrawSettings, CropperSettings, DragMarker, Exif, Fraction, Handle, ImageCropper, ImageCropperComponent, ImageCropperDataShare, ImageCropperModel, ImageCropperModule, ImageCropperService, Point, PointPool, ImageCropperModel as ɵa };\n\n//# sourceMappingURL=ngx-img-cropper.js.map"]},"metadata":{},"sourceType":"module"}